webpackJsonp([7],{473:function(n,s){n.exports={content:["article",["h2","1 \u524d\u8a00"],["p","\u672c\u6587\u6863\u7684\u76ee\u6807\u662f\u4f7f ECMAScript \u65b0\u7279\u6027\u7684\u4ee3\u7801\u98ce\u683c\u4fdd\u6301\u4e00\u81f4\uff0c\u5e76\u7ed9\u4e88\u4e00\u4e9b\u5b9e\u8df5\u5efa\u8bae\u3002"],["p","\u672c\u6587\u6863\u4ec5\u5305\u542b\u65b0\u7279\u6027\u90e8\u5206\u3002"],["p","\u7531\u4e8e ECMAScript \u4f9d\u7136\u5728\u5feb\u901f\u7684\u4e0d\u65ad\u53d1\u5c55\uff0c\u672c\u6587\u6863\u4e5f\u5c06\u53ef\u80fd\u968f\u65f6\u4fdd\u6301\u66f4\u65b0\u3002\u66f4\u65b0\u5185\u5bb9\u4e3b\u8981\u6d89\u53ca\u5bf9\u65b0\u589e\u7684\u8bed\u8a00\u7279\u6027\u7684\u683c\u5f0f\u89c4\u8303\u5316\u3001\u5b9e\u8df5\u6307\u5bfc\uff0c\u5f15\u64ce\u4e0e\u7f16\u8bd1\u5668\u73af\u5883\u53d8\u5316\u7684\u4f7f\u7528\u6307\u5bfc\u3002"],["h2","2 \u4ee3\u7801\u98ce\u683c"],["h3","2.1 \u6587\u4ef6"],["h4",["span","\u5efa\u8bae"]," ESNext \u8bed\u6cd5\u7684 JavaScript \u6587\u4ef6\u4f7f\u7528 ",["code",".js"]," \u6269\u5c55\u540d\u3002"],["h4",["span","\u5f3a\u5236"]," \u5f53\u6587\u4ef6\u65e0\u6cd5\u4f7f\u7528 ",["code",".js"]," \u6269\u5c55\u540d\u65f6\uff0c\u4f7f\u7528 ",["code",".es"]," \u6269\u5c55\u540d\u3002"],["p","\u89e3\u91ca\uff1a"],["p","\u67d0\u4e9b\u5e94\u7528\u5f00\u53d1\u65f6\uff0c\u53ef\u80fd\u540c\u65f6\u5305\u542b ES 5 \u548c ESNext \u6587\u4ef6\uff0c\u8fd0\u884c\u73af\u5883\u4ec5\u652f\u6301 ES5\uff0cESNext \u6587\u4ef6\u9700\u8981\u7ecf\u8fc7\u9884\u7f16\u8bd1\u3002\u90e8\u5206\u573a\u666f\u4e0b\uff0c\u7f16\u8bd1\u5de5\u5177\u7684\u9009\u62e9\u53ef\u80fd\u9700\u8981\u901a\u8fc7\u6269\u5c55\u540d\u533a\u5206\uff0c\u9700\u8981\u91cd\u65b0\u5b9a\u4e49 ESNext \u6587\u4ef6\u7684\u6269\u5c55\u540d\u3002\u6b64\u65f6\uff0cESNext \u6587\u4ef6\u5fc5\u987b\u4f7f\u7528 ",["code",".es"]," \u6269\u5c55\u540d\u3002"],["p","\u4f46\u662f\uff0c\u66f4\u63a8\u8350\u4f7f\u7528\u5176\u4ed6\u6761\u4ef6\u4f5c\u4e3a\u662f\u5426\u9700\u8981\u7f16\u8bd1\u7684\u533a\u5206\uff1a"],["ol",["li",["p","\u57fa\u4e8e\u6587\u4ef6\u5185\u5bb9\u3002"]],["li",["p","\u4e0d\u540c\u7c7b\u578b\u6587\u4ef6\u653e\u5728\u4e0d\u540c\u76ee\u5f55\u4e0b\u3002"]]],["h3","2.2 \u7ed3\u6784"],["h4","2.2.1 \u7f29\u8fdb"],["h5",["span","\u5efa\u8bae"]," \u4f7f\u7528\u591a\u884c\u6a21\u677f\u5b57\u7b26\u4e32\u65f6\u9075\u5faa\u7f29\u8fdb\u539f\u5219\u3002\u5f53\u7a7a\u884c\u4e0e\u7a7a\u767d\u5b57\u7b26\u654f\u611f\u65f6\uff0c\u4e0d\u4f7f\u7528\u591a\u884c\u6a21\u677f\u5b57\u7b26\u4e32\u3002"],["p","\u89e3\u91ca\uff1a"],["p",["code","2"]," \u7a7a\u683c\u4e3a\u4e00\u4e2a\u7f29\u8fdb\uff0c\u6362\u884c\u540e\u6dfb\u52a0\u4e00\u5c42\u7f29\u8fdb\u3002\u5c06\u8d77\u59cb\u548c\u7ed3\u675f\u7684 ",["code","`"]," \u7b26\u53f7\u5355\u72ec\u653e\u4e00\u884c\uff0c\u6709\u52a9\u4e8e\u751f\u6210 HTML \u65f6\u7684\u6807\u7b7e\u5bf9\u9f50\u3002"],["p","\u4e3a\u907f\u514d\u7834\u574f\u7f29\u8fdb\u7684\u7edf\u4e00\uff0c\u5f53\u7a7a\u884c\u4e0e\u7a7a\u767d\u5b57\u7b26\u654f\u611f\u65f6\uff0c\u5efa\u8bae\u4f7f\u7528 ",["code","\u591a\u4e2a\u6a21\u677f\u5b57\u7b26\u4e32"]," \u6216 ",["code","\u666e\u901a\u5b57\u7b26\u4e32"]," \u8fdb\u884c\u8fde\u63a5\u8fd0\u7b97\uff0c\u4e5f\u53ef\u4f7f\u7528\u6570\u7ec4 ",["code","join"]," \u751f\u6210\u5b57\u7b26\u4e32\u3002"],["p","\u793a\u4f8b\uff1a"],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">let</span> html <span class="token operator">=</span> <span class="token template-string"><span class="token string">`\n        &lt;div>\n            &lt;p>&lt;/p>\n            &lt;p>&lt;/p>\n        &lt;/div>\n    `</span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment" spellcheck="true">// Good</span>\n<span class="token keyword">function</span> <span class="token function">greeting</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token string">\'Hello, \\n\'</span> <span class="token operator">+</span> <span class="token template-string"><span class="token string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>name<span class="token punctuation">.</span>firstName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>name<span class="token punctuation">.</span>lastName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment" spellcheck="true">// Bad</span>\n<span class="token keyword">function</span> <span class="token function">greeting</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token template-string"><span class="token string">`Hello,\n</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>name<span class="token punctuation">.</span>firstName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>name<span class="token punctuation">.</span>lastName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>'},["code","// good\nfunction foo() {\n  let html = `\n        <div>\n            <p></p>\n            <p></p>\n        </div>\n    `;\n}\n\n// Good\nfunction greeting(name) {\n  return 'Hello, \\n' + `${name.firstName} ${name.lastName}`;\n}\n\n// Bad\nfunction greeting(name) {\n  return `Hello,\n${name.firstName} ${name.lastName}`;\n}"]],["h4","2.2.2 \u7a7a\u683c"],["h5",["span","\u5f3a\u5236"]," \u4f7f\u7528 ",["code","generator"]," \u65f6\uff0c",["code","*"]," \u524d\u9762\u4e0d\u5141\u8bb8\u6709\u7a7a\u683c\uff0c",["code","*"]," \u540e\u9762\u5fc5\u987b\u6709\u4e00\u4e2a\u7a7a\u683c\u3002"],["p","\u793a\u4f8b\uff1a"],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">caller</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">yield</span> <span class="token string">\'a\'</span><span class="token punctuation">;</span>\n  <span class="token keyword">yield</span><span class="token operator">*</span> <span class="token function">callee</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">yield</span> <span class="token string">\'d\'</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">caller</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">yield</span> <span class="token string">\'a\'</span><span class="token punctuation">;</span>\n  <span class="token keyword">yield</span><span class="token operator">*</span> <span class="token function">callee</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">yield</span> <span class="token string">\'d\'</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>'},["code","// good\nfunction* caller() {\n  yield 'a';\n  yield* callee();\n  yield 'd';\n}\n\n// bad\nfunction* caller() {\n  yield 'a';\n  yield* callee();\n  yield 'd';\n}"]],["h4","2.2.3 \u8bed\u53e5"],["h5",["span","\u5f3a\u5236"]," \u7c7b\u58f0\u660e\u7ed3\u675f\u4e0d\u5141\u8bb8\u6dfb\u52a0\u5206\u53f7\u3002"],["p","\u89e3\u91ca\uff1a"],["p","\u4e0e\u51fd\u6570\u58f0\u660e\u4fdd\u6301\u4e00\u81f4\u3002"],["h5",["span","\u5f3a\u5236"]," ",["code","export"]," \u8bed\u53e5\u540e\uff0c\u4e0d\u5141\u8bb8\u51fa\u73b0\u8868\u793a\u7a7a\u8bed\u53e5\u7684\u5206\u53f7\u3002"],["p","\u89e3\u91ca\uff1a"],["p",["code","export"]," \u5173\u952e\u5b57\u4e0d\u5f71\u54cd\u540e\u7eed\u8bed\u53e5\u7c7b\u578b\u3002"],["p","\u793a\u4f8b\uff1a"],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span>\n\n\n<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>'},["code","// good\nexport function foo() {\n}\n\nexport default function bar() {\n}\n\n\n// bad\nexport function foo() {\n};\n\nexport default function bar() {\n};"]],["h5",["span","\u5f3a\u5236"]," \u7bad\u5934\u51fd\u6570\u7684\u53c2\u6570\u53ea\u6709\u4e00\u4e2a\uff0c\u5e76\u4e14\u4e0d\u5305\u542b\u89e3\u6784\u65f6\uff0c\u53c2\u6570\u90e8\u5206\u7684\u62ec\u53f7\u5fc5\u987b\u7701\u7565\u3002"],["p","\u793a\u4f8b\uff1a"],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// good</span>\nlist<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>item <span class="token operator">=</span><span class="token operator">></span> item <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">let</span> fetchName <span class="token operator">=</span> <span class="token keyword">async</span> id <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n  <span class="token keyword">let</span> user <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">request</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`users/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>id<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> user<span class="token punctuation">.</span>fullName<span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// bad</span>\nlist<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>item <span class="token operator">=</span><span class="token operator">></span> item <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">let</span> fetchName <span class="token operator">=</span> <span class="token keyword">async</span> id <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n  <span class="token keyword">let</span> user <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">request</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`users/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>id<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> user<span class="token punctuation">.</span>fullName<span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>'},["code","// good\nlist.map(item => item * 2);\n\n// good\nlet fetchName = async id => {\n  let user = await request(`users/${id}`);\n  return user.fullName;\n};\n\n// bad\nlist.map(item => item * 2);\n\n// bad\nlet fetchName = async id => {\n  let user = await request(`users/${id}`);\n  return user.fullName;\n};"]],["h5",["span","\u5efa\u8bae"]," \u7bad\u5934\u51fd\u6570\u7684\u51fd\u6570\u4f53\u53ea\u6709\u4e00\u4e2a\u5355\u884c\u8868\u8fbe\u5f0f\u8bed\u53e5\uff0c\u4e14\u4f5c\u4e3a\u8fd4\u56de\u503c\u65f6\uff0c\u7701\u7565 ",["code","{}"]," \u548c ",["code","return"],"\u3002"],["p","\u5982\u679c\u5355\u4e2a\u8868\u8fbe\u5f0f\u8fc7\u957f\uff0c\u53ef\u4ee5\u4f7f\u7528 ",["code","()"]," \u8fdb\u884c\u5305\u88f9\u3002"],["p","\u793a\u4f8b\uff1a"],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// good</span>\nlist<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>item <span class="token operator">=</span><span class="token operator">></span> item <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">let</span> foo <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>condition <span class="token operator">?</span> <span class="token function">returnValueA</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token function">returnValueB</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// bad</span>\nlist<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>item <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> item <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>'},["code","// good\nlist.map(item => item * 2);\n\nlet foo = () => (condition ? returnValueA() : returnValueB());\n\n// bad\nlist.map(item => {\n  return item * 2;\n});"]],["h5",["span","\u5efa\u8bae"]," \u7bad\u5934\u51fd\u6570\u7684\u51fd\u6570\u4f53\u53ea\u6709\u4e00\u4e2a ",["code","Object Literal"],"\uff0c\u4e14\u4f5c\u4e3a\u8fd4\u56de\u503c\u65f6\uff0c\u4f7f\u7528 ",["code","()"]," \u5305\u88f9\u3002"],["p","\u793a\u4f8b\uff1a"],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// good</span>\nlist<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>item <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span><span class="token punctuation">{</span> name<span class="token punctuation">:</span> item<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> email<span class="token punctuation">:</span> item<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>'},["code","// good\nlist.map(item => ({ name: item[0], email: item[1] }));"]],["h5",["span","\u5f3a\u5236"]," \u89e3\u6784\u591a\u4e2a\u53d8\u91cf\u65f6\uff0c\u5982\u679c\u8d85\u8fc7\u884c\u957f\u5ea6\u9650\u5236\uff0c\u6bcf\u4e2a\u89e3\u6784\u7684\u53d8\u91cf\u5fc5\u987b\u5355\u72ec\u4e00\u884c\u3002"],["p","\u89e3\u91ca\uff1a"],["p","\u592a\u591a\u7684\u53d8\u91cf\u89e3\u6784\u4f1a\u8ba9\u4e00\u884c\u7684\u4ee3\u7801\u975e\u5e38\u957f\uff0c\u6781\u6709\u53ef\u80fd\u8d85\u8fc7\u5355\u884c\u957f\u5ea6\u63a7\u5236\uff0c\u4f7f\u4ee3\u7801\u53ef\u8bfb\u6027\u4e0b\u964d\u3002"],["p","\u793a\u4f8b\uff1a"],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">let</span> <span class="token punctuation">{</span>\n  name<span class="token punctuation">:</span> personName<span class="token punctuation">,</span>\n  email<span class="token punctuation">:</span> personEmail<span class="token punctuation">,</span>\n  sex<span class="token punctuation">:</span> personSex<span class="token punctuation">,</span>\n  age<span class="token punctuation">:</span> personAge<span class="token punctuation">,</span>\n<span class="token punctuation">}</span> <span class="token operator">=</span> person<span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">let</span> <span class="token punctuation">{</span>\n  name<span class="token punctuation">:</span> personName<span class="token punctuation">,</span>\n  email<span class="token punctuation">:</span> personEmail<span class="token punctuation">,</span>\n  sex<span class="token punctuation">:</span> personSex<span class="token punctuation">,</span>\n  age<span class="token punctuation">:</span> personAge<span class="token punctuation">,</span>\n<span class="token punctuation">}</span> <span class="token operator">=</span> person<span class="token punctuation">;</span>'},["code","// good\nlet {\n  name: personName,\n  email: personEmail,\n  sex: personSex,\n  age: personAge,\n} = person;\n\n// bad\nlet {\n  name: personName,\n  email: personEmail,\n  sex: personSex,\n  age: personAge,\n} = person;"]],["h2","3 \u8bed\u8a00\u7279\u6027"],["h3","3.1 \u53d8\u91cf"],["h4",["span","\u5f3a\u5236"]," \u4f7f\u7528 ",["code","let"]," \u548c ",["code","const"]," \u5b9a\u4e49\u53d8\u91cf\uff0c\u4e0d\u4f7f\u7528 ",["code","var"],"\u3002"],["p","\u89e3\u91ca\uff1a"],["p","\u4f7f\u7528 ",["code","let"]," \u548c ",["code","const"]," \u5b9a\u4e49\u65f6\uff0c\u53d8\u91cf\u4f5c\u7528\u57df\u8303\u56f4\u66f4\u660e\u786e\u3002"],["p","\u793a\u4f8b\uff1a"],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n\n<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>'},["code","// good\nfor (let i = 0; i < 10; i++) {}\n\n// bad\nfor (var i = 0; i < 10; i++) {}"]],["h3","3.2 \u89e3\u6784"],["h4",["span","\u5f3a\u5236"]," \u4e0d\u8981\u4f7f\u7528 3 \u5c42\u53ca\u4ee5\u4e0a\u7684\u89e3\u6784\u3002"],["p","\u89e3\u91ca\uff1a"],["p","\u8fc7\u591a\u5c42\u6b21\u7684\u89e3\u6784\u4f1a\u8ba9\u4ee3\u7801\u53d8\u5f97\u96be\u4ee5\u9605\u8bfb\u3002"],["p","\u793a\u4f8b\uff1a"],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">let</span> <span class="token punctuation">{</span> documentElement<span class="token punctuation">:</span> <span class="token punctuation">{</span> firstElementChild<span class="token punctuation">:</span> <span class="token punctuation">{</span> nextSibling <span class="token punctuation">}</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span> <span class="token operator">=</span> window<span class="token punctuation">;</span>'},["code","// bad\nlet { documentElement: { firstElementChild: { nextSibling } } } = window;"]],["h4",["span","\u5efa\u8bae"]," \u4f7f\u7528\u89e3\u6784\u51cf\u5c11\u4e2d\u95f4\u53d8\u91cf\u3002"],["p","\u89e3\u91ca\uff1a"],["p","\u5e38\u89c1\u573a\u666f\u5982\u53d8\u91cf\u503c\u4ea4\u6362\uff0c\u53ef\u80fd\u4ea7\u751f\u4e2d\u95f4\u53d8\u91cf\u3002\u8fd9\u79cd\u573a\u666f\u63a8\u8350\u4f7f\u7528\u89e3\u6784\u3002"],["p","\u793a\u4f8b\uff1a"],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// good</span>\n<span class="token punctuation">[</span>x<span class="token punctuation">,</span> y<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>y<span class="token punctuation">,</span> x<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">let</span> temp <span class="token operator">=</span> x<span class="token punctuation">;</span>\nx <span class="token operator">=</span> y<span class="token punctuation">;</span>\ny <span class="token operator">=</span> temp<span class="token punctuation">;</span>'},["code","// good\n[x, y] = [y, x];\n\n// bad\nlet temp = x;\nx = y;\ny = temp;"]],["h4",["span","\u5f3a\u5236"]," \u4ec5\u5b9a\u4e49\u4e00\u4e2a\u53d8\u91cf\u65f6\u4e0d\u5141\u8bb8\u4f7f\u7528\u89e3\u6784\u3002"],["p","\u89e3\u91ca\uff1a"],["p","\u5728\u8fd9\u79cd\u573a\u666f\u4e0b\uff0c\u4f7f\u7528\u89e3\u6784\u5c06\u964d\u4f4e\u4ee3\u7801\u53ef\u8bfb\u6027\u3002"],["p","\u793a\u4f8b\uff1a"],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">let</span> len <span class="token operator">=</span> myString<span class="token punctuation">.</span>length<span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">let</span> <span class="token punctuation">{</span> length<span class="token punctuation">:</span> len <span class="token punctuation">}</span> <span class="token operator">=</span> myString<span class="token punctuation">;</span>'},["code","// good\nlet len = myString.length;\n\n// bad\nlet { length: len } = myString;"]],["h4",["span","\u5f3a\u5236"]," \u5982\u679c\u4e0d\u8282\u7701\u7f16\u5199\u65f6\u4ea7\u751f\u7684\u4e2d\u95f4\u53d8\u91cf\uff0c\u89e3\u6784\u8868\u8fbe\u5f0f ",["code","="]," \u53f7\u53f3\u8fb9\u4e0d\u5141\u8bb8\u662f ",["code","ObjectLiteral"]," \u548c ",["code","ArrayLiteral"],"\u3002"],["p","\u89e3\u91ca\uff1a"],["p","\u5728\u8fd9\u79cd\u573a\u666f\u4e0b\uff0c\u4f7f\u7528\u89e3\u6784\u5c06\u964d\u4f4e\u4ee3\u7801\u53ef\u8bfb\u6027\uff0c\u901a\u5e38\u4e5f\u5e76\u65e0\u6536\u76ca\u3002"],["p","\u793a\u4f8b\uff1a"],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">let</span> <span class="token punctuation">{</span> first<span class="token punctuation">:</span> firstName<span class="token punctuation">,</span> last<span class="token punctuation">:</span> lastName <span class="token punctuation">}</span> <span class="token operator">=</span> person<span class="token punctuation">;</span>\n<span class="token keyword">let</span> one <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n<span class="token keyword">let</span> two <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">let</span> <span class="token punctuation">[</span>one<span class="token punctuation">,</span> two<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>'},["code","// good\nlet { first: firstName, last: lastName } = person;\nlet one = 1;\nlet two = 2;\n\n// bad\nlet [one, two] = [1, 2];"]],["h4",["span","\u5f3a\u5236"]," \u4f7f\u7528\u5269\u4f59\u8fd0\u7b97\u7b26\u65f6\uff0c\u5269\u4f59\u8fd0\u7b97\u7b26\u4e4b\u524d\u7684\u6240\u6709\u5143\u7d20\u5fc5\u9700\u5177\u540d\u3002"],["p","\u89e3\u91ca\uff1a"],["p","\u5269\u4f59\u8fd0\u7b97\u7b26\u4e4b\u524d\u7684\u5143\u7d20\u7701\u7565\u540d\u79f0\u53ef\u80fd\u5e26\u6765\u8f83\u5927\u7684\u7a0b\u5e8f\u9605\u8bfb\u969c\u788d\u3002\u5982\u679c\u4ec5\u4ec5\u4e3a\u4e86\u53d6\u6570\u7ec4\u540e\u51e0\u9879\uff0c\u8bf7\u4f7f\u7528 ",["code","slice"]," \u65b9\u6cd5\u3002"],["p","\u793a\u4f8b\uff1a"],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">let</span> <span class="token punctuation">[</span>one<span class="token punctuation">,</span> two<span class="token punctuation">,</span> <span class="token operator">...</span>anyOther<span class="token punctuation">]</span> <span class="token operator">=</span> myArray<span class="token punctuation">;</span>\n<span class="token keyword">let</span> other <span class="token operator">=</span> myArray<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">let</span> <span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token punctuation">,</span> <span class="token punctuation">,</span> <span class="token operator">...</span>other<span class="token punctuation">]</span> <span class="token operator">=</span> myArray<span class="token punctuation">;</span>'},["code","// good\nlet [one, two, ...anyOther] = myArray;\nlet other = myArray.slice(3);\n\n// bad\nlet [, , , ...other] = myArray;"]],["h3","3.3 \u6a21\u677f\u5b57\u7b26\u4e32"],["h4",["span","\u5f3a\u5236"]," \u5b57\u7b26\u4e32\u5185\u53d8\u91cf\u66ff\u6362\u65f6\uff0c\u4e0d\u8981\u4f7f\u7528 ",["code","2"]," \u6b21\u53ca\u4ee5\u4e0a\u7684\u51fd\u6570\u8c03\u7528\u3002"],["p","\u89e3\u91ca\uff1a"],["p","\u5728\u53d8\u91cf\u66ff\u6362\u7b26\u5185\u6709\u592a\u591a\u7684\u51fd\u6570\u8c03\u7528\u7b49\u590d\u6742\u8bed\u6cd5\u4f1a\u5bfc\u81f4\u53ef\u8bfb\u6027\u4e0b\u964d\u3002"],["p","\u793a\u4f8b\uff1a"],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">let</span> fullName <span class="token operator">=</span> <span class="token function">getFullName</span><span class="token punctuation">(</span><span class="token function">getFirstName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">getLastName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">let</span> s <span class="token operator">=</span> <span class="token template-string"><span class="token string">`Hello </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>fullName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">let</span> s <span class="token operator">=</span> <span class="token template-string"><span class="token string">`Hello </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token function">getFullName</span><span class="token punctuation">(</span><span class="token function">getFirstName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">getLastName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">;</span>'},["code","// good\nlet fullName = getFullName(getFirstName(), getLastName());\nlet s = `Hello ${fullName}`;\n\n// bad\nlet s = `Hello ${getFullName(getFirstName(), getLastName())}`;"]],["h3","3.4 \u51fd\u6570"],["h4",["span","\u5efa\u8bae"]," \u4f7f\u7528\u53d8\u91cf\u9ed8\u8ba4\u8bed\u6cd5\u4ee3\u66ff\u57fa\u4e8e\u6761\u4ef6\u5224\u65ad\u7684\u9ed8\u8ba4\u503c\u58f0\u660e\u3002"],["p","\u89e3\u91ca\uff1a"],["p","\u6dfb\u52a0\u9ed8\u8ba4\u503c\u6709\u52a9\u4e8e\u5f15\u64ce\u7684\u4f18\u5316\uff0c\u5728\u672a\u6765 ",["code","strong mode"]," \u4e0b\u4e5f\u4f1a\u6709\u66f4\u597d\u7684\u6548\u679c\u3002"],["p","\u793a\u4f8b\uff1a"],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span>text <span class="token operator">=</span> <span class="token string">\'hello\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n\n<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  text <span class="token operator">=</span> text <span class="token operator">||</span> <span class="token string">\'hello\'</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>'},["code","// good\nfunction foo(text = 'hello') {}\n\n// bad\nfunction foo(text) {\n  text = text || 'hello';\n}"]],["h4",["span","\u5f3a\u5236"]," \u4e0d\u8981\u4f7f\u7528 ",["code","arguments"]," \u5bf9\u8c61\uff0c\u5e94\u4f7f\u7528 ",["code","...args"]," \u4ee3\u66ff\u3002"],["p","\u89e3\u91ca\uff1a"],["p","\u5728\u672a\u6765 ",["code","strong mode"]," \u4e0b ",["code","arguments"]," \u5c06\u88ab\u7981\u7528\u3002"],["p","\u793a\u4f8b\uff1a"],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>args<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">\'\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span>join<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>arguments<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>'},["code","// good\nfunction foo(...args) {\n  console.log(args.join(''));\n}\n\n// bad\nfunction foo() {\n  console.log([].join.call(arguments));\n}"]],["h3","3.5 \u7bad\u5934\u51fd\u6570"],["h4",["span","\u5f3a\u5236"]," \u4e00\u4e2a\u51fd\u6570\u88ab\u8bbe\u8ba1\u4e3a\u9700\u8981 ",["code","call"]," \u548c ",["code","apply"]," \u7684\u65f6\u5019\uff0c\u4e0d\u80fd\u662f\u7bad\u5934\u51fd\u6570\u3002"],["p","\u89e3\u91ca\uff1a"],["p","\u7bad\u5934\u51fd\u6570\u4f1a\u5f3a\u5236\u7ed1\u5b9a\u5f53\u524d\u73af\u5883\u4e0b\u7684 ",["code","this"],"\u3002"],["h3","3.6 \u5bf9\u8c61"],["h4",["span","\u5efa\u8bae"]," \u5b9a\u4e49\u5bf9\u8c61\u65f6\uff0c\u5982\u679c\u6240\u6709\u952e\u5747\u6307\u5411\u540c\u540d\u53d8\u91cf\uff0c\u5219\u6240\u6709\u952e\u90fd\u4f7f\u7528\u7f29\u5199\uff1b\u5982\u679c\u6709\u4e00\u4e2a\u952e\u65e0\u6cd5\u6307\u5411\u540c\u540d\u53d8\u91cf\uff0c\u5219\u6240\u6709\u952e\u90fd\u4e0d\u4f7f\u7528\u7f29\u5199\u3002"],["p","\u89e3\u91ca\uff1a"],["p","\u76ee\u7684\u5728\u4e8e\u4fdd\u6301\u6240\u6709\u952e\u503c\u5bf9\u58f0\u660e\u7684\u4e00\u81f4\u6027\u3002"],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">let</span> foo <span class="token operator">=</span> <span class="token punctuation">{</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> z <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">let</span> foo2 <span class="token operator">=</span> <span class="token punctuation">{</span>\n  x<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n  y<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span>\n  z<span class="token punctuation">:</span> z<span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">let</span> foo <span class="token operator">=</span> <span class="token punctuation">{</span>\n  x<span class="token punctuation">:</span> x<span class="token punctuation">,</span>\n  y<span class="token punctuation">:</span> y<span class="token punctuation">,</span>\n  z<span class="token punctuation">:</span> z<span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">let</span> foo2 <span class="token operator">=</span> <span class="token punctuation">{</span>\n  x<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n  y<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span>\n  z<span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>'},["code","// good\nlet foo = { x, y, z };\n\nlet foo2 = {\n  x: 1,\n  y: 2,\n  z: z,\n};\n\n// bad\nlet foo = {\n  x: x,\n  y: y,\n  z: z,\n};\n\nlet foo2 = {\n  x: 1,\n  y: 2,\n  z,\n};"]],["h4",["span","\u5f3a\u5236"]," \u5b9a\u4e49\u65b9\u6cd5\u65f6\u4f7f\u7528 ",["code","MethodDefinition"]," \u8bed\u6cd5\uff0c\u4e0d\u4f7f\u7528 ",["code","PropertyName: FunctionExpression"]," \u8bed\u6cd5\u3002"],["p","\u89e3\u91ca\uff1a"],["p",["code","MethodDefinition"]," \u8bed\u6cd5\u66f4\u6e05\u6670\u7b80\u6d01\u3002"],["p","\u793a\u4f8b\uff1a"],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">let</span> foo <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token function">bar</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> x <span class="token operator">+</span> y<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">let</span> foo <span class="token operator">=</span> <span class="token punctuation">{</span>\n  bar<span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> x <span class="token operator">+</span> y<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>'},["code","// good\nlet foo = {\n  bar(x, y) {\n    return x + y;\n  },\n};\n\n// bad\nlet foo = {\n  bar: function(x, y) {\n    return x + y;\n  },\n};"]],["h4",["span","\u5efa\u8bae"]," \u4f7f\u7528 ",["code","Object.keys"]," \u6216 ",["code","Object.entries"]," \u8fdb\u884c\u5bf9\u8c61\u904d\u5386\u3002"],["p","\u89e3\u91ca\uff1a"],["p","\u4e0d\u5efa\u8bae\u4f7f\u7528 ",["code","for .. in"]," \u8fdb\u884c\u5bf9\u8c61\u7684\u904d\u5386\uff0c\u4ee5\u907f\u514d\u9057\u6f0f ",["code","hasOwnProperty"]," \u4ea7\u751f\u7684\u9519\u8bef\u3002"],["p","\u793a\u4f8b\uff1a"],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">of</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>foo<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">let</span> value <span class="token operator">=</span> foo<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> <span class="token punctuation">[</span>key<span class="token punctuation">,</span> value<span class="token punctuation">]</span> <span class="token keyword">of</span> Object<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span>foo<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment" spellcheck="true">// ...</span>\n<span class="token punctuation">}</span>'},["code","// good\nfor (let key of Object.keys(foo)) {\n  let value = foo[key];\n}\n\n// good\nfor (let [key, value] of Object.entries(foo)) {\n  // ...\n}"]],["h4",["span","\u5efa\u8bae"]," \u5b9a\u4e49\u5bf9\u8c61\u7684\u65b9\u6cd5\u4e0d\u5e94\u4f7f\u7528\u7bad\u5934\u51fd\u6570\u3002"],["p","\u89e3\u91ca\uff1a"],["p","\u7bad\u5934\u51fd\u6570\u5c06 ",["code","this"]," \u7ed1\u5b9a\u5230\u5f53\u524d\u73af\u5883\uff0c\u5728 ",["code","obj.method()"]," \u8c03\u7528\u65f6\u5bb9\u6613\u5bfc\u81f4\u4e0d\u671f\u5f85\u7684 ",["code","this"],"\u3002\u9664\u975e\u660e\u786e\u9700\u8981\u7ed1\u5b9a ",["code","this"],"\uff0c\u5426\u5219\u4e0d\u5e94\u4f7f\u7528\u7bad\u5934\u51fd\u6570\u3002"],["p","\u793a\u4f8b\uff1a"],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">let</span> foo <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token function">bar</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> x <span class="token operator">+</span> y<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">let</span> foo <span class="token operator">=</span> <span class="token punctuation">{</span>\n  bar<span class="token punctuation">:</span> <span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> x <span class="token operator">+</span> y<span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>'},["code","// good\nlet foo = {\n  bar(x, y) {\n    return x + y;\n  },\n};\n\n// bad\nlet foo = {\n  bar: (x, y) => x + y,\n};"]],["h4",["span","\u5efa\u8bae"]," \u5c3d\u91cf\u4f7f\u7528\u8ba1\u7b97\u5c5e\u6027\u952e\u5728\u4e00\u4e2a\u5b8c\u6574\u7684\u5b57\u9762\u91cf\u4e2d\u5b8c\u6574\u5730\u5b9a\u4e49\u4e00\u4e2a\u5bf9\u8c61\uff0c\u907f\u514d\u5bf9\u8c61\u5b9a\u4e49\u540e\u76f4\u63a5\u589e\u52a0\u5bf9\u8c61\u5c5e\u6027\u3002"],["p","\u89e3\u91ca\uff1a"],["p","\u5728\u4e00\u4e2a\u5b8c\u6574\u7684\u5b57\u9762\u91cf\u4e2d\u58f0\u660e\u6240\u6709\u7684\u952e\u503c\uff0c\u800c\u4e0d\u9700\u8981\u5c06\u4ee3\u7801\u5206\u6563\u5f00\u6765\uff0c\u6709\u52a9\u4e8e\u63d0\u5347\u4ee3\u7801\u53ef\u8bfb\u6027\u3002"],["p","\u793a\u4f8b\uff1a"],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">const</span> MY_KEY <span class="token operator">=</span> <span class="token string">\'bar\'</span><span class="token punctuation">;</span>\n<span class="token keyword">let</span> foo <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token punctuation">[</span>MY_KEY <span class="token operator">+</span> <span class="token string">\'Hash\'</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">123</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">const</span> MY_KEY <span class="token operator">=</span> <span class="token string">\'bar\'</span><span class="token punctuation">;</span>\n<span class="token keyword">let</span> foo <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\nfoo<span class="token punctuation">[</span>MY_KEY <span class="token operator">+</span> <span class="token string">\'Hash\'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">123</span><span class="token punctuation">;</span>'},["code","// good\nconst MY_KEY = 'bar';\nlet foo = {\n  [MY_KEY + 'Hash']: 123,\n};\n\n// bad\nconst MY_KEY = 'bar';\nlet foo = {};\nfoo[MY_KEY + 'Hash'] = 123;"]],["h3","3.7 \u7c7b"],["h4",["span","\u5f3a\u5236"]," \u4f7f\u7528 ",["code","class"]," \u5173\u952e\u5b57\u5b9a\u4e49\u4e00\u4e2a\u7c7b\u3002"],["p","\u89e3\u91ca\uff1a"],["p","\u76f4\u63a5\u4f7f\u7528 ",["code","class"]," \u5b9a\u4e49\u7c7b\u66f4\u6e05\u6670\u3002\u4e0d\u8981\u518d\u4f7f\u7528 ",["code","function"]," \u548c ",["code","prototype"]," \u5f62\u5f0f\u7684\u5b9a\u4e49\u3002"],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">class</span> <span class="token class-name">TextNode</span> <span class="token punctuation">{</span>\n  <span class="token function">constructor</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> engine<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> value<span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>engine <span class="token operator">=</span> engine<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">function</span> <span class="token function">TextNode</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> engine<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> value<span class="token punctuation">;</span>\n  <span class="token keyword">this</span><span class="token punctuation">.</span>engine <span class="token operator">=</span> engine<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\nTextNode<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>clone <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>'},["code","// good\nclass TextNode {\n  constructor(value, engine) {\n    this.value = value;\n    this.engine = engine;\n  }\n\n  clone() {\n    return this;\n  }\n}\n\n// bad\nfunction TextNode(value, engine) {\n  this.value = value;\n  this.engine = engine;\n}\n\nTextNode.prototype.clone = function() {\n  return this;\n};"]],["h4",["span","\u5f3a\u5236"]," \u4f7f\u7528 ",["code","super"]," \u8bbf\u95ee\u7236\u7c7b\u6210\u5458\uff0c\u800c\u975e\u7236\u7c7b\u7684 ",["code","prototype"],"\u3002"],["p","\u89e3\u91ca\uff1a"],["p","\u4f7f\u7528 ",["code","super"]," \u548c ",["code","super.foo"]," \u53ef\u4ee5\u5feb\u901f\u8bbf\u95ee\u7236\u7c7b\u6210\u5458\uff0c\u800c\u4e0d\u5fc5\u786c\u7f16\u7801\u7236\u7c7b\u6a21\u5757\u800c\u5bfc\u81f4\u4fee\u6539\u548c\u7ef4\u62a4\u7684\u4e0d\u4fbf\uff0c\u540c\u65f6\u66f4\u8282\u7701\u4ee3\u7801\u3002"],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">class</span> <span class="token class-name">TextNode</span> <span class="token keyword">extends</span> <span class="token class-name">Node</span> <span class="token punctuation">{</span>\n  <span class="token function">constructor</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> engine<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">super</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>engine <span class="token operator">=</span> engine<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">setNodeValue</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">setNodeValue</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>textContent <span class="token operator">=</span> value<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">class</span> <span class="token class-name">TextNode</span> <span class="token keyword">extends</span> <span class="token class-name">Node</span> <span class="token punctuation">{</span>\n  <span class="token function">constructor</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> engine<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    Node<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> arguments<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>engine <span class="token operator">=</span> engine<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">setNodeValue</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    Node<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>setNodeValue<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>textContent <span class="token operator">=</span> value<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>'},["code","// good\nclass TextNode extends Node {\n  constructor(value, engine) {\n    super(value);\n    this.engine = engine;\n  }\n\n  setNodeValue(value) {\n    super.setNodeValue(value);\n    this.textContent = value;\n  }\n}\n\n// bad\nclass TextNode extends Node {\n  constructor(value, engine) {\n    Node.apply(this, arguments);\n    this.engine = engine;\n  }\n\n  setNodeValue(value) {\n    Node.prototype.setNodeValue.call(this, value);\n    this.textContent = value;\n  }\n}"]],["h3","3.8 \u6a21\u5757"],["h4",["span","\u5f3a\u5236"]," ",["code","export"]," \u4e0e\u5185\u5bb9\u5b9a\u4e49\u653e\u5728\u4e00\u8d77\u3002"],["p","\u89e3\u91ca\uff1a"],["p","\u4f55\u5904\u58f0\u660e\u8981\u5bfc\u51fa\u7684\u4e1c\u897f\uff0c\u5c31\u5728\u4f55\u5904\u4f7f\u7528 ",["code","export"]," \u5173\u952e\u5b57\uff0c\u4e0d\u5728\u58f0\u660e\u540e\u518d\u7edf\u4e00\u5bfc\u51fa\u3002"],["p","\u793a\u4f8b\uff1a"],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">const</span> bar <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>\n\n\n<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> bar <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token punctuation">{</span>foo<span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token keyword">export</span> <span class="token punctuation">{</span>bar<span class="token punctuation">}</span><span class="token punctuation">;</span>'},["code","// good\nexport function foo() {\n}\n\nexport const bar = 3;\n\n\n// bad\nfunction foo() {\n}\n\nconst bar = 3;\n\nexport {foo};\nexport {bar};"]],["h4",["span","\u5efa\u8bae"]," \u76f8\u4e92\u4e4b\u95f4\u65e0\u5173\u8054\u7684\u5185\u5bb9\u4f7f\u7528\u547d\u540d\u5bfc\u51fa\u3002"],["p","\u89e3\u91ca\uff1a"],["p","\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5de5\u5177\u5bf9\u8c61\u4e2d\u7684\u5404\u4e2a\u65b9\u6cd5\uff0c\u76f8\u4e92\u4e4b\u95f4\u5e76\u6ca1\u6709\u5f3a\u5173\u8054\uff0c\u901a\u5e38\u5916\u90e8\u4f1a\u9009\u62e9\u51e0\u4e2a\u4f7f\u7528\uff0c\u5219\u5e94\u8be5\u4f7f\u7528\u547d\u540d\u5bfc\u51fa\u3002"],["p","\u7b80\u800c\u8a00\u4e4b\uff0c\u5f53\u4e00\u4e2a\u6a21\u5757\u53ea\u626e\u6f14\u547d\u540d\u7a7a\u95f4\u7684\u4f5c\u7528\u65f6\uff0c\u4f7f\u7528\u547d\u540d\u5bfc\u51fa\u3002"],["h4",["span","\u5f3a\u5236"]," \u6240\u6709 ",["code","import"]," \u8bed\u53e5\u5199\u5728\u6a21\u5757\u5f00\u59cb\u5904\u3002"],["p","\u793a\u4f8b\uff1a"],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> bar <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'./bar\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  bar<span class="token punctuation">.</span><span class="token function">work</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">import</span> <span class="token punctuation">{</span> bar <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'./bar\'</span><span class="token punctuation">;</span>\n  bar<span class="token punctuation">.</span><span class="token function">work</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>'},["code","// good\nimport { bar } from './bar';\n\nfunction foo() {\n  bar.work();\n}\n\n// bad\nfunction foo() {\n  import { bar } from './bar';\n  bar.work();\n}"]],["h3","3.9 \u96c6\u5408"],["h4",["span","\u5efa\u8bae"]," \u5bf9\u6570\u7ec4\u8fdb\u884c\u8fde\u63a5\u64cd\u4f5c\u65f6\uff0c\u4f7f\u7528\u6570\u7ec4\u5c55\u5f00\u8bed\u6cd5\u3002"],["p","\u89e3\u91ca\uff1a"],["p","\u7528\u6570\u7ec4\u5c55\u5f00\u4ee3\u66ff ",["code","concat"]," \u65b9\u6cd5\uff0c\u6570\u7ec4\u5c55\u5f00\u5bf9 ",["code","Iterable"]," \u6709\u66f4\u597d\u7684\u517c\u5bb9\u6027\u3002"],["p","\u793a\u4f8b\uff1a"],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">let</span> foo <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>foo<span class="token punctuation">,</span> newValue<span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token keyword">let</span> bar <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>bar<span class="token punctuation">,</span> <span class="token operator">...</span>newValues<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">let</span> foo <span class="token operator">=</span> foo<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>newValue<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">let</span> bar <span class="token operator">=</span> bar<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>newValues<span class="token punctuation">)</span><span class="token punctuation">;</span>'},["code","// good\nlet foo = [...foo, newValue];\nlet bar = [...bar, ...newValues];\n\n// bad\nlet foo = foo.concat(newValue);\nlet bar = bar.concat(newValues);"]],["h4",["span","\u5efa\u8bae"]," \u4e0d\u8981\u4f7f\u7528\u6570\u7ec4\u5c55\u5f00\u8fdb\u884c\u6570\u7ec4\u7684\u590d\u5236\u64cd\u4f5c\u3002"],["p","\u89e3\u91ca\uff1a"],["p","\u4f7f\u7528\u6570\u7ec4\u5c55\u5f00\u8bed\u6cd5\u8fdb\u884c\u590d\u5236\uff0c\u4ee3\u7801\u53ef\u8bfb\u6027\u8f83\u5dee\u3002\u63a8\u8350\u4f7f\u7528 ",["code","Array.from"]," \u65b9\u6cd5\u8fdb\u884c\u590d\u5236\u64cd\u4f5c\u3002"],["p","\u793a\u4f8b\uff1a"],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">let</span> otherArr <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token keyword">from</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">let</span> otherArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>arr<span class="token punctuation">]</span><span class="token punctuation">;</span>'},["code","// good\nlet otherArr = Array.from(arr);\n\n// bad\nlet otherArr = [...arr];"]],["h4",["span","\u5efa\u8bae"]," \u5c3d\u53ef\u80fd\u4f7f\u7528 ",["code","for .. of"]," \u8fdb\u884c\u904d\u5386\u3002"],["p","\u89e3\u91ca\uff1a"],["p","\u4f7f\u7528 ",["code","for .. of"]," \u53ef\u4ee5\u66f4\u597d\u5730\u63a5\u53d7\u4efb\u4f55\u7684 ",["code","Iterable"]," \u5bf9\u8c61\uff0c\u5982 ",["code","Map#values"]," \u751f\u6210\u7684\u8fed\u4ee3\u5668\uff0c\u4f7f\u5f97\u65b9\u6cd5\u7684\u901a\u7528\u6027\u66f4\u5f3a\u3002"],["p","\u4ee5\u4e0b\u60c5\u51b5\u9664\u5916\uff1a"],["ol",["li",["p","\u904d\u5386\u786e\u5b9e\u6210\u4e3a\u4e86\u6027\u80fd\u74f6\u9888\uff0c\u9700\u8981\u4f7f\u7528\u539f\u751f ",["code","for"]," \u5faa\u73af\u63d0\u5347\u6027\u80fd\u3002"]],["li",["p","\u9700\u8981\u904d\u5386\u8fc7\u7a0b\u4e2d\u7684\u7d22\u5f15\u3002"]]],["h4",["span","\u5f3a\u5236"]," \u5f53\u952e\u503c\u6709\u53ef\u80fd\u4e0d\u662f\u5b57\u7b26\u4e32\u65f6\uff0c\u5fc5\u987b\u4f7f\u7528 ",["code","Map"],"\uff1b\u5f53\u5143\u7d20\u6709\u53ef\u80fd\u4e0d\u662f\u5b57\u7b26\u4e32\u65f6\uff0c\u5fc5\u987b\u4f7f\u7528 ",["code","Set"],"\u3002"],["p","\u89e3\u91ca\uff1a"],["p","\u4f7f\u7528\u666e\u901a Object\uff0c\u5bf9\u975e\u5b57\u7b26\u4e32\u7c7b\u578b\u7684 ",["code","key"],"\uff0c\u9700\u8981\u81ea\u5df1\u5b9e\u73b0\u5e8f\u5217\u5316\u3002\u5e76\u4e14\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u7684\u5bf9\u8c61\u53d8\u5316\u96be\u4ee5\u901a\u77e5 Object\u3002"],["h4",["span","\u5efa\u8bae"]," \u9700\u8981\u4e00\u4e2a\u4e0d\u53ef\u91cd\u590d\u7684\u96c6\u5408\u65f6\uff0c\u5e94\u4f7f\u7528 ",["code","Set"],"\u3002"],["p","\u89e3\u91ca\uff1a"],["p","\u4e0d\u8981\u4f7f\u7528 ",["code","{foo: true}"]," \u8fd9\u6837\u7684\u666e\u901a ",["code","Object"],"\u3002"],["p","\u793a\u4f8b\uff1a"],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">let</span> members <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">\'one\'</span><span class="token punctuation">,</span> <span class="token string">\'two\'</span><span class="token punctuation">,</span> <span class="token string">\'three\'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">let</span> members <span class="token operator">=</span> <span class="token punctuation">{</span>\n  one<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  two<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  three<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>'},["code","// good\nlet members = new Set(['one', 'two', 'three']);\n\n// bad\nlet members = {\n  one: true,\n  two: true,\n  three: true,\n};"]],["h4",["span","\u5efa\u8bae"]," \u5f53\u9700\u8981\u904d\u5386\u529f\u80fd\u65f6\uff0c\u4f7f\u7528 ",["code","Map"]," \u548c ",["code","Set"],"\u3002"],["p","\u89e3\u91ca\uff1a"],["p",["code","Map"]," \u548c ",["code","Set"]," \u662f\u53ef\u904d\u5386\u5bf9\u8c61\uff0c\u80fd\u591f\u65b9\u4fbf\u5730\u4f7f\u7528 ",["code","for...of"]," \u904d\u5386\u3002\u4e0d\u8981\u4f7f\u7528\u4f7f\u7528\u666e\u901a Object\u3002"],["p","\u793a\u4f8b\uff1a"],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">let</span> membersAge <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">\'one\'</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">\'two\'</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">\'three\'</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> <span class="token punctuation">[</span>key<span class="token punctuation">,</span> value<span class="token punctuation">]</span> <span class="token keyword">of</span> map<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">let</span> membersAge <span class="token operator">=</span> <span class="token punctuation">{</span>\n  one<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span>\n  two<span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">,</span>\n  three<span class="token punctuation">:</span> <span class="token number">30</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">in</span> membersAge<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>membersAge<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> value <span class="token operator">=</span> membersAge<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>'},["code","// good\nlet membersAge = new Map([['one', 10], ['two', 20], ['three', 30]]);\nfor (let [key, value] of map) {\n}\n\n// bad\nlet membersAge = {\n  one: 10,\n  two: 20,\n  three: 30,\n};\nfor (let key in membersAge) {\n  if (membersAge.hasOwnProperty(key)) {\n    let value = membersAge[key];\n  }\n}"]],["h4",["span","\u5efa\u8bae"]," \u7a0b\u5e8f\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u6709\u6dfb\u52a0\u6216\u79fb\u9664\u5143\u7d20\u7684\u64cd\u4f5c\u65f6\uff0c\u4f7f\u7528 ",["code","Map"]," \u548c ",["code","Set"],"\u3002"],["p","\u89e3\u91ca\uff1a"],["p","\u4f7f\u7528 ",["code","Map"]," \u548c ",["code","Set"],"\uff0c\u7a0b\u5e8f\u7684\u53ef\u7406\u89e3\u6027\u66f4\u597d\uff1b\u666e\u901a Object \u7684\u8bed\u4e49\u66f4\u503e\u5411\u4e8e\u8868\u8fbe\u56fa\u5b9a\u7684\u7ed3\u6784\u3002"],["p","\u793a\u4f8b\uff1a"],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">let</span> membersAge <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nmembersAge<span class="token punctuation">.</span><span class="token keyword">set</span><span class="token punctuation">(</span><span class="token string">\'one\'</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nmembersAge<span class="token punctuation">.</span><span class="token keyword">set</span><span class="token punctuation">(</span><span class="token string">\'two\'</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nmembersAge<span class="token punctuation">.</span><span class="token keyword">set</span><span class="token punctuation">(</span><span class="token string">\'three\'</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nmembersAge<span class="token punctuation">.</span><span class="token keyword">delete</span><span class="token punctuation">(</span><span class="token string">\'one\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">let</span> membersAge <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\nmembersAge<span class="token punctuation">.</span>one <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>\nmembersAge<span class="token punctuation">.</span>two <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>\nmembersAge<span class="token punctuation">.</span>three <span class="token operator">=</span> <span class="token number">30</span><span class="token punctuation">;</span>\n<span class="token keyword">delete</span> membersAge<span class="token punctuation">[</span><span class="token string">\'one\'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>'},["code","// good\nlet membersAge = new Map();\nmembersAge.set('one', 10);\nmembersAge.set('two', 20);\nmembersAge.set('three', 30);\nmembersAge.delete('one');\n\n// bad\nlet membersAge = {};\nmembersAge.one = 10;\nmembersAge.two = 20;\nmembersAge.three = 30;\ndelete membersAge['one'];"]],["h3","3.10 \u5f02\u6b65"],["h4",["span","\u5f3a\u5236"]," \u56de\u8c03\u51fd\u6570\u7684\u5d4c\u5957\u4e0d\u5f97\u8d85\u8fc7 3 \u5c42\u3002"],["p","\u89e3\u91ca\uff1a"],["p","\u6df1\u5c42\u6b21\u7684\u56de\u8c03\u51fd\u6570\u7684\u5d4c\u5957\u4f1a\u8ba9\u4ee3\u7801\u53d8\u5f97\u96be\u4ee5\u9605\u8bfb\u3002"],["p","\u793a\u4f8b\uff1a"],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// bad</span>\n<span class="token function">getUser</span><span class="token punctuation">(</span>userId<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token function">validateUser</span><span class="token punctuation">(</span>user<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>isValid<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>isValid<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token function">saveReport</span><span class="token punctuation">(</span>report<span class="token punctuation">,</span> user<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token function">notice</span><span class="token punctuation">(</span><span class="token string">\'Saved!\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>'},["code","// bad\ngetUser(userId, function(user) {\n  validateUser(user, function(isValid) {\n    if (isValid) {\n      saveReport(report, user, function() {\n        notice('Saved!');\n      });\n    }\n  });\n});"]],["h4",["span","\u5efa\u8bae"]," \u4f7f\u7528 ",["code","Promise"]," \u4ee3\u66ff ",["code","callback"],"\u3002"],["p","\u89e3\u91ca\uff1a"],["p","\u76f8\u6bd4 ",["code","callback"],"\uff0c\u4f7f\u7528 ",["code","Promise"]," \u80fd\u591f\u4f7f\u590d\u6742\u5f02\u6b65\u8fc7\u7a0b\u7684\u4ee3\u7801\u66f4\u6e05\u6670\u3002"],["p","\u793a\u4f8b\uff1a"],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">let</span> user<span class="token punctuation">;</span>\n<span class="token function">getUser</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span>\n  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>userObj<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    user <span class="token operator">=</span> userObj<span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token function">validateUser</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>isValid<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>isValid<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span> <span class="token function">saveReport</span><span class="token punctuation">(</span>report<span class="token punctuation">,</span> user<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">\'Invalid!\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>\n    <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token function">notice</span><span class="token punctuation">(</span><span class="token string">\'Saved!\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token keyword">function</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token function">notice</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>'},["code","// good\nlet user;\ngetUser(userId)\n  .then(function(userObj) {\n    user = userObj;\n    return validateUser(user);\n  })\n  .then(function(isValid) {\n    if (isValid) {\n      return saveReport(report, user);\n    }\n\n    return Promise.reject('Invalid!');\n  })\n  .then(\n    function() {\n      notice('Saved!');\n    },\n    function(message) {\n      notice(message);\n    },\n  );"]],["h4",["span","\u5f3a\u5236"]," \u4f7f\u7528\u6807\u51c6\u7684 ",["code","Promise"]," API\u3002"],["p","\u89e3\u91ca\uff1a"],["ol",["li",["p","\u4e0d\u5141\u8bb8\u4f7f\u7528\u975e\u6807\u51c6\u7684 ",["code","Promise"]," API\uff0c\u5982 ",["code","jQuery"]," \u7684 ",["code","Deferred"],"\u3001",["code","Q.js"]," \u7684 ",["code","defer"]," \u7b49\u3002"]],["li",["p","\u4e0d\u5141\u8bb8\u4f7f\u7528\u975e\u6807\u51c6\u7684 ",["code","Promise"]," \u6269\u5c55 API\uff0c\u5982 ",["code","bluebird"]," \u7684 ",["code","Promise.any"]," \u7b49\u3002"]]],["p","\u4f7f\u7528\u6807\u51c6\u7684 ",["code","Promise"]," API\uff0c\u5f53\u8fd0\u884c\u73af\u5883\u90fd\u652f\u6301\u65f6\uff0c\u53ef\u4ee5\u628a Promise Lib \u76f4\u63a5\u53bb\u6389\u3002"],["h4",["span","\u5f3a\u5236"]," \u4e0d\u5141\u8bb8\u76f4\u63a5\u6269\u5c55 ",["code","Promise"]," \u5bf9\u8c61\u7684 ",["code","prototype"],"\u3002"],["p","\u89e3\u91ca\uff1a"],["p","\u7406\u7531\u548c ",["strong","\u4e0d\u5141\u8bb8\u4fee\u6539\u548c\u6269\u5c55\u4efb\u4f55\u539f\u751f\u5bf9\u8c61\u548c\u5bbf\u4e3b\u5bf9\u8c61\u7684\u539f\u578b"]," \u662f\u4e00\u6837\u7684\u3002\u5982\u679c\u60f3\u8981\u4f7f\u7528\u66f4\u65b9\u4fbf\uff0c\u53ef\u4ee5\u7528 utility \u51fd\u6570\u7684\u5f62\u5f0f\u3002"],["h4",["span","\u5f3a\u5236"]," \u4e0d\u5f97\u4e3a\u4e86\u7f16\u5199\u7684\u65b9\u4fbf\uff0c\u5c06\u53ef\u4ee5\u5e76\u884c\u7684 IO \u8fc7\u7a0b\u4e32\u884c\u5316\u3002"],["p","\u89e3\u91ca\uff1a"],["p","\u5e76\u884c IO \u6d88\u8017\u65f6\u95f4\u7ea6\u7b49\u4e8e IO \u65f6\u95f4\u6700\u5927\u7684\u90a3\u4e2a\u8fc7\u7a0b\uff0c\u4e32\u884c\u7684\u8bdd\u6d88\u8017\u65f6\u95f4\u5c06\u662f\u6240\u6709\u8fc7\u7a0b\u7684\u65f6\u95f4\u4e4b\u548c\u3002"],["p","\u793a\u4f8b\uff1a"],["pre",{lang:"javascript",highlighted:'<span class="token function">requestData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token function">renderTags</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>tags<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token function">renderArticles</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>articles<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">requestData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>tags<span class="token punctuation">,</span> articles<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n    <span class="token function">requestTags</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token function">requestArticles</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token punctuation">{</span> tags<span class="token punctuation">,</span> articles <span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">requestData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">let</span> tags <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">requestTags</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">let</span> articles <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">requestArticles</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">{</span> tags<span class="token punctuation">,</span> articles <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>'},["code","requestData().then(function(data) {\n  renderTags(data.tags);\n  renderArticles(data.articles);\n});\n\n// good\nasync function requestData() {\n  const [tags, articles] = await Promise.all([\n    requestTags(),\n    requestArticles(),\n  ]);\n  return { tags, articles };\n}\n\n// bad\nasync function requestData() {\n  let tags = await requestTags();\n  let articles = await requestArticles();\n\n  return Promise.resolve({ tags, articles });\n}"]],["h4",["span","\u5efa\u8bae"]," \u4f7f\u7528 ",["code","async/await"]," \u4ee3\u66ff ",["code","generator"]," + ",["code","co"],"\u3002"],["p","\u89e3\u91ca\uff1a"],["p","\u4f7f\u7528\u8bed\u8a00\u81ea\u8eab\u7684\u80fd\u529b\u53ef\u4ee5\u4f7f\u4ee3\u7801\u66f4\u6e05\u6670\uff0c\u4e5f\u65e0\u9700\u5f15\u5165 ",["code","co"]," \u5e93\u3002"],["p","\u793a\u4f8b\uff1a"],["pre",{lang:"javascript",highlighted:'<span class="token function">addReport</span><span class="token punctuation">(</span>report<span class="token punctuation">,</span> userId<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>\n  <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">notice</span><span class="token punctuation">(</span><span class="token string">\'Saved!\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token keyword">function</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">notice</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">addReport</span><span class="token punctuation">(</span>report<span class="token punctuation">,</span> userId<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">let</span> user <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getUser</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">let</span> isValid <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">validateUser</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>isValid<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> savePromise <span class="token operator">=</span> <span class="token function">saveReport</span><span class="token punctuation">(</span>report<span class="token punctuation">,</span> user<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token function">savePromise</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">\'Invalid\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">function</span> <span class="token function">addReport</span><span class="token punctuation">(</span>report<span class="token punctuation">,</span> userId<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token function">co</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> user <span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token function">getUser</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">let</span> isValid <span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token function">validateUser</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>isValid<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">let</span> savePromise <span class="token operator">=</span> <span class="token function">saveReport</span><span class="token punctuation">(</span>report<span class="token punctuation">,</span> user<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token keyword">return</span> <span class="token function">savePromise</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">\'Invalid\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>'},["code","addReport(report, userId).then(\n  function() {\n    notice('Saved!');\n  },\n  function(message) {\n    notice(message);\n  },\n);\n\n// good\nasync function addReport(report, userId) {\n  let user = await getUser(userId);\n  let isValid = await validateUser(user);\n\n  if (isValid) {\n    let savePromise = saveReport(report, user);\n    return savePromise();\n  }\n\n  return Promise.reject('Invalid');\n}\n\n// bad\nfunction addReport(report, userId) {\n  return co(function*() {\n    let user = yield getUser(userId);\n    let isValid = yield validateUser(user);\n\n    if (isValid) {\n      let savePromise = saveReport(report, user);\n      return savePromise();\n    }\n\n    return Promise.reject('Invalid');\n  });\n}"]],["h2","4 \u73af\u5883"],["h3","4.1 \u8fd0\u884c\u73af\u5883"],["h4",["span","\u5efa\u8bae"]," \u6301\u7eed\u8ddf\u8fdb\u4e0e\u5173\u6ce8\u8fd0\u884c\u73af\u5883\u5bf9\u8bed\u8a00\u7279\u6027\u7684\u652f\u6301\u7a0b\u5ea6\u3002"],["p","ES \u6807\u51c6\u7684\u5236\u5b9a\u8fd8\u5728\u4e0d\u65ad\u8fdb\u884c\u4e2d\uff0c\u5404\u79cd\u73af\u5883\u5bf9\u8bed\u8a00\u7279\u6027\u7684\u652f\u6301\u4e5f\u65e5\u65b0\u6708\u5f02\u3002\u4e86\u89e3\u9879\u76ee\u4e2d\u7528\u5230\u4e86\u54ea\u4e9b ESNext \u7684\u7279\u6027\uff0c\u4e86\u89e3\u9879\u76ee\u7684\u8fd0\u884c\u73af\u5883\uff0c\u5e76\u6301\u7eed\u8ddf\u8fdb\u8fd9\u4e9b\u7279\u6027\u5728\u8fd0\u884c\u73af\u5883\u4e2d\u7684\u652f\u6301\u7a0b\u5ea6\u662f\u5f88\u6709\u5fc5\u8981\u7684\u3002\u8fd9\u610f\u5473\u7740\uff1a"],["ol",["li",["p","\u5982\u679c\u6709\u4efb\u4f55\u4e00\u4e2a\u8fd0\u884c\u73af\u5883\uff08\u6bd4\u5982 chrome\uff09\u652f\u6301\u4e86\u9879\u76ee\u91cc\u7528\u5230\u7684\u6240\u6709\u7279\u6027\uff0c\u4f60\u53ef\u4ee5\u5728\u5f00\u53d1\u65f6\u629b\u5f03\u9884\u7f16\u8bd1\u3002"]],["li",["p","\u5982\u679c\u6240\u6709\u73af\u5883\u90fd\u652f\u6301\u4e86\u67d0\u4e00\u7279\u6027\uff08\u6bd4\u5982 Promise\uff09\uff0c\u4f60\u53ef\u4ee5\u629b\u5f03\u76f8\u5173\u7684 shim\uff0c\u6216\u65e0\u9700\u5728\u9884\u7f16\u8bd1\u65f6\u8fdb\u884c\u8f6c\u6362\u3002"]],["li",["p","\u5982\u679c\u6240\u6709\u73af\u5883\u90fd\u652f\u6301\u4e86\u9879\u76ee\u91cc\u7528\u5230\u7684\u6240\u6709\u7279\u6027\uff0c\u4f60\u53ef\u4ee5\u5b8c\u5168\u629b\u5f03\u9884\u7f16\u8bd1\u3002"]]],["p","\u65e0\u8bba\u5982\u4f55\uff0c\u5728\u9009\u62e9\u9884\u7f16\u8bd1\u5de5\u5177\u65f6\uff0c\u4f60\u90fd\u9700\u8981\u6e05\u6670\u7684\u77e5\u9053\u4f60\u73b0\u9636\u6bb5\u5c06\u5728\u9879\u76ee\u91cc\u4f7f\u7528\u54ea\u4e9b\u8bed\u8a00\u7279\u6027\uff0c\u7136\u540e\u4e86\u89e3\u9884\u7f16\u8bd1\u5de5\u5177\u5bf9\u8bed\u8a00\u7279\u6027\u7684\u652f\u6301\u7a0b\u5ea6\uff0c\u505a\u51fa\u9009\u62e9\u3002"],["h4",["span","\u5f3a\u5236"]," \u5728\u8fd0\u884c\u73af\u5883\u4e2d\u6ca1\u6709 ",["code","Promise"]," \u65f6\uff0c\u5c06 ",["code","Promise"]," \u7684\u5b9e\u73b0 ",["code","shim"]," \u5230 ",["code","global"]," \u4e2d\u3002"],["p","\u89e3\u91ca\uff1a"],["p","\u5f53\u524d\u8fd0\u884c\u73af\u5883\u4e0b\u6ca1\u6709 ",["code","Promise"]," \u65f6\uff0c\u53ef\u4ee5\u5f15\u5165 ",["code","shim"]," \u7684\u6269\u5c55\u3002\u5982\u679c\u81ea\u5df1\u5b9e\u73b0\uff0c\u9700\u8981\u5b9e\u73b0\u5728 ",["code","global"]," \u4e0b\uff0c\u5e76\u4e14\u4e0e\u6807\u51c6 API \u4fdd\u6301\u4e00\u81f4\u3002"],["p","\u8fd9\u6837\uff0c\u672a\u6765\u8fd0\u884c\u73af\u5883\u652f\u6301\u65f6\uff0c\u53ef\u4ee5\u968f\u65f6\u628a ",["code","Promise"]," \u6269\u5c55\u76f4\u63a5\u6254\u6389\uff0c\u800c\u5e94\u7528\u4ee3\u7801\u65e0\u9700\u4efb\u4f55\u4fee\u6539\u3002"],["h3","4.2 \u9884\u7f16\u8bd1"],["h4",["span","\u5efa\u8bae"]," \u4f7f\u7528 ",["code","babel"]," \u505a\u4e3a\u9884\u7f16\u8bd1\u5de5\u5177\u3002"],["h4",["span","\u5efa\u8bae"]," \u4f7f\u7528 ",["code","babel"]," \u505a\u4e3a\u9884\u7f16\u8bd1\u5de5\u5177\u65f6\uff0c\u901a\u8fc7 ",["code","external-helpers"]," \u51cf\u5c11\u751f\u6210\u6587\u4ef6\u7684\u5927\u5c0f\u3002"],["p","\u89e3\u91ca\uff1a"],["p","\u5f53 ",["code","babel"]," \u5728\u8f6c\u6362\u4ee3\u7801\u7684\u8fc7\u7a0b\u4e2d\u53d1\u73b0\u9700\u8981\u4e00\u4e9b\u7279\u6027\u65f6\uff0c\u4f1a\u5728\u8be5\u6587\u4ef6\u5934\u90e8\u751f\u6210\u5bf9\u5e94\u7684 ",["code","helper"]," \u4ee3\u7801\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u7ecf\u7531 ",["code","babel"]," \u5904\u7406\u7684\u6587\u4ef6\uff0c\u5747\u4f1a\u5728\u6587\u4ef6\u5934\u90e8\u751f\u6210\u5bf9\u5e94\u9700\u8981\u7684\u8f85\u52a9\u51fd\u6570\uff0c\u591a\u4efd\u6587\u4ef6\u8f85\u52a9\u51fd\u6570\u5b58\u5728\u91cd\u590d\uff0c\u5360\u7528\u4e86\u4e0d\u5fc5\u8981\u7684\u4ee3\u7801\u4f53\u79ef\u3002"],["p","\u56e0\u6b64\u63a8\u8350\u6253\u5f00",["code","externalHelpers: true"],"\u9009\u9879\uff0c\u4f7f ",["code","babel"]," \u5728\u8f6c\u6362\u540e\u5185\u5bb9\u4e2d\u4e0d\u5199\u5165 ",["code","helper"]," \u76f8\u5173\u7684\u4ee3\u7801\uff0c\u800c\u662f\u4f7f\u7528\u4e00\u4e2a\u5916\u90e8\u7684 ",["code",".js"],"\u7edf\u4e00\u63d0\u4f9b\u6240\u6709\u7684 ",["code","helper"],"\u3002\u5bf9\u4e8e",["a",{title:null,href:"https://github.com/babel/babel.github.io/blob/5.0.0/docs/usage/external-helpers.md"},"external-helpers"],"\u7684\u4f7f\u7528\uff0c\u53ef\u4ee5\u6709\u4e24\u79cd\u65b9\u5f0f\uff1a"],["ol",["li",["p","\u9ed8\u8ba4\u65b9\u5f0f\uff1a\u9700\u8981\u901a\u8fc7 ",["code","<script>"]," \u81ea\u884c\u5f15\u5165",["code","babel-polyfill.js"]," \u548c ",["code","babel-external-helpers.js"],"\u3002"]],["li",["p","\u5b9a\u5236\u65b9\u5f0f\uff1a\u81ea\u5df1\u5b9e\u73b0 ",["a",{title:null,href:"https://github.com/babel/babel.github.io/blob/5.0.0/docs/usage/runtime.md"},"babel-runtime"],"\u3002"]]],["p","\u793a\u4f8b\uff1a"],["pre",{lang:"shell",highlighted:'# \u9ed8\u8ba4\u65b9\u5f0f\n<span class="token operator">-</span><span class="token operator">-</span>loose all <span class="token operator">-</span><span class="token operator">-</span>modules amd <span class="token operator">-</span><span class="token operator">-</span>external<span class="token operator">-</span>helpers\n# `babelHelpers` \u7684\u4ee3\u7801\u53ef\u4ee5\u901a\u8fc7\u6267\u884c `babel<span class="token operator">-</span>external<span class="token operator">-</span>helpers <span class="token operator">-</span>t var` \u5f97\u5230\u6240\u6709\u76f8\u5173API\u7684\u5b9e\u73b0\n\n# \u5b9a\u5236\u65b9\u5f0f\n<span class="token operator">-</span><span class="token operator">-</span>loose all <span class="token operator">-</span><span class="token operator">-</span>modules amd <span class="token operator">-</span><span class="token operator">-</span>optional runtime'},["code","# \u9ed8\u8ba4\u65b9\u5f0f\n--loose all --modules amd --external-helpers\n# `babelHelpers` \u7684\u4ee3\u7801\u53ef\u4ee5\u901a\u8fc7\u6267\u884c `babel-external-helpers -t var` \u5f97\u5230\u6240\u6709\u76f8\u5173API\u7684\u5b9e\u73b0\n\n# \u5b9a\u5236\u65b9\u5f0f\n--loose all --modules amd --optional runtime"]],["h4",["span","\u5efa\u8bae"]," \u4f7f\u7528 ",["code","TypeScript"]," \u505a\u4e3a\u9884\u7f16\u8bd1\u5de5\u5177\u65f6\uff0c\u5efa\u8bae\u4f7f\u7528 ",["code","1.6+"]," \u7248\u672c\u3002"],["p","\u89e3\u91ca\uff1a"],["p",["code","TypeScript"]," 1.6 \u4e4b\u540e\uff0c\u57fa\u672c\u6452\u5f03\u4e86\u4e4b\u524d\u7684\u4e0e ESNext \u76f8\u51b2\u7a81\u7684\u5730\u65b9\u3002\u76ee\u524d ",["code","TypeScript"]," \u7684\u601d\u8def\u5c31\u662f\u9075\u5faa\u6807\u51c6\uff0c\u5c06 stage \u5df2\u7ecf\u8db3\u591f\u6210\u719f\u7684\u529f\u80fd\u7eb3\u5165\uff0c\u5e76\u63d0\u4f9b\u9759\u6001\u7c7b\u578b\u548c\u7c7b\u578b\u68c0\u67e5\uff0c\u6240\u4ee5\u5176\u5728 stage 0/1 \u7684\u652f\u6301\u4e0a\u4e0d\u5982 ",["code","babel"],"\u3002\u53e6\u5916\uff0c",["code","TypeScript"]," \u4e0d\u80fd\u6307\u5b9a\u5173\u95ed\u67d0\u4e2a transform\uff0c\u4f46\u5176\u7f16\u8bd1\u901f\u5ea6\u6bd4 ",["code","babel"]," \u66f4\u9ad8\u3002"],["p",["code","TypeScript"]," \u7684\u5e38\u7528\u53c2\u6570\u5728\u4e0b\u9762\u7ed9\u51fa\u4e86\u793a\u4f8b\u3002"],["p","\u793a\u4f8b\uff1a"],["pre",{lang:"shell",highlighted:'<span class="token operator">-</span><span class="token operator">-</span>module amd <span class="token operator">-</span><span class="token operator">-</span>target ES3\n<span class="token operator">-</span><span class="token operator">-</span>module commonjs <span class="token operator">-</span><span class="token operator">-</span>target ES6'},["code","--module amd --target ES3\n--module commonjs --target ES6"]],["h4",["span","\u5efa\u8bae"]," \u4f7f\u7528 ",["code","TypeScript"]," \u505a\u4e3a\u9884\u7f16\u8bd1\u5de5\u5177\u65f6\uff0c\u4e0d\u4f7f\u7528 ",["code","tsc"]," \u547d\u4ee4\u3002"],["p","\u89e3\u91ca\uff1a"],["p",["code","TypeScript"]," \u63d0\u4f9b\u7684 ",["code","tsc"]," \u547d\u4ee4\u53ea\u652f\u6301\u540e\u7f00\u540d ",["code",".ts"],"\u3001",["code",".tsx"],"\u3001",["code",".d.ts"]," \u7684\u6587\u4ef6\u7f16\u8bd1\uff0c\u5bf9\u4e8e JavaScript \u6765\u8bf4\uff0c\u4fdd\u6301\u540e\u7f00\u540d\u4e3a ",["code",".js"]," \u662f\u539f\u5219\uff0c\u672c\u6587\u6863\u7684 ",["code","\u6587\u4ef6"]," \u7ae0\u8282\u4e5f\u6709\u6240\u8981\u6c42\u3002"],["p","\u5982\u679c\u8981\u4f7f\u7528 ",["code","TypeScript"]," \u505a\u4e3a\u9884\u7f16\u8bd1\u5de5\u5177\uff0c\u53ef\u57fa\u4e8e\u5176 ",["a",{title:null,href:"https://github.com/Microsoft/TypeScript/wiki/Using-the-Compiler-API"},"Compiler API"]," \u5f00\u53d1\u81ea\u5df1\u7684\u9884\u7f16\u8bd1\u5de5\u5177\u3002\u5982\u679c\u4f60\u662f FIS \u7528\u6237\uff0c\u53ef\u4ee5\u4f7f\u7528 ",["a",{title:null,href:"https://github.com/fex-team/fis3-parser-typescript"},"FIS TypeScript \u63d2\u4ef6"],"\u3002"],["h4",["span","\u5efa\u8bae"]," \u6d4f\u89c8\u5668\u7aef\u9879\u76ee\u4e2d\u5982\u679c ESNext \u4ee3\u7801\u548c ES3/5 \u4ee3\u7801\u6df7\u5408\uff0c\u4e0d\u8981\u4f7f\u7528 ",["code","TypeScript"]," \u505a\u4e3a\u9884\u7f16\u8bd1\u5de5\u5177\u3002"],["p","\u89e3\u91ca\uff1a"],["p",["code","TypeScript"]," \u4ea7\u751f\u7684 module \u4ee3\u7801\u4f7f\u7528 exports.default \u5bfc\u51fa\u9ed8\u8ba4\u7684 export\uff0c\u4f46\u662f\u6ca1\u6709\u76f4\u63a5\u4e3a module.exports \u8d4b\u503c\uff0c\u5bfc\u81f4\u5728\u53e6\u5916\u4e00\u4e2a\u666e\u901a\u6587\u4ef6\u4e2d\u4f7f\u7528 require('moduleName') \u662f\u62ff\u4e0d\u5230\u4e1c\u897f\u7684\u3002"],["p","\u9700\u8981\u4f7f\u7528 ",["code","TypeScript"]," \u7684\u8bdd\uff0c\u5efa\u8bae\u6574\u4e2a\u9879\u76ee\u6240\u6709\u6587\u4ef6\u90fd\u662f ESNext module \u7684\uff0c\u91c7\u7528\u6df7\u5408\u7684 module \u5bb9\u6613\u51fa\u73b0\u4e0d\u53ef\u9884\u671f\u7684\u7ed3\u679c\u3002"]],meta:{title:"ECMAScript \u7f16\u7801\u89c4\u8303",tag:"\u524d\u7aef\u89c4\u8303",publishDate:"2018-03-13T00:00:00.000Z",filename:"posts/FEspec/ecmascript.md"}}}});