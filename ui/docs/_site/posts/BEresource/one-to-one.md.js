webpackJsonp([15],{464:function(n,a){n.exports={content:["article",{},["h2","\u5b9e\u73b0\u6b65\u9aa4"],["h3","1 \u5efa\u8868 \u6211\u4eec\u7528 sql \u8bed\u53e5\u5efa\u7acb\u8005\u4e24\u4e2a\u8868"],["p","-- \u521b\u5efa EMPLOYEE \u8868 --"],["pre",{lang:null,highlighted:'CREATE TABLE <span class="token function">EMPLOYEE</span><span class="token punctuation">(</span>\nID INTEGER <span class="token operator">NOT</span> <span class="token keyword">NULL</span> AUTO_INCREMENT <span class="token punctuation">,</span>\nPSPACE_ID INTEGER <span class="token operator">NOT</span> <span class="token keyword">NULL</span> <span class="token punctuation">,</span>\nNAME VARCHAR <span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token keyword">NULL</span> <span class="token punctuation">,</span>\nSALARY INTEGER <span class="token operator">NOT</span> <span class="token keyword">NULL</span> <span class="token punctuation">,</span>\nLAST_UPDATED_TIME TIMESTAMP <span class="token operator">NOT</span> <span class="token keyword">NULL</span> <span class="token punctuation">,</span>\nPRIMARY KEY <span class="token punctuation">(</span>ID<span class="token punctuation">)</span><span class="token punctuation">,</span>\nFOREIGN KEY <span class="token punctuation">(</span>PSPACE_ID<span class="token punctuation">)</span> REFERENCES PARKING_SPACE <span class="token punctuation">(</span>ID<span class="token punctuation">)</span>\n<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>'},["code","CREATE TABLE EMPLOYEE(\nID INTEGER NOT NULL AUTO_INCREMENT ,\nPSPACE_ID INTEGER NOT NULL ,\nNAME VARCHAR (20) NOT NULL ,\nSALARY INTEGER NOT NULL ,\nLAST_UPDATED_TIME TIMESTAMP NOT NULL ,\nPRIMARY KEY (ID),\nFOREIGN KEY (PSPACE_ID) REFERENCES PARKING_SPACE (ID)\n);"]],["p","-- \u521b\u5efa PARKING_SPACE \u8868 --\nCREATE TABLE PARKING_SPACE(\nID INTEGER NOT NULL AUTO_INCREMENT ,\nLOT INTEGER NOT NULL ,\nLOCATION VARCHAR (100) NOT NULL ,\nLAST_UPDATED_TIME TIMESTAMP NOT NULL ,\nPRIMARY KEY (ID)\n);"],["h3","2 \u5728 domain \u5305\u4e0b\u5efa\u5b9e\u4f53\u7c7b Employee \u548c ParkingSpace"],["p","-\u96c7\u5458\u7c7b\uff1a"],["pre",{lang:null,highlighted:'@<span class="token function">Table</span><span class="token punctuation">(</span>name <span class="token operator">=</span><span class="token string">"employee"</span><span class="token punctuation">)</span>\n<span class="token variable">@Entity</span>\npublic class Employee implements Serializable {\n<span class="token operator">/</span><span class="token operator">*</span>\u4e3b\u952e<span class="token operator">*</span><span class="token operator">/</span>\n<span class="token variable">@Id</span>\n@<span class="token function">Column</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">"ID"</span><span class="token punctuation">,</span> nullable<span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">)</span>\n@<span class="token function">GeneratedValue</span><span class="token punctuation">(</span>strategy<span class="token operator">=</span>GenerationType<span class="token punctuation">.</span>IDENTITY<span class="token punctuation">)</span>\nprivate Long id<span class="token comment" spellcheck="true">;</span>\n<span class="token operator">/</span><span class="token operator">*</span>\u59d3\u540d<span class="token operator">*</span><span class="token operator">/</span>\n@<span class="token function">Column</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">"NAME"</span><span class="token punctuation">,</span> nullable<span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">)</span>\nprivate String name<span class="token comment" spellcheck="true">;</span>\n<span class="token operator">/</span><span class="token operator">*</span>\u5de5\u8d44<span class="token operator">*</span><span class="token operator">/</span>\n@<span class="token function">Column</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">"SALARY"</span><span class="token punctuation">,</span> nullable<span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">)</span>\nprivate Integer salary<span class="token comment" spellcheck="true">;</span>\n<span class="token operator">/</span><span class="token operator">*</span>\u505c\u8f66\u4f4d\uff0c\u7ea7\u8054\u4fdd\u5b58\u66f4\u65b0\u548c\u5220\u9664<span class="token operator">*</span><span class="token operator">/</span>\n@<span class="token function">OneToOne</span><span class="token punctuation">(</span>cascade<span class="token operator">=</span>CascadeType<span class="token punctuation">.</span>ALL<span class="token punctuation">)</span>\n@<span class="token function">JoinColumn</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">"PSPACE_ID"</span><span class="token punctuation">)</span>\nprivate ParkingSpace pSpace<span class="token comment" spellcheck="true">;</span>\n<span class="token operator">/</span><span class="token operator">*</span>\u66f4\u65b0\u65f6\u95f4<span class="token operator">*</span><span class="token operator">/</span>\n<span class="token variable">@Version</span>\n@<span class="token function">Column</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">"LAST_UPDATED_TIME"</span><span class="token punctuation">,</span> nullable<span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">)</span>\nprivate Date employeeUpdateTime<span class="token comment" spellcheck="true">;</span>\n<span class="token operator">/</span><span class="token operator">/</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span>\u6b64\u5904\u7701\u7565getter\u548csetter\u7684\u4ee3\u7801<span class="token operator">-</span>\n}'},["code",'@Table(name ="employee")\n@Entity\npublic class Employee implements Serializable {\n/*\u4e3b\u952e*/\n@Id\n@Column(name="ID", nullable=false)\n@GeneratedValue(strategy=GenerationType.IDENTITY)\nprivate Long id;\n/*\u59d3\u540d*/\n@Column(name="NAME", nullable=false)\nprivate String name;\n/*\u5de5\u8d44*/\n@Column(name="SALARY", nullable=false)\nprivate Integer salary;\n/*\u505c\u8f66\u4f4d\uff0c\u7ea7\u8054\u4fdd\u5b58\u66f4\u65b0\u548c\u5220\u9664*/\n@OneToOne(cascade=CascadeType.ALL)\n@JoinColumn(name="PSPACE_ID")\nprivate ParkingSpace pSpace;\n/*\u66f4\u65b0\u65f6\u95f4*/\n@Version\n@Column(name="LAST_UPDATED_TIME", nullable=false)\nprivate Date employeeUpdateTime;\n//------\u6b64\u5904\u7701\u7565getter\u548csetter\u7684\u4ee3\u7801-\n}']],["p",'-\u505c\u8f66\u4f4d\u7c7b\uff1a\n@Table(name="parking',["em",'space")\n@Entity\npublic class ParkingSpace implements Serializable {\n/'],"\u4e3b\u952e",["em",'/\n@Id\n@Column(name="ID", nullable=false)\n@GeneratedValue(strategy=GenerationType.IDENTITY)\nprivate Long id;\n/'],"\u5927\u5c0f",["em",'/\n@Column(name="LOT", nullable=false)\nprivate Integer lot;\n/'],"\u4f4d\u7f6e",["em",'/\n@Column(name="LOCATION", nullable=false)\nprivate String location;\n/'],"\u66f4\u65b0\u65f6\u95f4","_",'/\n@Version\n@Column(name="LAST_UPDATED_TIME", nullable=false)\nprivate Date parkingSpaceUpdateTime;'],["pre",{lang:null,highlighted:'@<span class="token function">OneToOne</span><span class="token punctuation">(</span>mappedBy<span class="token operator">=</span><span class="token string">"pSpace"</span><span class="token punctuation">)</span>\nprivate Employee employee<span class="token comment" spellcheck="true">;</span>\n\n<span class="token operator">/</span><span class="token operator">/</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span>\u6b64\u5904\u7701\u7565getter\u548csetter\u7684\u4ee3\u7801<span class="token operator">-</span>\n}'},["code",'@OneToOne(mappedBy="pSpace")\nprivate Employee employee;\n\n//------\u6b64\u5904\u7701\u7565getter\u548csetter\u7684\u4ee3\u7801-\n}']],["h3","3 \u5728 repository \u4e0b\u5efa \u63a5\u53e3 EmployeeRepository \u548c ParkingSpaceRepository"],["pre",{lang:null,highlighted:'public interface EmployeeRepository extends BaseRepository<span class="token operator">&lt;</span>Employee<span class="token punctuation">,</span>Serializable<span class="token operator">></span>{\n\n}\n\npublic interface ParkingSpaceRepository extends BaseRepository<span class="token operator">&lt;</span>ParkingSpace<span class="token punctuation">,</span>Serializable<span class="token operator">></span> {\n\n}'},["code","public interface EmployeeRepository extends BaseRepository<Employee,Serializable>{\n\n}\n\npublic interface ParkingSpaceRepository extends BaseRepository<ParkingSpace,Serializable> {\n\n}"]],["h3","4 \u5728 dto \u5305\u4e0b\u5efa EmployeeDTO \u7c7b"],["pre",{lang:null,highlighted:'public class EmployeeDTO {\n    <span class="token operator">/</span><span class="token operator">*</span>\u4e3b\u952e<span class="token operator">*</span><span class="token operator">/</span>\n    private Long id<span class="token comment" spellcheck="true">;</span>\n    <span class="token operator">/</span><span class="token operator">*</span>\u59d3\u540d<span class="token operator">*</span><span class="token operator">/</span>\n    private String name<span class="token comment" spellcheck="true">;</span>\n    <span class="token operator">/</span><span class="token operator">*</span>\u5de5\u8d44<span class="token operator">*</span><span class="token operator">/</span>\n    private Integer salary<span class="token comment" spellcheck="true">;</span>\n    <span class="token operator">/</span><span class="token operator">*</span>\u96c7\u5458\u66f4\u65b0\u65f6\u95f4<span class="token operator">*</span><span class="token operator">/</span>\n    private String employeeUpdateTime<span class="token comment" spellcheck="true">;</span>\n    <span class="token operator">/</span><span class="token operator">*</span>\u505c\u8f66\u4f4d\u4e3b\u952eid<span class="token operator">*</span><span class="token operator">/</span>\n    private Long parkingSpaceId<span class="token comment" spellcheck="true">;</span>\n    <span class="token operator">/</span><span class="token operator">*</span>\u505c\u8f66\u4f4d\u5927\u5c0f<span class="token operator">*</span><span class="token operator">/</span>\n    private Integer lot<span class="token comment" spellcheck="true">;</span>\n    <span class="token operator">/</span><span class="token operator">*</span>\u505c\u8f66\u4f4d\u4f4d\u7f6e<span class="token operator">*</span><span class="token operator">/</span>\n    private String location<span class="token comment" spellcheck="true">;</span>\n    <span class="token operator">/</span><span class="token operator">*</span>\u505c\u8f66\u4f4d\u66f4\u65b0\u65f6\u95f4<span class="token operator">*</span><span class="token operator">/</span>\n    private String parkingSpaceUpdateTime<span class="token comment" spellcheck="true">;</span>\n    <span class="token operator">/</span><span class="token operator">/</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span>\u6b64\u5904\u7701\u7565getter\u548csetter\u7684\u4ee3\u7801<span class="token operator">-</span>\n    }'},["code","public class EmployeeDTO {\n    /*\u4e3b\u952e*/\n    private Long id;\n    /*\u59d3\u540d*/\n    private String name;\n    /*\u5de5\u8d44*/\n    private Integer salary;\n    /*\u96c7\u5458\u66f4\u65b0\u65f6\u95f4*/\n    private String employeeUpdateTime;\n    /*\u505c\u8f66\u4f4d\u4e3b\u952eid*/\n    private Long parkingSpaceId;\n    /*\u505c\u8f66\u4f4d\u5927\u5c0f*/\n    private Integer lot;\n    /*\u505c\u8f66\u4f4d\u4f4d\u7f6e*/\n    private String location;\n    /*\u505c\u8f66\u4f4d\u66f4\u65b0\u65f6\u95f4*/\n    private String parkingSpaceUpdateTime;\n    //------\u6b64\u5904\u7701\u7565getter\u548csetter\u7684\u4ee3\u7801-\n    }"]],["h3","5 \u5728 service>mapper \u5305\u4e0b\u5efa EmployeeMapper"],["hr"],["pre",{lang:null,highlighted:'<span class="token variable">@Mapper</span>\npublic interface EmployeeMapper {\n    EmployeeMapper MAPPER <span class="token operator">=</span> Mappers<span class="token punctuation">.</span><span class="token function">getMapper</span><span class="token punctuation">(</span>EmployeeMapper<span class="token punctuation">.</span>class<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n   @<span class="token function">Mappings</span><span class="token punctuation">(</span>{\n            @<span class="token function">Mapping</span><span class="token punctuation">(</span>source <span class="token operator">=</span> <span class="token string">"name"</span><span class="token punctuation">,</span> target <span class="token operator">=</span> <span class="token string">"name"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            @<span class="token function">Mapping</span><span class="token punctuation">(</span>source <span class="token operator">=</span> <span class="token string">"id"</span><span class="token punctuation">,</span> target <span class="token operator">=</span> <span class="token string">"id"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            @<span class="token function">Mapping</span><span class="token punctuation">(</span>source <span class="token operator">=</span> <span class="token string">"salary"</span><span class="token punctuation">,</span>target <span class="token operator">=</span> <span class="token string">"salary"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n           @<span class="token function">Mapping</span><span class="token punctuation">(</span>source <span class="token operator">=</span> <span class="token string">"employeeUpdateTime"</span><span class="token punctuation">,</span>target <span class="token operator">=</span> <span class="token string">"employeeUpdateTime"</span><span class="token punctuation">,</span>dateFormat <span class="token operator">=</span> <span class="token string">"yyyy-MM-dd HH:mm:ss"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n           @<span class="token function">Mapping</span><span class="token punctuation">(</span>source <span class="token operator">=</span> <span class="token string">"pSpace.id"</span><span class="token punctuation">,</span>target <span class="token operator">=</span> <span class="token string">"parkingSpaceId"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n           @<span class="token function">Mapping</span><span class="token punctuation">(</span>source <span class="token operator">=</span> <span class="token string">"pSpace.lot"</span><span class="token punctuation">,</span>target <span class="token operator">=</span> <span class="token string">"lot"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n           @<span class="token function">Mapping</span><span class="token punctuation">(</span>source <span class="token operator">=</span> <span class="token string">"pSpace.location"</span><span class="token punctuation">,</span>target <span class="token operator">=</span> <span class="token string">"location"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n           @<span class="token function">Mapping</span><span class="token punctuation">(</span>source <span class="token operator">=</span> <span class="token string">"pSpace.parkingSpaceUpdateTime"</span><span class="token punctuation">,</span>target <span class="token operator">=</span> <span class="token string">"parkingSpaceUpdateTime"</span><span class="token punctuation">,</span>dateFormat <span class="token operator">=</span> <span class="token string">"yyyy-MM-dd HH:mm:ss"</span><span class="token punctuation">)</span>\n         }<span class="token punctuation">)</span>\n   EmployeeDTO <span class="token function">employeeToEmployeeDTO</span><span class="token punctuation">(</span>Employee employee<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n}'},["code",'@Mapper\npublic interface EmployeeMapper {\n    EmployeeMapper MAPPER = Mappers.getMapper(EmployeeMapper.class);\n   @Mappings({\n            @Mapping(source = "name", target = "name"),\n            @Mapping(source = "id", target = "id"),\n            @Mapping(source = "salary",target = "salary"),\n           @Mapping(source = "employeeUpdateTime",target = "employeeUpdateTime",dateFormat = "yyyy-MM-dd HH:mm:ss"),\n           @Mapping(source = "pSpace.id",target = "parkingSpaceId"),\n           @Mapping(source = "pSpace.lot",target = "lot"),\n           @Mapping(source = "pSpace.location",target = "location"),\n           @Mapping(source = "pSpace.parkingSpaceUpdateTime",target = "parkingSpaceUpdateTime",dateFormat = "yyyy-MM-dd HH:mm:ss")\n         })\n   EmployeeDTO employeeToEmployeeDTO(Employee employee);\n}']],["p","mapper \u4f7f\u7528 mapstruct\uff0c\u9700\u8981\u5148\u5728 pom \u4e2d\u6dfb\u52a0\u4f9d\u8d56\uff0c\u5982\u4e0b\u6240\u793a\uff1a"],["pre",{lang:null,highlighted:'    <span class="token operator">&lt;</span>dependency<span class="token operator">></span>\n        <span class="token operator">&lt;</span>groupId<span class="token operator">></span>org<span class="token punctuation">.</span>mapstruct<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>\n        <span class="token operator">&lt;</span>artifactId<span class="token operator">></span>mapstruct<span class="token operator">-</span>jdk8<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>\n        <span class="token operator">&lt;</span>version<span class="token operator">></span><span class="token number">1.1</span><span class="token punctuation">.</span><span class="token number">0</span><span class="token punctuation">.</span>Final<span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span>\n    <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span>\n    <span class="token operator">&lt;</span>dependency<span class="token operator">></span>\n        <span class="token operator">&lt;</span>groupId<span class="token operator">></span>org<span class="token punctuation">.</span>mapstruct<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>\n        <span class="token operator">&lt;</span>artifactId<span class="token operator">></span>mapstruct<span class="token operator">-</span>processor<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>\n        <span class="token operator">&lt;</span>version<span class="token operator">></span><span class="token number">1.1</span><span class="token punctuation">.</span><span class="token number">0</span><span class="token punctuation">.</span>Final<span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span>\n        <span class="token operator">&lt;</span>scope<span class="token operator">></span>provided<span class="token operator">&lt;</span><span class="token operator">/</span>scope<span class="token operator">></span>\n    <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span>'},["code","    <dependency>\n        <groupId>org.mapstruct</groupId>\n        <artifactId>mapstruct-jdk8</artifactId>\n        <version>1.1.0.Final</version>\n    </dependency>\n    <dependency>\n        <groupId>org.mapstruct</groupId>\n        <artifactId>mapstruct-processor</artifactId>\n        <version>1.1.0.Final</version>\n        <scope>provided</scope>\n    </dependency>"]],["p","\u518d build \u81ea\u52a8\u751f\u6210\u5b9e\u73b0\u7c7b EmployeeMapperImpl\uff0c\u8bf7\u5728\u4ee5\u4e0b\u7684\u4f4d\u7f6e\u68c0\u67e5\u5b9e\u73b0\u7c7b\u662f\u5426\u5df2\u7ecf\u751f\u6210\uff0c\u5185\u5bb9\u662f\u5426\u5982\u81ea\u5df1\u9884\u671f"],["p","\u200b target>generated-source>annotations"],["p","EmployeeMapperImpl \u5185\u5bb9\u5982\u4e0b\uff1a"],["pre",{lang:null,highlighted:'public class EmployeeMapperImpl implements EmployeeMapper {\n\n    <span class="token variable">@Override</span>\n    public EmployeeDTO <span class="token function">employeeToEmployeeDTO</span><span class="token punctuation">(</span>Employee employee<span class="token punctuation">)</span> {\n        <span class="token keyword">if</span> <span class="token punctuation">(</span> employee <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token punctuation">)</span> {\n            return <span class="token keyword">null</span><span class="token comment" spellcheck="true">;</span>\n        }\n\n        EmployeeDTO employeeDTO <span class="token operator">=</span> new <span class="token function">EmployeeDTO</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\n        employeeDTO<span class="token punctuation">.</span><span class="token function">setParkingSpaceId</span><span class="token punctuation">(</span> <span class="token function">employeePSpaceId</span><span class="token punctuation">(</span> employee <span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        employeeDTO<span class="token punctuation">.</span><span class="token function">setLot</span><span class="token punctuation">(</span> <span class="token function">employeePSpaceLot</span><span class="token punctuation">(</span> employee <span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        employeeDTO<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span> employee<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        employeeDTO<span class="token punctuation">.</span><span class="token function">setLocation</span><span class="token punctuation">(</span> <span class="token function">employeePSpaceLocation</span><span class="token punctuation">(</span> employee <span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        employeeDTO<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span> employee<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        Date pSpace <span class="token operator">=</span> <span class="token function">employeePSpaceParkingSpaceUpdateTime</span><span class="token punctuation">(</span> employee <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span> pSpace !<span class="token operator">=</span> <span class="token keyword">null</span> <span class="token punctuation">)</span> {\n            employeeDTO<span class="token punctuation">.</span><span class="token function">setParkingSpaceUpdateTime</span><span class="token punctuation">(</span> new <span class="token function">SimpleDateFormat</span><span class="token punctuation">(</span> <span class="token string">"yyyy-MM-dd HH:mm:ss"</span> <span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span> pSpace <span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        }\n        employeeDTO<span class="token punctuation">.</span><span class="token function">setSalary</span><span class="token punctuation">(</span> employee<span class="token punctuation">.</span><span class="token function">getSalary</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span> employee<span class="token punctuation">.</span><span class="token function">getEmployeeUpdateTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> !<span class="token operator">=</span> <span class="token keyword">null</span> <span class="token punctuation">)</span> {\n            employeeDTO<span class="token punctuation">.</span><span class="token function">setEmployeeUpdateTime</span><span class="token punctuation">(</span> new <span class="token function">SimpleDateFormat</span><span class="token punctuation">(</span> <span class="token string">"yyyy-MM-dd HH:mm:ss"</span> <span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span> employee<span class="token punctuation">.</span><span class="token function">getEmployeeUpdateTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        }\n\n        return employeeDTO<span class="token comment" spellcheck="true">;</span>\n    }\n\n    private Long <span class="token function">employeePSpaceId</span><span class="token punctuation">(</span>Employee employee<span class="token punctuation">)</span> {\n\n        <span class="token keyword">if</span> <span class="token punctuation">(</span> employee <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token punctuation">)</span> {\n            return <span class="token keyword">null</span><span class="token comment" spellcheck="true">;</span>\n        }\n        ParkingSpace pSpace <span class="token operator">=</span> employee<span class="token punctuation">.</span><span class="token function">getpSpace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span> pSpace <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token punctuation">)</span> {\n            return <span class="token keyword">null</span><span class="token comment" spellcheck="true">;</span>\n        }\n        Long id <span class="token operator">=</span> pSpace<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span> id <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token punctuation">)</span> {\n            return <span class="token keyword">null</span><span class="token comment" spellcheck="true">;</span>\n        }\n        return id<span class="token comment" spellcheck="true">;</span>\n    }\n\n    private Integer <span class="token function">employeePSpaceLot</span><span class="token punctuation">(</span>Employee employee<span class="token punctuation">)</span> {\n\n        <span class="token keyword">if</span> <span class="token punctuation">(</span> employee <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token punctuation">)</span> {\n            return <span class="token keyword">null</span><span class="token comment" spellcheck="true">;</span>\n        }\n        ParkingSpace pSpace <span class="token operator">=</span> employee<span class="token punctuation">.</span><span class="token function">getpSpace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span> pSpace <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token punctuation">)</span> {\n            return <span class="token keyword">null</span><span class="token comment" spellcheck="true">;</span>\n        }\n        Integer lot <span class="token operator">=</span> pSpace<span class="token punctuation">.</span><span class="token function">getLot</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span> lot <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token punctuation">)</span> {\n            return <span class="token keyword">null</span><span class="token comment" spellcheck="true">;</span>\n        }\n        return lot<span class="token comment" spellcheck="true">;</span>\n    }\n\n    private String <span class="token function">employeePSpaceLocation</span><span class="token punctuation">(</span>Employee employee<span class="token punctuation">)</span> {\n\n        <span class="token keyword">if</span> <span class="token punctuation">(</span> employee <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token punctuation">)</span> {\n            return <span class="token keyword">null</span><span class="token comment" spellcheck="true">;</span>\n        }\n        ParkingSpace pSpace <span class="token operator">=</span> employee<span class="token punctuation">.</span><span class="token function">getpSpace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span> pSpace <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token punctuation">)</span> {\n            return <span class="token keyword">null</span><span class="token comment" spellcheck="true">;</span>\n        }\n        String location <span class="token operator">=</span> pSpace<span class="token punctuation">.</span><span class="token function">getLocation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span> location <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token punctuation">)</span> {\n            return <span class="token keyword">null</span><span class="token comment" spellcheck="true">;</span>\n        }\n        return location<span class="token comment" spellcheck="true">;</span>\n    }\n\n    private Date <span class="token function">employeePSpaceParkingSpaceUpdateTime</span><span class="token punctuation">(</span>Employee employee<span class="token punctuation">)</span> {\n\n        <span class="token keyword">if</span> <span class="token punctuation">(</span> employee <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token punctuation">)</span> {\n            return <span class="token keyword">null</span><span class="token comment" spellcheck="true">;</span>\n        }\n        ParkingSpace pSpace <span class="token operator">=</span> employee<span class="token punctuation">.</span><span class="token function">getpSpace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span> pSpace <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token punctuation">)</span> {\n            return <span class="token keyword">null</span><span class="token comment" spellcheck="true">;</span>\n        }\n        Date parkingSpaceUpdateTime <span class="token operator">=</span> pSpace<span class="token punctuation">.</span><span class="token function">getParkingSpaceUpdateTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span> parkingSpaceUpdateTime <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token punctuation">)</span> {\n            return <span class="token keyword">null</span><span class="token comment" spellcheck="true">;</span>\n        }\n        return parkingSpaceUpdateTime<span class="token comment" spellcheck="true">;</span>\n    }\n}'},["code",'public class EmployeeMapperImpl implements EmployeeMapper {\n\n    @Override\n    public EmployeeDTO employeeToEmployeeDTO(Employee employee) {\n        if ( employee == null ) {\n            return null;\n        }\n\n        EmployeeDTO employeeDTO = new EmployeeDTO();\n\n        employeeDTO.setParkingSpaceId( employeePSpaceId( employee ) );\n        employeeDTO.setLot( employeePSpaceLot( employee ) );\n        employeeDTO.setName( employee.getName() );\n        employeeDTO.setLocation( employeePSpaceLocation( employee ) );\n        employeeDTO.setId( employee.getId() );\n        Date pSpace = employeePSpaceParkingSpaceUpdateTime( employee );\n        if ( pSpace != null ) {\n            employeeDTO.setParkingSpaceUpdateTime( new SimpleDateFormat( "yyyy-MM-dd HH:mm:ss" ).format( pSpace ) );\n        }\n        employeeDTO.setSalary( employee.getSalary() );\n        if ( employee.getEmployeeUpdateTime() != null ) {\n            employeeDTO.setEmployeeUpdateTime( new SimpleDateFormat( "yyyy-MM-dd HH:mm:ss" ).format( employee.getEmployeeUpdateTime() ) );\n        }\n\n        return employeeDTO;\n    }\n\n    private Long employeePSpaceId(Employee employee) {\n\n        if ( employee == null ) {\n            return null;\n        }\n        ParkingSpace pSpace = employee.getpSpace();\n        if ( pSpace == null ) {\n            return null;\n        }\n        Long id = pSpace.getId();\n        if ( id == null ) {\n            return null;\n        }\n        return id;\n    }\n\n    private Integer employeePSpaceLot(Employee employee) {\n\n        if ( employee == null ) {\n            return null;\n        }\n        ParkingSpace pSpace = employee.getpSpace();\n        if ( pSpace == null ) {\n            return null;\n        }\n        Integer lot = pSpace.getLot();\n        if ( lot == null ) {\n            return null;\n        }\n        return lot;\n    }\n\n    private String employeePSpaceLocation(Employee employee) {\n\n        if ( employee == null ) {\n            return null;\n        }\n        ParkingSpace pSpace = employee.getpSpace();\n        if ( pSpace == null ) {\n            return null;\n        }\n        String location = pSpace.getLocation();\n        if ( location == null ) {\n            return null;\n        }\n        return location;\n    }\n\n    private Date employeePSpaceParkingSpaceUpdateTime(Employee employee) {\n\n        if ( employee == null ) {\n            return null;\n        }\n        ParkingSpace pSpace = employee.getpSpace();\n        if ( pSpace == null ) {\n            return null;\n        }\n        Date parkingSpaceUpdateTime = pSpace.getParkingSpaceUpdateTime();\n        if ( parkingSpaceUpdateTime == null ) {\n            return null;\n        }\n        return parkingSpaceUpdateTime;\n    }\n}']],["h3","6 \u5728 service \u5305\u4e0b IEmployeeService \u63a5\u53e3\uff0c\u5728 service>impl \u5305\u4e0b\u5efa EmployeeServiceImpl \u5b9e\u73b0\u7c7b"],["pre",{lang:null,highlighted:'public interface IEmployeeService {\n    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n     <span class="token operator">*</span>  \u6dfb\u52a0\u96c7\u5458\uff0c\u7ea7\u8054\u4fdd\u5b58\u505c\u8f66\u4f4d\n     <span class="token operator">*</span> <span class="token variable">@param</span> employeeDTO\n     <span class="token operator">*</span><span class="token operator">/</span>\n   public void <span class="token function">add</span><span class="token punctuation">(</span>EmployeeDTO employeeDTO<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\n    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n     <span class="token operator">*</span> \u7ea7\u8054\u5220\u9664\u96c7\u5458\u548c\u505c\u8f66\u4f4d\n     <span class="token operator">*</span> <span class="token variable">@param</span> id\n     <span class="token operator">*</span><span class="token operator">/</span>\n    public void <span class="token function">delete</span><span class="token punctuation">(</span>Long id<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\n    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n     <span class="token operator">*</span> \u4fee\u6539\u96c7\u5458\u548c\u505c\u8f66\u4f4d\u4fe1\u606f\n     <span class="token operator">*</span> <span class="token variable">@param</span> employeeDTO\n     <span class="token operator">*</span><span class="token operator">/</span>\n    public void <span class="token function">modify</span><span class="token punctuation">(</span>EmployeeDTO employeeDTO<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\n    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n     <span class="token operator">*</span> \u67e5\u8be2\u96c7\u5458\u4fe1\u606f<span class="token operator">-</span>\u5206\u9875\n     <span class="token operator">*</span> <span class="token variable">@param</span> husband\n     <span class="token operator">*</span> <span class="token variable">@param</span> pageable\n     <span class="token operator">*</span> <span class="token variable">@return</span>\n     <span class="token operator">*</span><span class="token operator">/</span>\n    public Page<span class="token operator">&lt;</span>EmployeeDTO<span class="token operator">></span> <span class="token function">queryPage</span><span class="token punctuation">(</span>EmployeeDTO husband<span class="token punctuation">,</span> Pageable pageable<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\n}\n\n<span class="token variable">@Transactional</span>\n<span class="token variable">@Service</span>\npublic class EmployeeServiceImpl implements IEmployeeService {\n   <span class="token variable">@Autowired</span>\n   EmployeeRepository employeeRepository<span class="token comment" spellcheck="true">;</span>\n    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n     <span class="token operator">*</span> \u6dfb\u52a0\u96c7\u5458\uff0c\u7ea7\u8054\u4fdd\u5b58\u96c7\u5458\u4fe1\u606f\n     <span class="token operator">*</span> <span class="token variable">@param</span> employeeDTO\n     <span class="token operator">*</span><span class="token operator">/</span>\n    <span class="token variable">@Override</span>\n    public void <span class="token function">add</span><span class="token punctuation">(</span>EmployeeDTO  employeeDTO<span class="token punctuation">)</span>{\n        <span class="token operator">/</span><span class="token operator">/</span>\u8bbe\u7f6e\u4ece\u5c5e\u8005\u505c\u8f66\u4f4d\u7684\u4fe1\u606f\n        ParkingSpace parkingSpace <span class="token operator">=</span> new <span class="token function">ParkingSpace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        parkingSpace<span class="token punctuation">.</span><span class="token function">setLocation</span><span class="token punctuation">(</span>employeeDTO<span class="token punctuation">.</span><span class="token function">getLocation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        parkingSpace<span class="token punctuation">.</span><span class="token function">setLot</span><span class="token punctuation">(</span>employeeDTO<span class="token punctuation">.</span><span class="token function">getLot</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        parkingSpace<span class="token punctuation">.</span><span class="token function">setParkingSpaceUpdateTime</span><span class="token punctuation">(</span>new <span class="token function">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        <span class="token operator">/</span><span class="token operator">/</span>\u8bbe\u7f6e\u4e3b\u5bfc\u8005\u96c7\u5458\u7684\u4fe1\u606f\n        Employee employee <span class="token operator">=</span> new <span class="token function">Employee</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        BeanUtils<span class="token punctuation">.</span><span class="token function">copyProperties</span><span class="token punctuation">(</span>employeeDTO<span class="token punctuation">,</span>employee<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        employee<span class="token punctuation">.</span><span class="token function">setEmployeeUpdateTime</span><span class="token punctuation">(</span>new <span class="token function">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        <span class="token operator">/</span><span class="token operator">/</span>\u8bbe\u7f6e\u96c7\u5458\u7684\u505c\u8f66\u4f4d\n        employee<span class="token punctuation">.</span><span class="token function">setpSpace</span><span class="token punctuation">(</span>parkingSpace<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        <span class="token operator">/</span><span class="token operator">/</span>\u7ea7\u8054\u4fdd\u5b58\u96c7\u5458\u548c\u505c\u8f66\u4f4d\n        employeeRepository<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>employee<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    }\n    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n     <span class="token operator">*</span> \u5220\u9664\u96c7\u5458\uff0c\u7ea7\u8054\u5220\u9664\u505c\u8f66\u4f4d\n     <span class="token operator">*</span> <span class="token variable">@param</span> id\n     <span class="token operator">*</span><span class="token operator">/</span>\n    <span class="token variable">@Override</span>\n    public void <span class="token function">delete</span><span class="token punctuation">(</span>Long id<span class="token punctuation">)</span>{\n        Employee employee <span class="token operator">=</span> employeeRepository<span class="token punctuation">.</span><span class="token function">findOne</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        <span class="token function">if</span><span class="token punctuation">(</span>employee !<span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> {\n            employeeRepository<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>employee<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        }\n    }\n\n    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n     <span class="token operator">*</span> \u4fee\u6539\u96c7\u5458\u4fe1\u606f\n     <span class="token operator">*</span> <span class="token variable">@param</span> employeeDTO\n     <span class="token operator">*</span><span class="token operator">/</span>\n    <span class="token variable">@Override</span>\n    public void <span class="token function">modify</span><span class="token punctuation">(</span>EmployeeDTO employeeDTO<span class="token punctuation">)</span> {\n        Employee employee <span class="token operator">=</span> employeeRepository<span class="token punctuation">.</span><span class="token function">findOne</span><span class="token punctuation">(</span>employeeDTO<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>employee !<span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> {\n           <span class="token function">if</span><span class="token punctuation">(</span>employeeDTO<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> !<span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>{\n               employee<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span>employeeDTO<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n           }\n           <span class="token function">if</span><span class="token punctuation">(</span>employeeDTO<span class="token punctuation">.</span><span class="token function">getSalary</span><span class="token punctuation">(</span><span class="token punctuation">)</span> !<span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>{\n               employee<span class="token punctuation">.</span><span class="token function">setSalary</span><span class="token punctuation">(</span>employeeDTO<span class="token punctuation">.</span><span class="token function">getSalary</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n           }\n           employee<span class="token punctuation">.</span><span class="token function">setEmployeeUpdateTime</span><span class="token punctuation">(</span>new <span class="token function">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n            ParkingSpace parkingSpace <span class="token operator">=</span> employee<span class="token punctuation">.</span><span class="token function">getpSpace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n            <span class="token function">if</span><span class="token punctuation">(</span>parkingSpace !<span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>{\n                <span class="token function">if</span><span class="token punctuation">(</span>employeeDTO<span class="token punctuation">.</span><span class="token function">getLot</span><span class="token punctuation">(</span><span class="token punctuation">)</span> !<span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>{\n                    parkingSpace<span class="token punctuation">.</span><span class="token function">setLot</span><span class="token punctuation">(</span>employeeDTO<span class="token punctuation">.</span><span class="token function">getLot</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n                }\n                <span class="token function">if</span><span class="token punctuation">(</span>employeeDTO<span class="token punctuation">.</span><span class="token function">getLocation</span><span class="token punctuation">(</span><span class="token punctuation">)</span> !<span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>{\n                    parkingSpace<span class="token punctuation">.</span><span class="token function">setLocation</span><span class="token punctuation">(</span>employeeDTO<span class="token punctuation">.</span><span class="token function">getLocation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n                }\n                parkingSpace<span class="token punctuation">.</span><span class="token function">setParkingSpaceUpdateTime</span><span class="token punctuation">(</span>new <span class="token function">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n            }\n            employeeRepository<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>employee<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        }\n    }\n\n    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n     <span class="token operator">*</span> \u67e5\u8be2\u96c7\u5458\u4fe1\u606f\n     <span class="token operator">*</span> <span class="token variable">@param</span> employeeDTO\n     <span class="token operator">*</span> <span class="token variable">@param</span> pageable\n     <span class="token operator">*</span> <span class="token variable">@return</span>\n     <span class="token operator">*</span><span class="token operator">/</span>\n    <span class="token variable">@Override</span>\n    public Page<span class="token operator">&lt;</span>EmployeeDTO<span class="token operator">></span> <span class="token function">queryPage</span><span class="token punctuation">(</span>EmployeeDTO employeeDTO<span class="token punctuation">,</span> Pageable pageable<span class="token punctuation">)</span>{\n        Specification<span class="token operator">&lt;</span>Employee<span class="token operator">></span> specification <span class="token operator">=</span> <span class="token function">createSpecification</span><span class="token punctuation">(</span>employeeDTO<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n       return  employeeRepository<span class="token punctuation">.</span><span class="token function">findAll</span><span class="token punctuation">(</span>specification<span class="token punctuation">,</span>pageable<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>h <span class="token operator">-</span><span class="token operator">></span> {\n             EmployeeDTO employeeDTO1 <span class="token operator">=</span> EmployeeMapper<span class="token punctuation">.</span>MAPPER<span class="token punctuation">.</span><span class="token function">employeeToEmployeeDTO</span><span class="token punctuation">(</span>h<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n             return employeeDTO1<span class="token comment" spellcheck="true">;</span>\n         }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    }\n\n    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n     <span class="token operator">*</span> \u521b\u5efa\u67e5\u8be2\u6761\u4ef6\n     <span class="token operator">*</span> <span class="token variable">@param</span> employeeDTO\n     <span class="token operator">*</span> <span class="token variable">@return</span>\n     <span class="token operator">*</span><span class="token operator">/</span>\n\n    private Specification<span class="token operator">&lt;</span>Employee<span class="token operator">></span> <span class="token function">createSpecification</span><span class="token punctuation">(</span>EmployeeDTO employeeDTO<span class="token punctuation">)</span> {\n        return <span class="token punctuation">(</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> criteriaQuery<span class="token punctuation">,</span> criteriaBuilder<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> {\n                List<span class="token operator">&lt;</span>Predicate<span class="token operator">></span> query <span class="token operator">=</span> new ArrayList<span class="token operator">&lt;</span>Predicate<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n            List<span class="token operator">&lt;</span>Order<span class="token operator">></span> orders <span class="token operator">=</span> new ArrayList<span class="token operator">&lt;</span>Order<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n            orders<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>criteriaBuilder<span class="token punctuation">.</span><span class="token function">desc</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"employeeUpdateTime"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n            criteriaQuery<span class="token punctuation">.</span><span class="token function">orderBy</span><span class="token punctuation">(</span>orders<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n            <span class="token function">if</span><span class="token punctuation">(</span>employeeDTO<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> !<span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>{\n                    query<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>criteriaBuilder<span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"%"</span> <span class="token operator">+</span> employeeDTO<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"%"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n                }\n                Predicate<span class="token punctuation">[</span><span class="token punctuation">]</span> ps <span class="token operator">=</span> new Predicate<span class="token punctuation">[</span>query<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>\n                return criteriaBuilder<span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span>query<span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span>ps<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    }\n}'},["code",'public interface IEmployeeService {\n    /**\n     *  \u6dfb\u52a0\u96c7\u5458\uff0c\u7ea7\u8054\u4fdd\u5b58\u505c\u8f66\u4f4d\n     * @param employeeDTO\n     */\n   public void add(EmployeeDTO employeeDTO);\n\n    /**\n     * \u7ea7\u8054\u5220\u9664\u96c7\u5458\u548c\u505c\u8f66\u4f4d\n     * @param id\n     */\n    public void delete(Long id);\n\n    /**\n     * \u4fee\u6539\u96c7\u5458\u548c\u505c\u8f66\u4f4d\u4fe1\u606f\n     * @param employeeDTO\n     */\n    public void modify(EmployeeDTO employeeDTO);\n\n    /**\n     * \u67e5\u8be2\u96c7\u5458\u4fe1\u606f-\u5206\u9875\n     * @param husband\n     * @param pageable\n     * @return\n     */\n    public Page<EmployeeDTO> queryPage(EmployeeDTO husband, Pageable pageable);\n\n}\n\n@Transactional\n@Service\npublic class EmployeeServiceImpl implements IEmployeeService {\n   @Autowired\n   EmployeeRepository employeeRepository;\n    /**\n     * \u6dfb\u52a0\u96c7\u5458\uff0c\u7ea7\u8054\u4fdd\u5b58\u96c7\u5458\u4fe1\u606f\n     * @param employeeDTO\n     */\n    @Override\n    public void add(EmployeeDTO  employeeDTO){\n        //\u8bbe\u7f6e\u4ece\u5c5e\u8005\u505c\u8f66\u4f4d\u7684\u4fe1\u606f\n        ParkingSpace parkingSpace = new ParkingSpace();\n        parkingSpace.setLocation(employeeDTO.getLocation());\n        parkingSpace.setLot(employeeDTO.getLot());\n        parkingSpace.setParkingSpaceUpdateTime(new Date());\n        //\u8bbe\u7f6e\u4e3b\u5bfc\u8005\u96c7\u5458\u7684\u4fe1\u606f\n        Employee employee = new Employee();\n        BeanUtils.copyProperties(employeeDTO,employee);\n        employee.setEmployeeUpdateTime(new Date());\n        //\u8bbe\u7f6e\u96c7\u5458\u7684\u505c\u8f66\u4f4d\n        employee.setpSpace(parkingSpace);\n        //\u7ea7\u8054\u4fdd\u5b58\u96c7\u5458\u548c\u505c\u8f66\u4f4d\n        employeeRepository.save(employee);\n    }\n    /**\n     * \u5220\u9664\u96c7\u5458\uff0c\u7ea7\u8054\u5220\u9664\u505c\u8f66\u4f4d\n     * @param id\n     */\n    @Override\n    public void delete(Long id){\n        Employee employee = employeeRepository.findOne(id);\n        if(employee != null) {\n            employeeRepository.delete(employee);\n        }\n    }\n\n    /**\n     * \u4fee\u6539\u96c7\u5458\u4fe1\u606f\n     * @param employeeDTO\n     */\n    @Override\n    public void modify(EmployeeDTO employeeDTO) {\n        Employee employee = employeeRepository.findOne(employeeDTO.getId());\n        if (employee != null) {\n           if(employeeDTO.getName() != null){\n               employee.setName(employeeDTO.getName());\n           }\n           if(employeeDTO.getSalary() != null){\n               employee.setSalary(employeeDTO.getSalary());\n           }\n           employee.setEmployeeUpdateTime(new Date());\n            ParkingSpace parkingSpace = employee.getpSpace();\n            if(parkingSpace != null){\n                if(employeeDTO.getLot() != null){\n                    parkingSpace.setLot(employeeDTO.getLot());\n                }\n                if(employeeDTO.getLocation() != null){\n                    parkingSpace.setLocation(employeeDTO.getLocation());\n                }\n                parkingSpace.setParkingSpaceUpdateTime(new Date());\n            }\n            employeeRepository.save(employee);\n        }\n    }\n\n    /**\n     * \u67e5\u8be2\u96c7\u5458\u4fe1\u606f\n     * @param employeeDTO\n     * @param pageable\n     * @return\n     */\n    @Override\n    public Page<EmployeeDTO> queryPage(EmployeeDTO employeeDTO, Pageable pageable){\n        Specification<Employee> specification = createSpecification(employeeDTO);\n       return  employeeRepository.findAll(specification,pageable).map(h -> {\n             EmployeeDTO employeeDTO1 = EmployeeMapper.MAPPER.employeeToEmployeeDTO(h);\n             return employeeDTO1;\n         });\n    }\n\n    /**\n     * \u521b\u5efa\u67e5\u8be2\u6761\u4ef6\n     * @param employeeDTO\n     * @return\n     */\n\n    private Specification<Employee> createSpecification(EmployeeDTO employeeDTO) {\n        return ((root, criteriaQuery, criteriaBuilder) -> {\n                List<Predicate> query = new ArrayList<Predicate>();\n            List<Order> orders = new ArrayList<Order>();\n            orders.add(criteriaBuilder.desc(root.get("employeeUpdateTime")));\n            criteriaQuery.orderBy(orders);\n            if(employeeDTO.getName() != null){\n                    query.add(criteriaBuilder.like(root.get("name"), "%" + employeeDTO.getName() + "%"));\n                }\n                Predicate[] ps = new Predicate[query.size()];\n                return criteriaBuilder.and(query.toArray(ps));\n        });\n    }\n}']],["h3","7 \u5728 web.rest \u5305\u4e0b\u5efa EmployeeResource \u7c7b\uff0c\u5b9e\u73b0 rest api \u63a5\u53e3"],["pre",{lang:null,highlighted:'<span class="token variable">@RestController</span>\n@<span class="token function">RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"/api/DemoForOneToOne"</span><span class="token punctuation">)</span>\npublic class EmployeeResource extends BaseResource {\n    private final Log logger <span class="token operator">=</span> LogFactory<span class="token punctuation">.</span><span class="token function">getLog</span><span class="token punctuation">(</span>EmployeeResource<span class="token punctuation">.</span>class<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    <span class="token variable">@Autowired</span>\n    IEmployeeService employeeService<span class="token comment" spellcheck="true">;</span>\n    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n     <span class="token operator">*</span> \u6dfb\u52a0\u96c7\u5458\uff0c\u7ea7\u8054\u4fdd\u5b58\u505c\u8f66\u4f4d\n     <span class="token operator">*</span> <span class="token variable">@param</span> employeeDTO\n     <span class="token operator">*</span> <span class="token variable">@return</span>\n     <span class="token operator">*</span><span class="token operator">/</span>\n   @<span class="token function">RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"/new"</span><span class="token punctuation">,</span> method <span class="token operator">=</span> RequestMethod<span class="token punctuation">.</span>POST<span class="token punctuation">)</span>\n    public ResponseDTO <span class="token function">addEmployee</span><span class="token punctuation">(</span><span class="token variable">@RequestBody</span> EmployeeDTO employeeDTO<span class="token punctuation">)</span>{\n        try{\n            employeeService<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>employeeDTO<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        }catch <span class="token punctuation">(</span>Exception e<span class="token punctuation">)</span>{\n            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n            return <span class="token function">getResponseDTO</span><span class="token punctuation">(</span><span class="token string">"201"</span><span class="token punctuation">,</span> <span class="token string">"\u7cfb\u7edf\u9519\u8bef"</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        }\n        return <span class="token function">getResponseDTO</span><span class="token punctuation">(</span><span class="token string">"200"</span><span class="token punctuation">,</span> <span class="token string">"\u64cd\u4f5c\u6210\u529f"</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    }\n\n    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n     <span class="token operator">*</span> \u5220\u9664\u96c7\u5458\u548c\u76f8\u5e94\u7684\u505c\u8f66\u4f4d\n     <span class="token operator">*</span> <span class="token variable">@param</span> idInfo \u96c7\u5458id\n     <span class="token operator">*</span> <span class="token variable">@return</span>\n     <span class="token operator">*</span><span class="token operator">/</span>\n    @<span class="token function">RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"/delete"</span><span class="token punctuation">,</span> method <span class="token operator">=</span> RequestMethod<span class="token punctuation">.</span>POST<span class="token punctuation">)</span>\n    public ResponseDTO <span class="token function">deleteHusband</span><span class="token punctuation">(</span><span class="token variable">@RequestBody</span> Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span>Long<span class="token operator">></span> idInfo<span class="token punctuation">)</span>{\n        try{\n            <span class="token function">if</span><span class="token punctuation">(</span>idInfo !<span class="token operator">=</span> <span class="token keyword">null</span> <span class="token operator">&amp;</span><span class="token operator">&amp;</span> idInfo<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span> !<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">)</span>{\n                employeeService<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>idInfo<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n            }\n        }catch <span class="token punctuation">(</span>Exception e<span class="token punctuation">)</span>{\n            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n            return <span class="token function">getResponseDTO</span><span class="token punctuation">(</span><span class="token string">"201"</span><span class="token punctuation">,</span> <span class="token string">"\u7cfb\u7edf\u9519\u8bef"</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        }\n        return <span class="token function">getResponseDTO</span><span class="token punctuation">(</span><span class="token string">"200"</span><span class="token punctuation">,</span> <span class="token string">"\u64cd\u4f5c\u6210\u529f"</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    }\n\n    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n     <span class="token operator">*</span> \u4fee\u6539\u96c7\u5458\u4fe1\u606f\n     <span class="token operator">*</span> <span class="token variable">@param</span> employeeDTO\n     <span class="token operator">*</span> <span class="token variable">@return</span>\n     <span class="token operator">*</span><span class="token operator">/</span>\n    @<span class="token function">RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"/modify"</span><span class="token punctuation">,</span> method <span class="token operator">=</span> RequestMethod<span class="token punctuation">.</span>POST<span class="token punctuation">)</span>\n    public ResponseDTO <span class="token function">modify</span><span class="token punctuation">(</span><span class="token variable">@RequestBody</span> EmployeeDTO employeeDTO<span class="token punctuation">)</span>{\n        try{\n            employeeService<span class="token punctuation">.</span><span class="token function">modify</span><span class="token punctuation">(</span>employeeDTO<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        }catch <span class="token punctuation">(</span>Exception e<span class="token punctuation">)</span>{\n            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n            return <span class="token function">getResponseDTO</span><span class="token punctuation">(</span><span class="token string">"201"</span><span class="token punctuation">,</span> <span class="token string">"\u7cfb\u7edf\u9519\u8bef"</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        }\n        return <span class="token function">getResponseDTO</span><span class="token punctuation">(</span><span class="token string">"200"</span><span class="token punctuation">,</span> <span class="token string">"\u64cd\u4f5c\u6210\u529f"</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    }\n\n    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n     <span class="token operator">*</span> \u67e5\u8be2\u96c7\u5458\u4fe1\u606f<span class="token operator">-</span>\u5206\u9875\n     <span class="token operator">*</span> <span class="token variable">@param</span> employeeDTO\n     <span class="token operator">*</span> <span class="token variable">@param</span> pageable\n     <span class="token operator">*</span> <span class="token variable">@return</span>\n     <span class="token operator">*</span><span class="token operator">/</span>\n\n    @<span class="token function">RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"/queryPage"</span><span class="token punctuation">,</span> method <span class="token operator">=</span> RequestMethod<span class="token punctuation">.</span>POST<span class="token punctuation">)</span>\n    public ResponseDTO <span class="token function">queryPage</span><span class="token punctuation">(</span><span class="token variable">@RequestBody</span> EmployeeDTO employeeDTO<span class="token punctuation">,</span> Pageable pageable<span class="token punctuation">)</span> {\n        try {\n            Page<span class="token operator">&lt;</span>EmployeeDTO<span class="token operator">></span> result <span class="token operator">=</span> employeeService<span class="token punctuation">.</span><span class="token function">queryPage</span><span class="token punctuation">(</span>employeeDTO<span class="token punctuation">,</span> pageable<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n            return <span class="token function">getResponseDTO</span><span class="token punctuation">(</span><span class="token string">"200"</span><span class="token punctuation">,</span> <span class="token string">"\u64cd\u4f5c\u6210\u529f"</span><span class="token punctuation">,</span> result<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        } catch <span class="token punctuation">(</span>Exception e<span class="token punctuation">)</span> {\n            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n            return <span class="token function">getResponseDTO</span><span class="token punctuation">(</span><span class="token string">"201"</span><span class="token punctuation">,</span> <span class="token string">"\u7cfb\u7edf\u9519\u8bef"</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        }\n    }\n}'},["code",'@RestController\n@RequestMapping(value = "/api/DemoForOneToOne")\npublic class EmployeeResource extends BaseResource {\n    private final Log logger = LogFactory.getLog(EmployeeResource.class);\n    @Autowired\n    IEmployeeService employeeService;\n    /**\n     * \u6dfb\u52a0\u96c7\u5458\uff0c\u7ea7\u8054\u4fdd\u5b58\u505c\u8f66\u4f4d\n     * @param employeeDTO\n     * @return\n     */\n   @RequestMapping(value = "/new", method = RequestMethod.POST)\n    public ResponseDTO addEmployee(@RequestBody EmployeeDTO employeeDTO){\n        try{\n            employeeService.add(employeeDTO);\n        }catch (Exception e){\n            e.printStackTrace();\n            return getResponseDTO("201", "\u7cfb\u7edf\u9519\u8bef", null);\n        }\n        return getResponseDTO("200", "\u64cd\u4f5c\u6210\u529f", null);\n    }\n\n    /**\n     * \u5220\u9664\u96c7\u5458\u548c\u76f8\u5e94\u7684\u505c\u8f66\u4f4d\n     * @param idInfo \u96c7\u5458id\n     * @return\n     */\n    @RequestMapping(value = "/delete", method = RequestMethod.POST)\n    public ResponseDTO deleteHusband(@RequestBody Map<String,Long> idInfo){\n        try{\n            if(idInfo != null && idInfo.get("id") !=null){\n                employeeService.delete(idInfo.get("id"));\n            }\n        }catch (Exception e){\n            e.printStackTrace();\n            return getResponseDTO("201", "\u7cfb\u7edf\u9519\u8bef", null);\n        }\n        return getResponseDTO("200", "\u64cd\u4f5c\u6210\u529f", null);\n    }\n\n    /**\n     * \u4fee\u6539\u96c7\u5458\u4fe1\u606f\n     * @param employeeDTO\n     * @return\n     */\n    @RequestMapping(value = "/modify", method = RequestMethod.POST)\n    public ResponseDTO modify(@RequestBody EmployeeDTO employeeDTO){\n        try{\n            employeeService.modify(employeeDTO);\n        }catch (Exception e){\n            e.printStackTrace();\n            return getResponseDTO("201", "\u7cfb\u7edf\u9519\u8bef", null);\n        }\n        return getResponseDTO("200", "\u64cd\u4f5c\u6210\u529f", null);\n    }\n\n    /**\n     * \u67e5\u8be2\u96c7\u5458\u4fe1\u606f-\u5206\u9875\n     * @param employeeDTO\n     * @param pageable\n     * @return\n     */\n\n    @RequestMapping(value = "/queryPage", method = RequestMethod.POST)\n    public ResponseDTO queryPage(@RequestBody EmployeeDTO employeeDTO, Pageable pageable) {\n        try {\n            Page<EmployeeDTO> result = employeeService.queryPage(employeeDTO, pageable);\n            return getResponseDTO("200", "\u64cd\u4f5c\u6210\u529f", result);\n        } catch (Exception e) {\n            e.printStackTrace();\n            return getResponseDTO("201", "\u7cfb\u7edf\u9519\u8bef", null);\n        }\n    }\n}']],["p","\u63a5\u53e3\u4ee3\u7801\u5b8c\u6210\uff0c\u7528 postman \u8fdb\u884c\u63a5\u53e3\u7684\u6d4b\u8bd5"]],meta:{title:"OneToOne",tag:"\u540e\u7aef\u5f00\u53d1",publishDate:"2018-03-13T00:00:00.000Z",filename:"posts/BEresource/one-to-one.md"},description:["section",["h2","\u5305\u7684\u8bf4\u660e"],["p",["strong","domain:"]," domain \u5305\u4e0b\u662f\u5bf9\u5b9e\u4f53\u7684\u5b9a\u4e49\n",["strong","service:"]," \u670d\u52a1\u7684\u63a5\u53e3\u5b9a\u4e49\u548c\u5b9e\u73b0\n",["strong","repository:"]," repository \u5305\u4e0b\u662f\u5bf9\u6570\u636e\u63a5\u5165\u5c42\u63a5\u53e3\u7684\u5b9a\u4e49\n",["strong","web.rest:"]," REST API \u5b9e\u73b0\n",["strong","dto:"]," DTO \u8d77\u5230\u4e1a\u52a1\u6570\u636e\u7684\u4f20\u9012\u4f5c\u7528\n",["strong","mapper:"]," \u5b9e\u4f53\u548c DTO \u4e4b\u95f4\u4e92\u76f8\u8f6c\u6362"],["h1","one to one \u4f8b\u5b50\u8bf4\u660e"],["p","\u8bbe\u6709 2 \u4e2a\u5b9e\u4f53\uff0c\u96c7\u5458\u548c\u505c\u8f66\u4f4d \u3002\u4e00\u4e2a\u96c7\u5458\u53ea\u80fd\u62e5\u6709\u4e00\u4e2a\u505c\u8f66\u4f4d\uff0c\u4e00\u4e2a\u505c\u8f66\u4f4d\u53ea\u80fd\u5c5e\u4e8e\u4e00\u4e2a\u96c7\u5458\uff0c\u56e0\u6b64\u5b83\u4eec\u662f 1 \u5bf9 1 \u7684\u5173\u7cfb\u3002\u5728 1 \u5bf9 1 \u5173\u7cfb\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u533a\u5206\u4e3b\u5bfc\u8005\u548c\u4ece\u5c5e\u8005\uff0c\u6240\u8c13\u7684\u4e3b\u5bfc\u8005\u5c31\u662f\u62e5\u6709\u5916\u952e\u7684\u5b9e\u4f53\u3002\u672c\u4f8b\u4e2d\u6211\u4eec\u5c06\u96c7\u5458\u8bbe\u7f6e\u4e3a\u4e3b\u5bfc\u8005\u3002\u76ee\u6807\u662f\u5b9e\u73b0\u529f\u80fd\u96c7\u5458\u7684\u589e\u5220\u67e5\u6539\uff0c\u505c\u8f66\u4f4d\u7ea7\u8054\u589e\u5220\u67e5\u6539\u3002"]]}}});