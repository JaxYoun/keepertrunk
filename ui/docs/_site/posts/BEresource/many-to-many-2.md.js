webpackJsonp([18],{461:function(n,s){n.exports={content:["article",{},["p","\u8bbe\u6709 3 \u4e2a\u5b9e\u4f53\uff0c\u5206\u522b\u662f\u7528\u6237\u8ba2\u5355\uff0c\u94f6\u884c\u5361\u8bb0\u5f55\uff0c\u4e24\u8005\u4e2d\u95f4\u5b9e\u4f53\uff0c\u8ba2\u5355\u548c\u5237\u5361\u6d88\u8d39\u662f\u591a\u5bf9\u591a\u5173\u7cfb\u3002\u8fd9\u91cc\u91c7\u7528\u4e2d\u95f4\u8868\u7684\u5f62\u5f0f\u7ef4\u62a4\u5173\u7cfb\u3002"],["hr"],["h2","\u5b9e\u73b0\u6b65\u9aa4"],["h3","1 \u5efa\u8868 \u6211\u4eec\u7528 sql \u8bed\u53e5\u5efa\u7acb\u8005\u4e24\u4e2a\u8868\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528 hibernate \u81ea\u5df1\u521b\u5efa\u3002"],["hr"],["p","-- \u521b\u5efa bank_card \u8868 --\nDROP TABLE IF EXISTS ",["code","bank_card"],";\nCREATE TABLE ",["code","bank_card"]," (\n",["code","id"]," bigint(20) NOT NULL AUTO_INCREMENT,\n",["code","created_by"]," bigint(20) NOT NULL,\n",["code","created_date"]," bigint(20) NOT NULL,\n",["code","last_modified_by"]," bigint(20) DEFAULT NULL,\n",["code","last_modified_date"]," bigint(20) DEFAULT NULL,\n",["code","data_status"]," varchar(255) COLLATE utf8_bin DEFAULT NULL,\n",["code","bank_name"]," varchar(255) COLLATE utf8_bin DEFAULT NULL,\n",["code","card_num"]," varchar(255) COLLATE utf8_bin DEFAULT NULL,\nPRIMARY KEY (",["code","id"],")\n) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8 COLLATE=utf8_bin;"],["p","-- \u521b\u5efa card_order_middle \u8868 --\nDROP TABLE IF EXISTS ",["code","card_order_middle"],";\nCREATE TABLE ",["code","card_order_middle"]," (\n",["code","id"]," bigint(20) NOT NULL AUTO_INCREMENT,\n",["code","created_by"]," bigint(20) NOT NULL,\n",["code","created_date"]," bigint(20) NOT NULL,\n",["code","last_modified_by"]," bigint(20) DEFAULT NULL,\n",["code","last_modified_date"]," bigint(20) DEFAULT NULL,\n",["code","data_status"]," varchar(255) COLLATE utf8_bin DEFAULT NULL,\n",["code","bank_card_id"]," bigint(20) DEFAULT NULL,\n",["code","consumer_order_id"]," bigint(20) DEFAULT NULL,\nPRIMARY KEY (",["code","id"],"),\nKEY ",["code","FK4mngcgqlgrg3plvnlcd96d9c6"]," (",["code","bank_card_id"],"),\nKEY ",["code","FKopd39gh9k6l2bl6232qsmtfmh"]," (",["code","consumer_order_id"],"),\nCONSTRAINT ",["code","FK4mngcgqlgrg3plvnlcd96d9c6"]," FOREIGN KEY (",["code","bank_card_id"],") REFERENCES ",["code","bank_card"]," (",["code","id"],"),\nCONSTRAINT ",["code","FKopd39gh9k6l2bl6232qsmtfmh"]," FOREIGN KEY (",["code","consumer_order_id"],") REFERENCES ",["code","consumer_order"]," (",["code","id"],")\n) ENGINE=InnoDB AUTO_INCREMENT=9 DEFAULT CHARSET=utf8 COLLATE=utf8_bin;\n-- \u521b\u5efa consumer_order \u8868 --\nDROP TABLE IF EXISTS ",["code","consumer_order"],";\nCREATE TABLE ",["code","consumer_order"]," (\n",["code","id"]," bigint(20) NOT NULL AUTO_INCREMENT,\n",["code","created_by"]," bigint(20) NOT NULL,\n",["code","created_date"]," bigint(20) NOT NULL,\n",["code","last_modified_by"]," bigint(20) DEFAULT NULL,\n",["code","last_modified_date"]," bigint(20) DEFAULT NULL,\n",["code","data_status"]," varchar(255) COLLATE utf8_bin DEFAULT NULL,\n",["code","goods_num"]," int(11) DEFAULT NULL,\n",["code","store_num"]," int(11) DEFAULT NULL,\n",["code","total_money"]," double DEFAULT NULL,\nPRIMARY KEY (",["code","id"],")\n) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8 COLLATE=utf8_bin;"],["h3","2 \u5728 domain \u5305\u4e0b\u5efa\u5b9e\u4f53\u7c7b BankCard\uff0cConsumerOrder \u548c CardOrderMiddle"],["hr"],["p","\u94f6\u884c\u5361\u7c7b\uff1a"],["pre",{lang:null,highlighted:'<span class="token variable">@Entity</span>\n@<span class="token function">Table</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"bank_card"</span><span class="token punctuation">)</span>\npublic class BankCard extends BaseAuditingEntity {\n\n<span class="token operator">/</span><span class="token operator">/</span>\u5361\u53f7\n@<span class="token function">Column</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"card_num"</span><span class="token punctuation">)</span>\nprivate String cardNum<span class="token comment" spellcheck="true">;</span>\n\n<span class="token operator">/</span><span class="token operator">/</span>\u94f6\u884c\u540d\n@<span class="token function">Column</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"bank_name"</span><span class="token punctuation">)</span>\nprivate String bankName<span class="token comment" spellcheck="true">;</span>\n\n<span class="token operator">/</span><span class="token operator">/</span>\u5173\u8054\u4e2d\u95f4\u8868\n@<span class="token function">OneToMany</span><span class="token punctuation">(</span>fetch <span class="token operator">=</span> FetchType<span class="token punctuation">.</span>LAZY<span class="token punctuation">,</span>mappedBy <span class="token operator">=</span> <span class="token string">"bankCard"</span><span class="token punctuation">)</span>\nprivate List<span class="token operator">&lt;</span>CardOrderMiddle<span class="token operator">></span> cardOrderMiddleList<span class="token comment" spellcheck="true">;</span>\n<span class="token operator">/</span><span class="token operator">/</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span>\u6b64\u5904\u7701\u7565getter\u548csetter\u7684\u4ee3\u7801<span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span>\n}'},["code",'@Entity\n@Table(name = "bank_card")\npublic class BankCard extends BaseAuditingEntity {\n\n//\u5361\u53f7\n@Column(name = "card_num")\nprivate String cardNum;\n\n//\u94f6\u884c\u540d\n@Column(name = "bank_name")\nprivate String bankName;\n\n//\u5173\u8054\u4e2d\u95f4\u8868\n@OneToMany(fetch = FetchType.LAZY,mappedBy = "bankCard")\nprivate List<CardOrderMiddle> cardOrderMiddleList;\n//------\u6b64\u5904\u7701\u7565getter\u548csetter\u7684\u4ee3\u7801----------\n}']],["p",'\u4e2d\u95f4\u8868\u7c7b\uff1a\n@Entity\n//\u6307\u5b9a\u6570\u636e\u5e93\u8868\u540d\n@Table(name = "card_order_middle")\npublic class CardOrderMiddle extends BaseAuditingEntity {'],["pre",{lang:null,highlighted:'<span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n <span class="token operator">*</span> \u94f6\u884c\u5361\u4fe1\u606f\n <span class="token operator">*</span><span class="token operator">/</span>\n@<span class="token function">ManyToOne</span><span class="token punctuation">(</span>fetch <span class="token operator">=</span> FetchType<span class="token punctuation">.</span>LAZY<span class="token punctuation">)</span>\n@<span class="token function">JoinColumn</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"bank_card_id"</span><span class="token punctuation">)</span>\nprivate  BankCard bankCard<span class="token comment" spellcheck="true">;</span>\n\n<span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n <span class="token operator">*</span> \u7528\u6237\u8ba2\u5355\u4fe1\u606f\n <span class="token operator">*</span><span class="token operator">/</span>\n@<span class="token function">ManyToOne</span><span class="token punctuation">(</span>fetch <span class="token operator">=</span> FetchType<span class="token punctuation">.</span>LAZY<span class="token punctuation">)</span>\n@<span class="token function">JoinColumn</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"consumer_order_id"</span><span class="token punctuation">)</span>\nprivate ConsumerOrder consumerOrder<span class="token comment" spellcheck="true">;</span>\n\n<span class="token operator">/</span><span class="token operator">/</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span>\u6b64\u5904\u7701\u7565getter\u548csetter\u7684\u4ee3\u7801<span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span>\n}'},["code",'/**\n * \u94f6\u884c\u5361\u4fe1\u606f\n */\n@ManyToOne(fetch = FetchType.LAZY)\n@JoinColumn(name = "bank_card_id")\nprivate  BankCard bankCard;\n\n/**\n * \u7528\u6237\u8ba2\u5355\u4fe1\u606f\n */\n@ManyToOne(fetch = FetchType.LAZY)\n@JoinColumn(name = "consumer_order_id")\nprivate ConsumerOrder consumerOrder;\n\n//------\u6b64\u5904\u7701\u7565getter\u548csetter\u7684\u4ee3\u7801----------\n}']],["p",'\u7528\u6237\u8ba2\u5355\u7c7b\uff1a\n@Entity\n@Table(name = "consumer_order")\npublic class ConsumerOrder extends BaseAuditingEntity {'],["pre",{lang:null,highlighted:'<span class="token operator">/</span><span class="token operator">/</span>\u95e8\u5e97\u53f7\u7801\n@<span class="token function">Column</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"store_num"</span><span class="token punctuation">)</span>\nprivate Integer storeNum<span class="token comment" spellcheck="true">;</span>\n\n<span class="token operator">/</span><span class="token operator">/</span>\u5546\u54c1\u6570\u91cf\n@<span class="token function">Column</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"goods_num"</span><span class="token punctuation">)</span>\nprivate Integer goodsNum<span class="token comment" spellcheck="true">;</span>\n\n<span class="token operator">/</span><span class="token operator">/</span>\u6d88\u8d39\u603b\u91d1\u989d\n@<span class="token function">Column</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"total_money"</span><span class="token punctuation">)</span>\nprivate Double totalMoney<span class="token comment" spellcheck="true">;</span>\n\n<span class="token operator">/</span><span class="token operator">/</span>\u4e2d\u95f4\u4fe1\u606f\n@<span class="token function">OneToMany</span><span class="token punctuation">(</span>fetch <span class="token operator">=</span> FetchType<span class="token punctuation">.</span>LAZY<span class="token punctuation">,</span>mappedBy <span class="token operator">=</span> <span class="token string">"consumerOrder"</span><span class="token punctuation">)</span>\nprivate List<span class="token operator">&lt;</span>CardOrderMiddle<span class="token operator">></span> cardOrderMiddleList<span class="token comment" spellcheck="true">;</span>\n<span class="token operator">/</span><span class="token operator">/</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span>\u6b64\u5904\u7701\u7565getter\u548csetter\u7684\u4ee3\u7801<span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span>\n}'},["code",'//\u95e8\u5e97\u53f7\u7801\n@Column(name = "store_num")\nprivate Integer storeNum;\n\n//\u5546\u54c1\u6570\u91cf\n@Column(name = "goods_num")\nprivate Integer goodsNum;\n\n//\u6d88\u8d39\u603b\u91d1\u989d\n@Column(name = "total_money")\nprivate Double totalMoney;\n\n//\u4e2d\u95f4\u4fe1\u606f\n@OneToMany(fetch = FetchType.LAZY,mappedBy = "consumerOrder")\nprivate List<CardOrderMiddle> cardOrderMiddleList;\n//------\u6b64\u5904\u7701\u7565getter\u548csetter\u7684\u4ee3\u7801----------\n}']],["h3","3 \u5728 repository \u4e0b\u5efa \u63a5\u53e3 BankCardRepository \uff0cCardOrderMiddleRepository \uff0cConsumerOrderRepository"],["hr"],["pre",{lang:null,highlighted:'public interface BankCardRepository extends BaseRepository<span class="token operator">&lt;</span>BankCard<span class="token punctuation">,</span>Long<span class="token operator">></span> {\n\n  <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n   <span class="token operator">*</span> \u6b64\u5904\u7701\u7565\u4e86hql\u8bed\u53e5\uff0c\u5177\u4f53\u7528\u6cd5\u53c2\u770b spring<span class="token operator">-</span>data<span class="token operator">-</span>jpa \u6587\u6863\n   <span class="token operator">*</span> <span class="token variable">@param</span> cardNum\n   <span class="token operator">*</span> <span class="token variable">@return</span>\n   <span class="token operator">*</span><span class="token operator">/</span>\n  BankCard <span class="token function">findByCardNum</span><span class="token punctuation">(</span>String cardNum<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n}\n\npublic interface CardOrderMiddleRepository extends BaseRepository<span class="token operator">&lt;</span>CardOrderMiddle<span class="token punctuation">,</span>Long<span class="token operator">></span> {\n\n  <span class="token variable">@Modifying</span>\n  @<span class="token function">Query</span><span class="token punctuation">(</span><span class="token string">"delete from CardOrderMiddle m where m.consumerOrder.id in (?1)"</span><span class="token punctuation">)</span>\n  public void <span class="token function">deleteByOrderIds</span><span class="token punctuation">(</span>List<span class="token operator">&lt;</span>Long<span class="token operator">></span> ids<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n}\n\npublic interface ConsumerOrderRepository extends BaseRepository<span class="token operator">&lt;</span>ConsumerOrder<span class="token punctuation">,</span>Long<span class="token operator">></span> {\n\n  <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n   <span class="token operator">*</span> \u5728query\u6ce8\u89e3\u91cc\u9762\u5199hql\u8bed\u53e5\n   <span class="token operator">*</span>\n   <span class="token operator">*</span> \u66f4\u65b0\u5220\u9664\u9700\u8981\u5728\u65b9\u6cd5\u4e0a\u52a0\u4e0a<span class="token variable">@Modifying</span>\u6ce8\u89e3\n   <span class="token operator">*</span> <span class="token variable">@param</span> ids\n   <span class="token operator">*</span><span class="token operator">/</span>\n  <span class="token variable">@Modifying</span>\n  @<span class="token function">Query</span><span class="token punctuation">(</span><span class="token string">"delete from ConsumerOrder c where c.id in (?1)"</span><span class="token punctuation">)</span>\n  public void <span class="token function">deleteByIds</span><span class="token punctuation">(</span>List<span class="token operator">&lt;</span>Long<span class="token operator">></span> ids<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n}'},["code",'public interface BankCardRepository extends BaseRepository<BankCard,Long> {\n\n  /**\n   * \u6b64\u5904\u7701\u7565\u4e86hql\u8bed\u53e5\uff0c\u5177\u4f53\u7528\u6cd5\u53c2\u770b spring-data-jpa \u6587\u6863\n   * @param cardNum\n   * @return\n   */\n  BankCard findByCardNum(String cardNum);\n}\n\npublic interface CardOrderMiddleRepository extends BaseRepository<CardOrderMiddle,Long> {\n\n  @Modifying\n  @Query("delete from CardOrderMiddle m where m.consumerOrder.id in (?1)")\n  public void deleteByOrderIds(List<Long> ids);\n}\n\npublic interface ConsumerOrderRepository extends BaseRepository<ConsumerOrder,Long> {\n\n  /**\n   * \u5728query\u6ce8\u89e3\u91cc\u9762\u5199hql\u8bed\u53e5\n   *\n   * \u66f4\u65b0\u5220\u9664\u9700\u8981\u5728\u65b9\u6cd5\u4e0a\u52a0\u4e0a@Modifying\u6ce8\u89e3\n   * @param ids\n   */\n  @Modifying\n  @Query("delete from ConsumerOrder c where c.id in (?1)")\n  public void deleteByIds(List<Long> ids);\n}']],["h3","4 \u5728 dto \u5305\u4e0b\u5efa EmployeeDTO \u7c7b"],["hr"],["pre",{lang:null,highlighted:'  public class BankCardDTO extends BaseDTO {\n\n    <span class="token operator">/</span><span class="token operator">/</span>\u5361\u53f7\n    private String cardNum<span class="token comment" spellcheck="true">;</span>\n\n    <span class="token operator">/</span><span class="token operator">/</span>\u94f6\u884c\u540d\n    private String bankName<span class="token comment" spellcheck="true">;</span>\n    <span class="token operator">/</span><span class="token operator">/</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span>\u6b64\u5904\u7701\u7565getter\u548csetter\u7684\u4ee3\u7801<span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span>\n    }\n\n  public class ConsumerOrderDTO extends BaseDTO{\n\n    private Long id<span class="token comment" spellcheck="true">;</span>\n\n    <span class="token operator">/</span><span class="token operator">/</span>\u95e8\u5e97\u53f7\u7801\n    private Integer storeNum<span class="token comment" spellcheck="true">;</span>\n\n    <span class="token operator">/</span><span class="token operator">/</span>\u5546\u54c1\u6570\u91cf\n    private Integer goodsNum<span class="token comment" spellcheck="true">;</span>\n\n\n    <span class="token operator">/</span><span class="token operator">/</span>\u6d88\u8d39\u603b\u91d1\u989d\n    private Double totalMoney<span class="token comment" spellcheck="true">;</span>\n\n    <span class="token operator">/</span><span class="token operator">/</span>\u94f6\u884c\u5361\u4fe1\u606f\n    private List<span class="token operator">&lt;</span>BankCardDTO<span class="token operator">></span> bankCardDTOList<span class="token comment" spellcheck="true">;</span>\n\n    <span class="token operator">/</span><span class="token operator">/</span>\u8ba2\u5355id\u96c6\u5408\n    private List<span class="token operator">&lt;</span>Long<span class="token operator">></span> ids<span class="token comment" spellcheck="true">;</span>\n    <span class="token operator">/</span><span class="token operator">/</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span>\u6b64\u5904\u7701\u7565getter\u548csetter\u7684\u4ee3\u7801<span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span>\n    }'},["code","  public class BankCardDTO extends BaseDTO {\n\n    //\u5361\u53f7\n    private String cardNum;\n\n    //\u94f6\u884c\u540d\n    private String bankName;\n    //------\u6b64\u5904\u7701\u7565getter\u548csetter\u7684\u4ee3\u7801----------\n    }\n\n  public class ConsumerOrderDTO extends BaseDTO{\n\n    private Long id;\n\n    //\u95e8\u5e97\u53f7\u7801\n    private Integer storeNum;\n\n    //\u5546\u54c1\u6570\u91cf\n    private Integer goodsNum;\n\n\n    //\u6d88\u8d39\u603b\u91d1\u989d\n    private Double totalMoney;\n\n    //\u94f6\u884c\u5361\u4fe1\u606f\n    private List<BankCardDTO> bankCardDTOList;\n\n    //\u8ba2\u5355id\u96c6\u5408\n    private List<Long> ids;\n    //------\u6b64\u5904\u7701\u7565getter\u548csetter\u7684\u4ee3\u7801----------\n    }"]],["h3","5 \u53ef\u4ee5\u5728 service>mapper \u5305\u4e0b\u4f7f\u7528 mapstruct \u521b\u5efa\u7c7b mapper,\u6b64\u5904\u5b9e\u4f53\u548c dto \u7684\u8f6c\u6362\u4f7f\u7528 spring \u7684 BeanUtils\u3002"],["hr"],["pre",{lang:null,highlighted:'\t\u4f8b\u5982\uff1aBeanUtils<span class="token punctuation">.</span><span class="token function">copyProperties</span><span class="token punctuation">(</span>consumerOrderDTO<span class="token punctuation">,</span>consumerOrder<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\t\u8be5\u65b9\u6cd5\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u662fsource\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u662ftarget\u3002\u8fbe\u5230\u5c06\u7b2c\u4e00\u4e2a\u7c7b\u91cc\u9762\u7684\u5c5e\u6027\u62f7\u8d1d\u5230\u7b2c\u4e8c\u4e2a\u7c7b\u7684\u76ee\u7684\u3002'},["code","\t\u4f8b\u5982\uff1aBeanUtils.copyProperties(consumerOrderDTO,consumerOrder);\n\t\u8be5\u65b9\u6cd5\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u662fsource\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u662ftarget\u3002\u8fbe\u5230\u5c06\u7b2c\u4e00\u4e2a\u7c7b\u91cc\u9762\u7684\u5c5e\u6027\u62f7\u8d1d\u5230\u7b2c\u4e8c\u4e2a\u7c7b\u7684\u76ee\u7684\u3002"]],["h3","6 \u5728 service \u5305\u4e0b ConsumerOrderService \u63a5\u53e3\uff0c\u5728 service>impl \u5305\u4e0b\u5efa ConsumerOrderServiceImpl \u5b9e\u73b0\u7c7b"],["hr"],["pre",{lang:null,highlighted:'public interface ConsumerOrderService {\n\n    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n     <span class="token operator">*</span> \u6dfb\u52a0\n     <span class="token operator">*</span><span class="token operator">/</span>\n    public void <span class="token function">createOrUpdateConsumerOrder</span><span class="token punctuation">(</span>ConsumerOrderDTO consumerOrderDTO<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\n    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n     <span class="token operator">*</span> \u5220\u9664\n     <span class="token operator">*</span> <span class="token variable">@param</span> ids\n     <span class="token operator">*</span><span class="token operator">/</span>\n    public void <span class="token function">deleteOrder</span><span class="token punctuation">(</span>List<span class="token operator">&lt;</span>Long<span class="token operator">></span> ids<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\n\n    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n     <span class="token operator">*</span> \u6839\u636e\u6761\u4ef6\u5206\u9875\u67e5\u8be2\n     <span class="token operator">*</span> <span class="token variable">@param</span> pageable\n     <span class="token operator">*</span> <span class="token variable">@param</span> consumerOrderDTO\n     <span class="token operator">*</span> <span class="token variable">@return</span>\n     <span class="token operator">*</span><span class="token operator">/</span>\n    Page<span class="token operator">&lt;</span>ConsumerOrderDTO<span class="token operator">></span> <span class="token function">findOrderByPage</span><span class="token punctuation">(</span>Pageable pageable<span class="token punctuation">,</span>ConsumerOrderDTO consumerOrderDTO<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\n}\n\n\n<span class="token operator">/</span><span class="token operator">/</span>\u5c06\u5b9e\u73b0\u7c7b\u521b\u5efa\u4e3aspring bean\n<span class="token variable">@Service</span>\n<span class="token operator">/</span><span class="token operator">/</span>\u6dfb\u52a0\u4e8b\u7269\n<span class="token variable">@Transactional</span>\npublic class ConsumerOrderServiceImpl implements ConsumerOrderService {\n\n    <span class="token operator">/</span><span class="token operator">/</span>\u6ce8\u5165bean\n    <span class="token variable">@Autowired</span>\n    private BankCardRepository bankCardRepository<span class="token comment" spellcheck="true">;</span>\n\n\n    <span class="token variable">@Autowired</span>\n    private ConsumerOrderRepository consumerOrderRepository<span class="token comment" spellcheck="true">;</span>\n\n    <span class="token variable">@Autowired</span>\n    private CardOrderMiddleRepository cardOrderMiddleRepository<span class="token comment" spellcheck="true">;</span>\n\n    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n     <span class="token operator">*</span> \u6dfb\u52a0\n     <span class="token operator">*</span><span class="token operator">/</span>\n    <span class="token variable">@Override</span>\n    public void <span class="token function">createOrUpdateConsumerOrder</span><span class="token punctuation">(</span>ConsumerOrderDTO consumerOrderDTO<span class="token punctuation">)</span> {\n        ConsumerOrder consumerOrder <span class="token operator">=</span> <span class="token keyword">null</span><span class="token comment" spellcheck="true">;</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>consumerOrderDTO<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> !<span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>{<span class="token operator">/</span><span class="token operator">/</span>\u662f\u4fee\u6539\u65f6\n            consumerOrder <span class="token operator">=</span> consumerOrderRepository<span class="token punctuation">.</span><span class="token function">findOne</span><span class="token punctuation">(</span>consumerOrderDTO<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>consumerOrder !<span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>{\n                <span class="token operator">/</span><span class="token operator">/</span>\u5220\u9664\u4e2d\u95f4\u8868\u4fe1\u606f\n                List<span class="token operator">&lt;</span>CardOrderMiddle<span class="token operator">></span> cardOrderMiddleList <span class="token operator">=</span> consumerOrder<span class="token punctuation">.</span><span class="token function">getCardOrderMiddleList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n                <span class="token keyword">if</span> <span class="token punctuation">(</span>cardOrderMiddleList !<span class="token operator">=</span> <span class="token keyword">null</span> <span class="token operator">&amp;</span><span class="token operator">&amp;</span> !cardOrderMiddleList<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>{\n                    cardOrderMiddleRepository<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>cardOrderMiddleList<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n                }\n            }\n        }\n\n        <span class="token operator">/</span><span class="token operator">/</span>\u4fdd\u5b58\u94f6\u884c\u5361\u4fe1\u606f\n        List<span class="token operator">&lt;</span>BankCard<span class="token operator">></span> bankCardList <span class="token operator">=</span> <span class="token keyword">null</span><span class="token comment" spellcheck="true">;</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>consumerOrderDTO<span class="token punctuation">.</span><span class="token function">getBankCardDTOList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> !<span class="token operator">=</span> <span class="token keyword">null</span> <span class="token operator">&amp;</span><span class="token operator">&amp;</span> !consumerOrderDTO<span class="token punctuation">.</span><span class="token function">getBankCardDTOList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>{\n           bankCardList <span class="token operator">=</span> <span class="token function">saveBankCard</span><span class="token punctuation">(</span>consumerOrderDTO<span class="token punctuation">.</span><span class="token function">getBankCardDTOList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        }\n\n        <span class="token operator">/</span><span class="token operator">/</span>\u4fdd\u5b58\u7528\u6237\u8ba2\u5355\u4fe1\u606f\n        consumerOrder <span class="token operator">=</span> <span class="token function">saveConsumerOrder</span><span class="token punctuation">(</span>consumerOrder <span class="token operator">==</span>  <span class="token keyword">null</span><span class="token operator">?</span>new <span class="token function">ConsumerOrder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>consumerOrder<span class="token punctuation">,</span>consumerOrderDTO<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\n        <span class="token operator">/</span><span class="token operator">/</span>\u4fdd\u5b58\u4e2d\u95f4\u4fe1\u606f\n        <span class="token function">saveMiddle</span><span class="token punctuation">(</span>bankCardList<span class="token punctuation">,</span>consumerOrder<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    }\n\n    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span>\n     <span class="token operator">*</span> \u5220\u9664\n     <span class="token operator">*</span> <span class="token variable">@param</span> ids\n     <span class="token operator">*</span><span class="token operator">/</span>\n    <span class="token variable">@Override</span>\n    public void <span class="token function">deleteOrder</span><span class="token punctuation">(</span>List<span class="token operator">&lt;</span>Long<span class="token operator">></span> ids<span class="token punctuation">)</span> {\n        <span class="token operator">/</span><span class="token operator">/</span>\u5148\u5220\u9664\u4e2d\u95f4\u8868\u4fe1\u606f\n        cardOrderMiddleRepository<span class="token punctuation">.</span><span class="token function">deleteByOrderIds</span><span class="token punctuation">(</span>ids<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        consumerOrderRepository<span class="token punctuation">.</span><span class="token function">deleteByIds</span><span class="token punctuation">(</span>ids<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    }\n\n\n    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n     <span class="token operator">*</span> \u6839\u636e\u6761\u4ef6\u5206\u9875\u67e5\u8be2\n     <span class="token operator">*</span> <span class="token variable">@param</span> pageable\n     <span class="token operator">*</span> <span class="token variable">@param</span> consumerOrderDTO\n     <span class="token operator">*</span> <span class="token variable">@return</span>\n     <span class="token operator">*</span><span class="token operator">/</span>\n    <span class="token variable">@Override</span>\n    public Page<span class="token operator">&lt;</span>ConsumerOrderDTO<span class="token operator">></span> <span class="token function">findOrderByPage</span><span class="token punctuation">(</span>Pageable pageable<span class="token punctuation">,</span> ConsumerOrderDTO consumerOrderDTO<span class="token punctuation">)</span> {\n\n        <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n         <span class="token operator">*</span>  \u5206\u9875\u67e5\u8be2\uff0c\u4f7f\u7528spring data jpa \u81ea\u5e26\u7684findAll\u65b9\u6cd5\uff0c\u5e76\u4e14\u5b9e\u73b0\u5176\u5185\u90e8\u7c7b\n         <span class="token operator">*</span>\n         <span class="token operator">*</span><span class="token operator">/</span>\n        Page<span class="token operator">&lt;</span>ConsumerOrder<span class="token operator">></span> page <span class="token operator">=</span> consumerOrderRepository<span class="token punctuation">.</span><span class="token function">findAll</span><span class="token punctuation">(</span>new Specification<span class="token operator">&lt;</span>ConsumerOrder<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> {\n            <span class="token variable">@Override</span>\n            public Predicate <span class="token function">toPredicate</span><span class="token punctuation">(</span>Root<span class="token operator">&lt;</span>ConsumerOrder<span class="token operator">></span> root<span class="token punctuation">,</span> CriteriaQuery<span class="token operator">&lt;</span><span class="token operator">?</span><span class="token operator">></span> criteriaQuery<span class="token punctuation">,</span> CriteriaBuilder criteriaBuilder<span class="token punctuation">)</span> {\n                <span class="token operator">/</span><span class="token operator">/</span>\u67e5\u8be2\u6761\u4ef6\u96c6\u5408\n                List<span class="token operator">&lt;</span>Predicate<span class="token operator">></span> predicateList <span class="token operator">=</span> new ArrayList<span class="token operator">&lt;></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n                <span class="token operator">/</span><span class="token operator">/</span>\u6dfb\u52a0\u67e5\u8be2\u6761\u4ef6\n                <span class="token keyword">if</span> <span class="token punctuation">(</span>consumerOrderDTO<span class="token punctuation">.</span><span class="token function">getStoreNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span> !<span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>{\n                    predicateList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>criteriaBuilder<span class="token punctuation">.</span><span class="token function">equal</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"storeNum"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>consumerOrderDTO<span class="token punctuation">.</span><span class="token function">getStoreNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n                }\n                criteriaQuery<span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>predicateList<span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span>new Predicate<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n                return <span class="token keyword">null</span><span class="token comment" spellcheck="true">;</span>\n            }\n        }<span class="token punctuation">,</span>pageable<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;//\u5206\u9875\u53c2\u6570\uff0c\u5305\u542b\u6392\u5e8f\u7b49</span>\n\n        <span class="token operator">/</span><span class="token operator">/</span>\u5c06\u5b9e\u4f53\u8f6c\u6362\u6210dto\n        return page<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>new Converter<span class="token operator">&lt;</span>ConsumerOrder<span class="token punctuation">,</span> ConsumerOrderDTO<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> {\n            <span class="token variable">@Override</span>\n            public ConsumerOrderDTO <span class="token function">convert</span><span class="token punctuation">(</span>ConsumerOrder consumerOrder<span class="token punctuation">)</span> {\n                ConsumerOrderDTO dto <span class="token operator">=</span> new <span class="token function">ConsumerOrderDTO</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n                BeanUtils<span class="token punctuation">.</span><span class="token function">copyProperties</span><span class="token punctuation">(</span>consumerOrder<span class="token punctuation">,</span>dto<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n                return dto<span class="token comment" spellcheck="true">;</span>\n            }\n        }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    }\n\n\n    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n     <span class="token operator">*</span> \u4fdd\u5b58\u94f6\u884c\u5361\u4fe1\u606f\n     <span class="token operator">*</span> <span class="token variable">@param</span> bankCardDTOList\n     <span class="token operator">*</span> <span class="token variable">@return</span>\n     <span class="token operator">*</span><span class="token operator">/</span>\n    private List<span class="token operator">&lt;</span>BankCard<span class="token operator">></span> <span class="token function">saveBankCard</span><span class="token punctuation">(</span>List<span class="token operator">&lt;</span>BankCardDTO<span class="token operator">></span> bankCardDTOList<span class="token punctuation">)</span>{\n        List<span class="token operator">&lt;</span>BankCard<span class="token operator">></span> bankCardList <span class="token operator">=</span> new ArrayList<span class="token operator">&lt;></span><span class="token punctuation">(</span>bankCardDTOList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        <span class="token keyword">for</span> <span class="token punctuation">(</span>BankCardDTO bankCardDTO <span class="token punctuation">:</span> bankCardDTOList<span class="token punctuation">)</span> {\n            BankCard bankCard <span class="token operator">=</span> bankCardRepository<span class="token punctuation">.</span><span class="token function">findByCardNum</span><span class="token punctuation">(</span>bankCardDTO<span class="token punctuation">.</span><span class="token function">getCardNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>bankCard <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> {\n                bankCard <span class="token operator">=</span> new <span class="token function">BankCard</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n                <span class="token operator">/</span><span class="token operator">/</span>\u4f7f\u7528spring beanutils\u62f7\u8d1d\u6570\u636e\n                BeanUtils<span class="token punctuation">.</span><span class="token function">copyProperties</span><span class="token punctuation">(</span>bankCardDTO<span class="token punctuation">,</span>bankCard<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n                bankCardList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>bankCardRepository<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>bankCard<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n            }<span class="token keyword">else</span>{\n                bankCardList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>bankCard<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n            }\n        }\n        return bankCardList<span class="token comment" spellcheck="true">;</span>\n    }\n\n    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n     <span class="token operator">*</span> \u4fdd\u5b58\u8ba2\u5355\n     <span class="token operator">*</span> <span class="token variable">@param</span> consumerOrder\n     <span class="token operator">*</span> <span class="token variable">@param</span> consumerOrderDTO\n     <span class="token operator">*</span> <span class="token variable">@return</span>\n     <span class="token operator">*</span><span class="token operator">/</span>\n    private ConsumerOrder <span class="token function">saveConsumerOrder</span><span class="token punctuation">(</span>ConsumerOrder consumerOrder<span class="token punctuation">,</span>ConsumerOrderDTO consumerOrderDTO<span class="token punctuation">)</span>{\n        BeanUtils<span class="token punctuation">.</span><span class="token function">copyProperties</span><span class="token punctuation">(</span>consumerOrderDTO<span class="token punctuation">,</span>consumerOrder<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        return consumerOrderRepository<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>consumerOrder<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    }\n\n    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n     <span class="token operator">*</span> \u4fdd\u5b58\u8ba2\u5355<span class="token operator">-</span>\u94f6\u884c\u5361\u4e2d\u95f4\u8868\n     <span class="token operator">*</span> <span class="token variable">@param</span> bankCardList\n     <span class="token operator">*</span><span class="token operator">/</span>\n    private void <span class="token function">saveMiddle</span><span class="token punctuation">(</span>List<span class="token operator">&lt;</span>BankCard<span class="token operator">></span> bankCardList<span class="token punctuation">,</span>ConsumerOrder consumerOrder<span class="token punctuation">)</span>{\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>bankCardList !<span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>{\n            <span class="token keyword">for</span> <span class="token punctuation">(</span>BankCard bankCard <span class="token punctuation">:</span> bankCardList<span class="token punctuation">)</span> {\n                CardOrderMiddle cardOrderMiddle <span class="token operator">=</span> new <span class="token function">CardOrderMiddle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n                cardOrderMiddle<span class="token punctuation">.</span><span class="token function">setBankCard</span><span class="token punctuation">(</span>bankCard<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n                cardOrderMiddle<span class="token punctuation">.</span><span class="token function">setConsumerOrder</span><span class="token punctuation">(</span>consumerOrder<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n                cardOrderMiddleRepository<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>cardOrderMiddle<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n            }\n        }\n    }\n}'},["code",'public interface ConsumerOrderService {\n\n    /**\n     * \u6dfb\u52a0\n     */\n    public void createOrUpdateConsumerOrder(ConsumerOrderDTO consumerOrderDTO);\n\n    /**\n     * \u5220\u9664\n     * @param ids\n     */\n    public void deleteOrder(List<Long> ids);\n\n\n    /**\n     * \u6839\u636e\u6761\u4ef6\u5206\u9875\u67e5\u8be2\n     * @param pageable\n     * @param consumerOrderDTO\n     * @return\n     */\n    Page<ConsumerOrderDTO> findOrderByPage(Pageable pageable,ConsumerOrderDTO consumerOrderDTO);\n\n}\n\n\n//\u5c06\u5b9e\u73b0\u7c7b\u521b\u5efa\u4e3aspring bean\n@Service\n//\u6dfb\u52a0\u4e8b\u7269\n@Transactional\npublic class ConsumerOrderServiceImpl implements ConsumerOrderService {\n\n    //\u6ce8\u5165bean\n    @Autowired\n    private BankCardRepository bankCardRepository;\n\n\n    @Autowired\n    private ConsumerOrderRepository consumerOrderRepository;\n\n    @Autowired\n    private CardOrderMiddleRepository cardOrderMiddleRepository;\n\n    /**\n     * \u6dfb\u52a0\n     */\n    @Override\n    public void createOrUpdateConsumerOrder(ConsumerOrderDTO consumerOrderDTO) {\n        ConsumerOrder consumerOrder = null;\n        if (consumerOrderDTO.getId() != null){//\u662f\u4fee\u6539\u65f6\n            consumerOrder = consumerOrderRepository.findOne(consumerOrderDTO.getId());\n            if (consumerOrder != null){\n                //\u5220\u9664\u4e2d\u95f4\u8868\u4fe1\u606f\n                List<CardOrderMiddle> cardOrderMiddleList = consumerOrder.getCardOrderMiddleList();\n                if (cardOrderMiddleList != null && !cardOrderMiddleList.isEmpty()){\n                    cardOrderMiddleRepository.delete(cardOrderMiddleList);\n                }\n            }\n        }\n\n        //\u4fdd\u5b58\u94f6\u884c\u5361\u4fe1\u606f\n        List<BankCard> bankCardList = null;\n        if (consumerOrderDTO.getBankCardDTOList() != null && !consumerOrderDTO.getBankCardDTOList().isEmpty()){\n           bankCardList = saveBankCard(consumerOrderDTO.getBankCardDTOList());\n        }\n\n        //\u4fdd\u5b58\u7528\u6237\u8ba2\u5355\u4fe1\u606f\n        consumerOrder = saveConsumerOrder(consumerOrder ==  null?new ConsumerOrder():consumerOrder,consumerOrderDTO);\n\n        //\u4fdd\u5b58\u4e2d\u95f4\u4fe1\u606f\n        saveMiddle(bankCardList,consumerOrder);\n    }\n\n    /***\n     * \u5220\u9664\n     * @param ids\n     */\n    @Override\n    public void deleteOrder(List<Long> ids) {\n        //\u5148\u5220\u9664\u4e2d\u95f4\u8868\u4fe1\u606f\n        cardOrderMiddleRepository.deleteByOrderIds(ids);\n        consumerOrderRepository.deleteByIds(ids);\n    }\n\n\n    /**\n     * \u6839\u636e\u6761\u4ef6\u5206\u9875\u67e5\u8be2\n     * @param pageable\n     * @param consumerOrderDTO\n     * @return\n     */\n    @Override\n    public Page<ConsumerOrderDTO> findOrderByPage(Pageable pageable, ConsumerOrderDTO consumerOrderDTO) {\n\n        /**\n         *  \u5206\u9875\u67e5\u8be2\uff0c\u4f7f\u7528spring data jpa \u81ea\u5e26\u7684findAll\u65b9\u6cd5\uff0c\u5e76\u4e14\u5b9e\u73b0\u5176\u5185\u90e8\u7c7b\n         *\n         */\n        Page<ConsumerOrder> page = consumerOrderRepository.findAll(new Specification<ConsumerOrder>() {\n            @Override\n            public Predicate toPredicate(Root<ConsumerOrder> root, CriteriaQuery<?> criteriaQuery, CriteriaBuilder criteriaBuilder) {\n                //\u67e5\u8be2\u6761\u4ef6\u96c6\u5408\n                List<Predicate> predicateList = new ArrayList<>();\n                //\u6dfb\u52a0\u67e5\u8be2\u6761\u4ef6\n                if (consumerOrderDTO.getStoreNum() != null){\n                    predicateList.add(criteriaBuilder.equal(root.get("storeNum"),consumerOrderDTO.getStoreNum()));\n                }\n                criteriaQuery.where(predicateList.toArray(new Predicate[0]));\n                return null;\n            }\n        },pageable);//\u5206\u9875\u53c2\u6570\uff0c\u5305\u542b\u6392\u5e8f\u7b49\n\n        //\u5c06\u5b9e\u4f53\u8f6c\u6362\u6210dto\n        return page.map(new Converter<ConsumerOrder, ConsumerOrderDTO>() {\n            @Override\n            public ConsumerOrderDTO convert(ConsumerOrder consumerOrder) {\n                ConsumerOrderDTO dto = new ConsumerOrderDTO();\n                BeanUtils.copyProperties(consumerOrder,dto);\n                return dto;\n            }\n        });\n    }\n\n\n    /**\n     * \u4fdd\u5b58\u94f6\u884c\u5361\u4fe1\u606f\n     * @param bankCardDTOList\n     * @return\n     */\n    private List<BankCard> saveBankCard(List<BankCardDTO> bankCardDTOList){\n        List<BankCard> bankCardList = new ArrayList<>(bankCardDTOList.size());\n        for (BankCardDTO bankCardDTO : bankCardDTOList) {\n            BankCard bankCard = bankCardRepository.findByCardNum(bankCardDTO.getCardNum());\n            if (bankCard == null) {\n                bankCard = new BankCard();\n                //\u4f7f\u7528spring beanutils\u62f7\u8d1d\u6570\u636e\n                BeanUtils.copyProperties(bankCardDTO,bankCard);\n                bankCardList.add(bankCardRepository.save(bankCard));\n            }else{\n                bankCardList.add(bankCard);\n            }\n        }\n        return bankCardList;\n    }\n\n    /**\n     * \u4fdd\u5b58\u8ba2\u5355\n     * @param consumerOrder\n     * @param consumerOrderDTO\n     * @return\n     */\n    private ConsumerOrder saveConsumerOrder(ConsumerOrder consumerOrder,ConsumerOrderDTO consumerOrderDTO){\n        BeanUtils.copyProperties(consumerOrderDTO,consumerOrder);\n        return consumerOrderRepository.save(consumerOrder);\n    }\n\n    /**\n     * \u4fdd\u5b58\u8ba2\u5355-\u94f6\u884c\u5361\u4e2d\u95f4\u8868\n     * @param bankCardList\n     */\n    private void saveMiddle(List<BankCard> bankCardList,ConsumerOrder consumerOrder){\n        if (bankCardList != null){\n            for (BankCard bankCard : bankCardList) {\n                CardOrderMiddle cardOrderMiddle = new CardOrderMiddle();\n                cardOrderMiddle.setBankCard(bankCard);\n                cardOrderMiddle.setConsumerOrder(consumerOrder);\n                cardOrderMiddleRepository.save(cardOrderMiddle);\n            }\n        }\n    }\n}']],["h3","7 \u5728 web.rest \u5305\u4e0b\u5efa ConsumerOrderResource \u7c7b\uff0c\u5b9e\u73b0 rest api \u63a5\u53e3"],["hr"],["pre",{lang:null,highlighted:'<span class="token operator">/</span><span class="token operator">/</span>\u5c06\u7c7b\u521b\u5efa\u4e3aspring bean<span class="token punctuation">,</span>\u8be5\u6ce8\u89e3\u5305\u542b\u4e86<span class="token variable">@Controller</span>\n<span class="token operator">/</span><span class="token operator">/</span><span class="token variable">@ResponseBody</span>\u4e24\u4e2a\u6ce8\u89e3\u7684\u529f\u80fd\u3002ResponseBody\u7528\u4e8e\u5c06\u8fd4\u56de\u7684\u5bf9\u4e86\u8f6c\u6362\u6210json\n<span class="token variable">@RestController</span>\n<span class="token operator">/</span><span class="token operator">/</span>\u6dfb\u52a0\u8bbf\u95ee\u8def\u5f84\n@<span class="token function">RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/api/order"</span><span class="token punctuation">)</span>\npublic class ConsumerOrderResource extends BaseResource {\n\n    <span class="token variable">@Autowired</span>\n    private ConsumerOrderService consumerOrderService<span class="token comment" spellcheck="true">;</span>\n\n\n    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n     <span class="token operator">*</span> \u6dfb\u52a0\n     <span class="token operator">*</span> <span class="token variable">@param</span> consumerOrderDTO\n     <span class="token operator">*</span><span class="token operator">/</span>\n    @<span class="token function">RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/createConsumerOrder"</span><span class="token punctuation">)</span>\n    public ResponseDTO <span class="token function">createConsumerOrder</span><span class="token punctuation">(</span><span class="token variable">@RequestBody</span> ConsumerOrderDTO consumerOrderDTO<span class="token punctuation">)</span>{\n        consumerOrderService<span class="token punctuation">.</span><span class="token function">createOrUpdateConsumerOrder</span><span class="token punctuation">(</span>consumerOrderDTO<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        return <span class="token function">getResponseDTO</span><span class="token punctuation">(</span><span class="token string">"200"</span><span class="token punctuation">,</span> <span class="token string">"\u64cd\u4f5c\u6210\u529f"</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    }\n\n    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n     <span class="token operator">*</span> \u4fee\u6539\n     <span class="token operator">*</span> <span class="token variable">@param</span> consumerOrderDTO\n     <span class="token operator">*</span><span class="token operator">/</span>\n    @<span class="token function">RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/updateConsumerOrder"</span><span class="token punctuation">)</span>\n    public ResponseDTO <span class="token function">updateConsumerOrder</span><span class="token punctuation">(</span><span class="token variable">@RequestBody</span> ConsumerOrderDTO consumerOrderDTO<span class="token punctuation">)</span>{\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>consumerOrderDTO<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>{\n            return <span class="token function">getResponseDTO</span><span class="token punctuation">(</span><span class="token string">"202"</span><span class="token punctuation">,</span><span class="token string">"\u53c2\u6570\u9519\u8bef"</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        }\n        consumerOrderService<span class="token punctuation">.</span><span class="token function">createOrUpdateConsumerOrder</span><span class="token punctuation">(</span>consumerOrderDTO<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        return <span class="token function">getResponseDTO</span><span class="token punctuation">(</span><span class="token string">"200"</span><span class="token punctuation">,</span> <span class="token string">"\u64cd\u4f5c\u6210\u529f"</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    }\n\n    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n     <span class="token operator">*</span> \u5220\u9664\n     <span class="token operator">*</span> <span class="token variable">@param</span> consumerOrderDTO\n     <span class="token operator">*</span><span class="token operator">/</span>\n    @<span class="token function">RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/deleteOrder"</span><span class="token punctuation">)</span>\n    public ResponseDTO <span class="token function">deleteOrder</span><span class="token punctuation">(</span><span class="token variable">@RequestBody</span> ConsumerOrderDTO consumerOrderDTO<span class="token punctuation">)</span>{\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>consumerOrderDTO<span class="token punctuation">.</span><span class="token function">getIds</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> || consumerOrderDTO<span class="token punctuation">.</span><span class="token function">getIds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>{\n            return <span class="token function">getResponseDTO</span><span class="token punctuation">(</span><span class="token string">"202"</span><span class="token punctuation">,</span><span class="token string">"\u53c2\u6570\u9519\u8bef"</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        }\n        consumerOrderService<span class="token punctuation">.</span><span class="token function">deleteOrder</span><span class="token punctuation">(</span>consumerOrderDTO<span class="token punctuation">.</span><span class="token function">getIds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        return <span class="token function">getResponseDTO</span><span class="token punctuation">(</span><span class="token string">"200"</span><span class="token punctuation">,</span> <span class="token string">"\u64cd\u4f5c\u6210\u529f"</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    }\n\n    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n     <span class="token operator">*</span> \u6839\u636e\u6761\u4ef6\u5206\u9875\u67e5\u8be2\n     <span class="token operator">*</span> <span class="token variable">@param</span> pageable\n     <span class="token operator">*</span> <span class="token variable">@param</span> consumerOrderDTO\n     <span class="token operator">*</span> <span class="token variable">@return</span>\n     <span class="token operator">*</span><span class="token operator">/</span>\n    @<span class="token function">RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/findOrderByPage"</span><span class="token punctuation">)</span>\n    public ResponseDTO <span class="token function">findOrderByPage</span><span class="token punctuation">(</span><span class="token variable">@PageableDefault</span> Pageable pageable<span class="token punctuation">,</span> <span class="token variable">@RequestBody</span> ConsumerOrderDTO consumerOrderDTO<span class="token punctuation">)</span>{\n        return <span class="token function">getResponseDTO</span><span class="token punctuation">(</span><span class="token string">"200"</span><span class="token punctuation">,</span> <span class="token string">"\u64cd\u4f5c\u6210\u529f"</span><span class="token punctuation">,</span>\n                consumerOrderService<span class="token punctuation">.</span><span class="token function">findOrderByPage</span><span class="token punctuation">(</span>pageable<span class="token punctuation">,</span>consumerOrderDTO<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    }\n\n}'},["code",'//\u5c06\u7c7b\u521b\u5efa\u4e3aspring bean,\u8be5\u6ce8\u89e3\u5305\u542b\u4e86@Controller\n//@ResponseBody\u4e24\u4e2a\u6ce8\u89e3\u7684\u529f\u80fd\u3002ResponseBody\u7528\u4e8e\u5c06\u8fd4\u56de\u7684\u5bf9\u4e86\u8f6c\u6362\u6210json\n@RestController\n//\u6dfb\u52a0\u8bbf\u95ee\u8def\u5f84\n@RequestMapping("/api/order")\npublic class ConsumerOrderResource extends BaseResource {\n\n    @Autowired\n    private ConsumerOrderService consumerOrderService;\n\n\n    /**\n     * \u6dfb\u52a0\n     * @param consumerOrderDTO\n     */\n    @RequestMapping("/createConsumerOrder")\n    public ResponseDTO createConsumerOrder(@RequestBody ConsumerOrderDTO consumerOrderDTO){\n        consumerOrderService.createOrUpdateConsumerOrder(consumerOrderDTO);\n        return getResponseDTO("200", "\u64cd\u4f5c\u6210\u529f", null);\n    }\n\n    /**\n     * \u4fee\u6539\n     * @param consumerOrderDTO\n     */\n    @RequestMapping("/updateConsumerOrder")\n    public ResponseDTO updateConsumerOrder(@RequestBody ConsumerOrderDTO consumerOrderDTO){\n        if (consumerOrderDTO.getId() == null){\n            return getResponseDTO("202","\u53c2\u6570\u9519\u8bef",null);\n        }\n        consumerOrderService.createOrUpdateConsumerOrder(consumerOrderDTO);\n        return getResponseDTO("200", "\u64cd\u4f5c\u6210\u529f", null);\n    }\n\n    /**\n     * \u5220\u9664\n     * @param consumerOrderDTO\n     */\n    @RequestMapping("/deleteOrder")\n    public ResponseDTO deleteOrder(@RequestBody ConsumerOrderDTO consumerOrderDTO){\n        if (consumerOrderDTO.getIds() == null || consumerOrderDTO.getIds().isEmpty()){\n            return getResponseDTO("202","\u53c2\u6570\u9519\u8bef",null);\n        }\n        consumerOrderService.deleteOrder(consumerOrderDTO.getIds());\n        return getResponseDTO("200", "\u64cd\u4f5c\u6210\u529f", null);\n    }\n\n    /**\n     * \u6839\u636e\u6761\u4ef6\u5206\u9875\u67e5\u8be2\n     * @param pageable\n     * @param consumerOrderDTO\n     * @return\n     */\n    @RequestMapping("/findOrderByPage")\n    public ResponseDTO findOrderByPage(@PageableDefault Pageable pageable, @RequestBody ConsumerOrderDTO consumerOrderDTO){\n        return getResponseDTO("200", "\u64cd\u4f5c\u6210\u529f",\n                consumerOrderService.findOrderByPage(pageable,consumerOrderDTO));\n    }\n\n}']],["p","\u63a5\u53e3\u4ee3\u7801\u5b8c\u6210\uff0c\u7528 postman \u8fdb\u884c\u63a5\u53e3\u7684\u6d4b\u8bd5"]],meta:{title:"OneToMany+ManyToOne\uff08ManyToMany\uff09",tag:"\u540e\u7aef\u5f00\u53d1",publishDate:"2018-03-13T00:00:00.000Z",filename:"posts/BEresource/many-to-many-2.md"},description:["section",["h2","\u5305\u7684\u8bf4\u660e"],["p",["strong","domain:"]," domain \u5305\u4e0b\u662f\u5bf9\u5b9e\u4f53\u7684\u5b9a\u4e49\n",["strong","service:"]," \u670d\u52a1\u7684\u63a5\u53e3\u5b9a\u4e49\u548c\u5b9e\u73b0\n",["strong","repository:"]," repository \u5305\u4e0b\u662f\u5bf9\u6570\u636e\u63a5\u5165\u5c42\u63a5\u53e3\u7684\u5b9a\u4e49\n",["strong","web.rest:"]," REST API \u5b9e\u73b0\n",["strong","dto:"]," DTO \u8d77\u5230\u4e1a\u52a1\u6570\u636e\u7684\u4f20\u9012\u4f5c\u7528\n",["strong","mapper:"]," \u5b9e\u4f53\u548c DTO \u4e4b\u95f4\u4e92\u76f8\u8f6c\u6362"],["h1","ManyToMany \u4f8b\u5b50\u8bf4\u660e"]]}}});