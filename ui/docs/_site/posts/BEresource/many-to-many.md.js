webpackJsonp([17],{462:function(n,s){n.exports={content:["article",{},["p","\u8bbe\u6709 2 \u4e2a\u5b9e\u4f53\uff0c\u5206\u522b\u662f\u5b66\u751f\uff0c\u8001\u5e08\uff0c\u8001\u5e08\u548c\u5b66\u751f\u662f\u591a\u5bf9\u591a\u5173\u7cfb\u3002\u8fd9\u91cc\u91c7\u7528\u4e2d\u95f4\u8868\u7684\u5f62\u5f0f\u7ef4\u62a4\u5173\u7cfb\u3002"],["hr"],["h2","\u5b9e\u73b0\u6b65\u9aa4"],["h3","1 \u5efa\u8868 \u6211\u4eec\u7528 sql \u8bed\u53e5\u5efa\u7acb\u8005\u4e24\u4e2a\u8868\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528 hibernate \u81ea\u5df1\u521b\u5efa\u3002"],["hr"],["p","-- \u521b\u5efa students \u8868 --\nDROP TABLE IF EXISTS ",["code","students"],";\nCREATE TABLE ",["code","students"]," (\n  ",["code","id"]," bigint(20) NOT NULL AUTO_INCREMENT,\n  ",["code","brithday"]," varchar(255) COLLATE utf8_bin NOT NULL,\n  ",["code","gender"]," varchar(255) COLLATE utf8_bin NOT NULL,\n  ",["code","s_name"]," varchar(255) COLLATE utf8_bin NOT NULL,\n  PRIMARY KEY (",["code","id"],")\n) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8 COLLATE=utf8_bin;"],["p","-- \u521b\u5efa teachers \u8868 --\nDROP TABLE IF EXISTS ",["code","teachers"],";\nCREATE TABLE ",["code","teachers"]," (\n  ",["code","id"]," bigint(20) NOT NULL AUTO_INCREMENT,\n  ",["code","t_name"]," varchar(255) COLLATE utf8_bin NOT NULL,\n  PRIMARY KEY (",["code","id"],")\n) ENGINE=InnoDB AUTO_INCREMENT=9 DEFAULT CHARSET=utf8 COLLATE=utf8_bin;"],["p","-- \u521b\u5efa consumer_order \u8868 --\nDROP TABLE IF EXISTS ",["code","consumer_order"],";\nCREATE TABLE ",["code","consumer_order"]," (\n",["code","id"]," bigint(20) NOT NULL AUTO_INCREMENT,\n",["code","created_by"]," bigint(20) NOT NULL,\n",["code","created_date"]," bigint(20) NOT NULL,\n",["code","last_modified_by"]," bigint(20) DEFAULT NULL,\n",["code","last_modified_date"]," bigint(20) DEFAULT NULL,\n",["code","data_status"]," varchar(255) COLLATE utf8_bin DEFAULT NULL,\n",["code","goods_num"]," int(11) DEFAULT NULL,\n",["code","store_num"]," int(11) DEFAULT NULL,\n",["code","total_money"]," double DEFAULT NULL,\nPRIMARY KEY (",["code","id"],")\n) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8 COLLATE=utf8_bin;"],["h3","2 \u5728 domain \u5305\u4e0b\u5efa\u5b9e\u4f53\u7c7b Students\uff0cTeachers"],["hr"],["p","\u5b66\u751f\u7c7b\uff1a"],["p",'@Table(name ="students")\n@Entity\npublic class Students extends IdEntity {\n    /**'],["pre",{lang:null,highlighted:' <span class="token operator">*</span> \u6027\u522b\n <span class="token operator">*</span><span class="token operator">/</span>\n@<span class="token function">Column</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">"GENDER"</span><span class="token punctuation">,</span> nullable<span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">)</span>\nprivate String gender<span class="token comment" spellcheck="true">;</span>\n<span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n <span class="token operator">*</span> \u59d3\u540d\n <span class="token operator">*</span><span class="token operator">/</span>\n@<span class="token function">Column</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">"S_NAME"</span><span class="token punctuation">,</span> nullable<span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">)</span>\nprivate String stName<span class="token comment" spellcheck="true">;</span>\n<span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n <span class="token operator">*</span> \u751f\u65e5\n <span class="token operator">*</span><span class="token operator">/</span>\n@<span class="token function">Column</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">"BRITHDAY"</span><span class="token punctuation">,</span> nullable<span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">)</span>\nprivate String brithday<span class="token comment" spellcheck="true">;</span>\n<span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n <span class="token operator">*</span> \u5b66\u751f\u6301\u6709\u6559\u5e08\u7684\u96c6\u5408\n <span class="token operator">*</span><span class="token operator">/</span>\n@<span class="token function">ManyToMany</span><span class="token punctuation">(</span>fetch <span class="token operator">=</span> FetchType<span class="token punctuation">.</span>LAZY<span class="token punctuation">)</span>\n@<span class="token function">JoinTable</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">"teachers_students"</span><span class="token punctuation">,</span><span class="token operator">/</span><span class="token operator">/</span>\u4e2d\u95f4\u8868\u7684\u8868\u540d\n        joinColumns<span class="token operator">=</span>{@<span class="token function">JoinColumn</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">"sid"</span><span class="token punctuation">)</span>}<span class="token punctuation">,</span><span class="token operator">/</span><span class="token operator">/</span>\u672c\u8868\u7684\u4e3b\u952e\n        inverseJoinColumns<span class="token operator">=</span>{@<span class="token function">JoinColumn</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">"tid"</span><span class="token punctuation">)</span>}<span class="token punctuation">)</span><span class="token operator">/</span><span class="token operator">/</span>\u6240\u6620\u5c04\u8868\u7684\u4e3b\u952e\nprivate List<span class="token operator">&lt;</span>Teachers<span class="token operator">></span> teachers<span class="token comment" spellcheck="true">;</span>'},["code",' * \u6027\u522b\n */\n@Column(name="GENDER", nullable=false)\nprivate String gender;\n/**\n * \u59d3\u540d\n */\n@Column(name="S_NAME", nullable=false)\nprivate String stName;\n/**\n * \u751f\u65e5\n */\n@Column(name="BRITHDAY", nullable=false)\nprivate String brithday;\n/**\n * \u5b66\u751f\u6301\u6709\u6559\u5e08\u7684\u96c6\u5408\n */\n@ManyToMany(fetch = FetchType.LAZY)\n@JoinTable(name="teachers_students",//\u4e2d\u95f4\u8868\u7684\u8868\u540d\n        joinColumns={@JoinColumn(name="sid")},//\u672c\u8868\u7684\u4e3b\u952e\n        inverseJoinColumns={@JoinColumn(name="tid")})//\u6240\u6620\u5c04\u8868\u7684\u4e3b\u952e\nprivate List<Teachers> teachers;']],["p","}"],["p",'\u8001\u5e08\u7c7b\uff1a\n@Table(name ="teachers")\n@Entity\npublic class Teachers extends IdEntity {\n    /**'],["pre",{lang:null,highlighted:' <span class="token operator">*</span> \u6559\u5e08\u7684\u540d\u5b57\n <span class="token operator">*</span><span class="token operator">/</span>\n@<span class="token function">Column</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">"T_NAME"</span><span class="token punctuation">,</span> nullable<span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">)</span>\nprivate String teaName<span class="token comment" spellcheck="true">;</span>\n<span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n <span class="token operator">*</span> \u6559\u5e08\u6301\u6709\u7684\u5b66\u751f\u7684\u96c6\u5408\n <span class="token operator">*</span><span class="token operator">/</span>\n@<span class="token function">ManyToMany</span><span class="token punctuation">(</span>mappedBy<span class="token operator">=</span><span class="token string">"teachers"</span> <span class="token punctuation">,</span>fetch <span class="token operator">=</span> FetchType<span class="token punctuation">.</span>LAZY<span class="token punctuation">)</span><span class="token operator">/</span><span class="token operator">/</span>\u628a\u4e3b\u63a7\u65b9\u4ea4\u7ed9\u5b66\u751f\nprivate List<span class="token operator">&lt;</span>Students<span class="token operator">></span> stus<span class="token comment" spellcheck="true">;</span>'},["code",' * \u6559\u5e08\u7684\u540d\u5b57\n */\n@Column(name="T_NAME", nullable=false)\nprivate String teaName;\n/**\n * \u6559\u5e08\u6301\u6709\u7684\u5b66\u751f\u7684\u96c6\u5408\n */\n@ManyToMany(mappedBy="teachers" ,fetch = FetchType.LAZY)//\u628a\u4e3b\u63a7\u65b9\u4ea4\u7ed9\u5b66\u751f\nprivate List<Students> stus;']],["p","}"],["h3","3 \u5728 repository \u4e0b\u5efa \u63a5\u53e3 StudentRepository"],["hr"],["pre",{lang:null,highlighted:'public interface StudentRepository extends BaseRepository<span class="token operator">&lt;</span>Student<span class="token punctuation">,</span>Long<span class="token operator">></span> {\n\n   <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n   <span class="token operator">*</span> \u6839\u636e\u5b66\u751fID\u5220\u9664\u5b66\u751f\n   <span class="token operator">*</span> <span class="token variable">@param</span> cardNum\n   <span class="token operator">*</span> <span class="token variable">@return</span>\n   <span class="token operator">*</span><span class="token operator">/</span>\n    <span class="token variable">@Modifying</span>\n    @<span class="token function">Query</span><span class="token punctuation">(</span><span class="token string">"delete from Student s where s.schoolClass.id = ?1"</span><span class="token punctuation">)</span>\n    public void <span class="token function">deleteByClassId</span><span class="token punctuation">(</span>Long id<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\n}'},["code",'public interface StudentRepository extends BaseRepository<Student,Long> {\n\n   /**\n   * \u6839\u636e\u5b66\u751fID\u5220\u9664\u5b66\u751f\n   * @param cardNum\n   * @return\n   */\n    @Modifying\n    @Query("delete from Student s where s.schoolClass.id = ?1")\n    public void deleteByClassId(Long id);\n\n}']],["h3","4 \u5728 dto \u5305\u4e0b\u5efa StudentsDTO\uff0cStudentsReturnDTO \u7c7b"],["pre",{lang:null,highlighted:"  StudentsDTO\u7528\u4e8e\u63a5\u6536\u524d\u53f0\u4f20\u5165\u6570\u636e\n  StudentsReturnDTO\u7528\u4e8e\u540e\u53f0\u8fd4\u56de\u6570\u636e\u7ed9\u524d\u53f0"},["code","  StudentsDTO\u7528\u4e8e\u63a5\u6536\u524d\u53f0\u4f20\u5165\u6570\u636e\n  StudentsReturnDTO\u7528\u4e8e\u540e\u53f0\u8fd4\u56de\u6570\u636e\u7ed9\u524d\u53f0"]],["hr"],["pre",{lang:null,highlighted:'public class StudentsDTO extends BaseDTO {\n    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n     <span class="token operator">*</span> \u5206\u9875\u53c2\u6570\uff1a\u9875\u6570\n     <span class="token operator">*</span><span class="token operator">/</span>\n    private Integer page<span class="token comment" spellcheck="true">;</span>\n\n    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n     <span class="token operator">*</span> \u5206\u9875\u53c2\u6570\uff1a\u6761\u6570\n     <span class="token operator">*</span><span class="token operator">/</span>\n    private Integer size<span class="token comment" spellcheck="true">;</span>\n    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n     <span class="token operator">*</span> \u5b66\u751fid\n     <span class="token operator">*</span><span class="token operator">/</span>\n    private Long sid<span class="token comment" spellcheck="true">;</span>\n    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n     <span class="token operator">*</span> \u6027\u522b\n     <span class="token operator">*</span><span class="token operator">/</span>\n    private String gender<span class="token comment" spellcheck="true">;</span>\n    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n     <span class="token operator">*</span> \u5b66\u751f\u59d3\u540d\n     <span class="token operator">*</span><span class="token operator">/</span>\n    private String stName<span class="token comment" spellcheck="true">;</span>\n    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n     <span class="token operator">*</span> \u751f\u65e5\n     <span class="token operator">*</span><span class="token operator">/</span>\n    private String brithday<span class="token comment" spellcheck="true">;</span>\n    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n     <span class="token operator">*</span> \u8001\u5e08id\u5b57\u7b26\u4e32<span class="token punctuation">(</span><span class="token number">1</span>\uff0c<span class="token number">2</span>\uff0c<span class="token number">3</span>\uff0c<span class="token number">4</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span>\n     <span class="token operator">*</span><span class="token operator">/</span>\n    private String teachers<span class="token comment" spellcheck="true">;</span>\n    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n     <span class="token operator">*</span> \u8001\u5e08\u59d3\u540d\n     <span class="token operator">*</span><span class="token operator">/</span>\n    private String teName<span class="token comment" spellcheck="true">;</span>\n\n    <span class="token operator">/</span><span class="token operator">/</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span>\u6b64\u5904\u7701\u7565getter\u548csetter\u7684\u4ee3\u7801<span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span>\n}\npublic class StudentsReturnDTO {\n    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n     <span class="token operator">*</span> \u5b66\u751fid\n     <span class="token operator">*</span><span class="token operator">/</span>\n    private Long sid<span class="token comment" spellcheck="true">;</span>\n    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n     <span class="token operator">*</span> \u6027\u522b\n     <span class="token operator">*</span><span class="token operator">/</span>\n    private String gender<span class="token comment" spellcheck="true">;</span>\n    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n     <span class="token operator">*</span> \u5b66\u751f\u59d3\u540d\n     <span class="token operator">*</span><span class="token operator">/</span>\n    private String stName<span class="token comment" spellcheck="true">;</span>\n    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n     <span class="token operator">*</span> \u751f\u65e5\n     <span class="token operator">*</span><span class="token operator">/</span>\n    private String brithday<span class="token comment" spellcheck="true">;</span>\n    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n     <span class="token operator">*</span> \u8001\u5e08\u59d3\u540d\n     <span class="token operator">*</span><span class="token operator">/</span>\n    private List<span class="token operator">&lt;</span>String<span class="token operator">></span> teName<span class="token comment" spellcheck="true">;</span>\n\n   <span class="token operator">/</span><span class="token operator">/</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span>\u6b64\u5904\u7701\u7565getter\u548csetter\u7684\u4ee3\u7801<span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span>\n}'},["code","public class StudentsDTO extends BaseDTO {\n    /**\n     * \u5206\u9875\u53c2\u6570\uff1a\u9875\u6570\n     */\n    private Integer page;\n\n    /**\n     * \u5206\u9875\u53c2\u6570\uff1a\u6761\u6570\n     */\n    private Integer size;\n    /**\n     * \u5b66\u751fid\n     */\n    private Long sid;\n    /**\n     * \u6027\u522b\n     */\n    private String gender;\n    /**\n     * \u5b66\u751f\u59d3\u540d\n     */\n    private String stName;\n    /**\n     * \u751f\u65e5\n     */\n    private String brithday;\n    /**\n     * \u8001\u5e08id\u5b57\u7b26\u4e32(1\uff0c2\uff0c3\uff0c4.....)\n     */\n    private String teachers;\n    /**\n     * \u8001\u5e08\u59d3\u540d\n     */\n    private String teName;\n\n    //------\u6b64\u5904\u7701\u7565getter\u548csetter\u7684\u4ee3\u7801----------\n}\npublic class StudentsReturnDTO {\n    /**\n     * \u5b66\u751fid\n     */\n    private Long sid;\n    /**\n     * \u6027\u522b\n     */\n    private String gender;\n    /**\n     * \u5b66\u751f\u59d3\u540d\n     */\n    private String stName;\n    /**\n     * \u751f\u65e5\n     */\n    private String brithday;\n    /**\n     * \u8001\u5e08\u59d3\u540d\n     */\n    private List<String> teName;\n\n   //------\u6b64\u5904\u7701\u7565getter\u548csetter\u7684\u4ee3\u7801----------\n}"]],["h3","5 \u53ef\u4ee5\u5728 service>mapper \u5305\u4e0b\u4f7f\u7528 mapstruct \u521b\u5efa\u7c7b mapper,\u6b64\u5904\u5b9e\u4f53\u548c dto \u7684\u8f6c\u6362\u4f7f\u7528 spring \u7684 BeanUtils\u3002"],["hr"],["pre",{lang:null,highlighted:'\t\u4f8b\u5982\uff1aBeanUtils<span class="token punctuation">.</span><span class="token function">copyProperties</span><span class="token punctuation">(</span>consumerOrderDTO<span class="token punctuation">,</span>consumerOrder<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\t\u8be5\u65b9\u6cd5\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u662fsource\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u662ftarget\u3002\u8fbe\u5230\u5c06\u7b2c\u4e00\u4e2a\u7c7b\u91cc\u9762\u7684\u5c5e\u6027\u62f7\u8d1d\u5230\u7b2c\u4e8c\u4e2a\u7c7b\u7684\u76ee\u7684\u3002'},["code","\t\u4f8b\u5982\uff1aBeanUtils.copyProperties(consumerOrderDTO,consumerOrder);\n\t\u8be5\u65b9\u6cd5\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u662fsource\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u662ftarget\u3002\u8fbe\u5230\u5c06\u7b2c\u4e00\u4e2a\u7c7b\u91cc\u9762\u7684\u5c5e\u6027\u62f7\u8d1d\u5230\u7b2c\u4e8c\u4e2a\u7c7b\u7684\u76ee\u7684\u3002"]],["h3","6 \u5728 service \u5305\u4e0b StudentsService \u63a5\u53e3\uff0c\u5728 service>impl \u5305\u4e0b\u5efa StudentsServiceImpl \u5b9e\u73b0\u7c7b"],["hr"],["pre",{lang:null,highlighted:'public interface StudentsService extends BaseService<span class="token operator">&lt;</span>Students<span class="token punctuation">,</span> StudentsDTO<span class="token operator">></span> {\n\n    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n     <span class="token operator">*</span>  \u6dfb\u52a0\u5b66\u751f\uff0c\u7ea7\u8054\u4fdd\u5b58\u8001\u5e08\u5173\u7cfb\n     <span class="token operator">*</span> <span class="token variable">@param</span> studentsDTO\n     <span class="token operator">*</span><span class="token operator">/</span>\n    public void <span class="token function">add</span><span class="token punctuation">(</span>StudentsDTO studentsDTO<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n     <span class="token operator">*</span>  \u6dfb\u52a0\u5b66\u751f\u548c\u8001\u5e08\n     <span class="token operator">*</span> <span class="token variable">@param</span> studentsDTO\n     <span class="token operator">*</span><span class="token operator">/</span>\n    public void <span class="token function">addStudentsAndTeacher</span><span class="token punctuation">(</span>StudentsDTO studentsDTO<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\n    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n     <span class="token operator">*</span> \u7ea7\u8054\u5220\u9664\u5b66\u751f\u548c\u5b66\u751f\u8001\u5e08\u5173\u7cfb\n     <span class="token operator">*</span> <span class="token variable">@param</span> studentsDTO\n     <span class="token operator">*</span><span class="token operator">/</span>\n    public void <span class="token function">delete</span><span class="token punctuation">(</span>StudentsDTO studentsDTO<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n     <span class="token operator">*</span> \u4fee\u6539\u5b66\u751f\u4fe1\u606f\u548c\u5b66\u751f\u8001\u5e08\u5173\u7cfb\n     <span class="token operator">*</span> <span class="token variable">@param</span> studentsDTO\n     <span class="token operator">*</span><span class="token operator">/</span>\n    public void <span class="token function">modify</span><span class="token punctuation">(</span>StudentsDTO studentsDTO<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\n    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n     <span class="token operator">*</span> \u524d\u7aef\u63a5\u53e3\uff1a\u67e5\u8be2\u5b66\u751f\u4fe1\u606f\u5217\u8868\u63a5\u53e3\n     <span class="token operator">*</span>\n     <span class="token operator">*</span> <span class="token variable">@param</span> studentsDTO\n     <span class="token operator">*</span> <span class="token variable">@return</span>\n     <span class="token operator">*</span><span class="token operator">/</span>\n    public List<span class="token operator">&lt;</span>Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span><span class="token operator">></span> <span class="token function">list</span><span class="token punctuation">(</span>StudentsDTO studentsDTO<span class="token punctuation">)</span> throws Exception<span class="token comment" spellcheck="true">;</span>\n    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n     <span class="token operator">*</span> \u524d\u7aef\u63a5\u53e3\uff1a\u67e5\u8be2\u5b66\u751f\u4fe1\u606f\u5217\u8868\u63a5\u53e3\uff08\u5206\u9875\uff09\n     <span class="token operator">*</span>\n     <span class="token operator">*</span> <span class="token variable">@param</span> studentsDTO\n     <span class="token operator">*</span> <span class="token variable">@return</span>\n     <span class="token operator">*</span><span class="token operator">/</span>\n    public Page<span class="token operator">&lt;</span>Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span><span class="token operator">></span> <span class="token function">listPage</span><span class="token punctuation">(</span>StudentsDTO studentsDTO<span class="token punctuation">)</span> throws Exception<span class="token comment" spellcheck="true">;</span>\n\n    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n     <span class="token operator">*</span> \u540e\u7aef\u63a5\u53e3\uff1a\u67e5\u8be2\u5b66\u751f\u4fe1\u606f\u5217\u8868\u63a5\u53e3\n     <span class="token operator">*</span>\n     <span class="token operator">*</span> <span class="token variable">@param</span> studentsDTO\n     <span class="token operator">*</span> <span class="token variable">@return</span>\n     <span class="token operator">*</span><span class="token operator">/</span>\n    public List<span class="token operator">&lt;</span>Students<span class="token operator">></span> <span class="token function">listObj</span><span class="token punctuation">(</span>StudentsDTO studentsDTO<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n     <span class="token operator">*</span> \u540e\u7aef\u63a5\u53e3\uff1a\u67e5\u8be2\u5b66\u751f\u4fe1\u606f\u5217\u8868\u63a5\u53e3\uff08\u5206\u9875\uff09\n     <span class="token operator">*</span>\n     <span class="token operator">*</span> <span class="token variable">@param</span> studentsDTO\n     <span class="token operator">*</span> <span class="token variable">@return</span>\n     <span class="token operator">*</span><span class="token operator">/</span>\n    public Page<span class="token operator">&lt;</span>Students<span class="token operator">></span> <span class="token function">listPageObj</span><span class="token punctuation">(</span>StudentsDTO studentsDTO<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n     <span class="token operator">*</span> \u540e\u7aef\uff1aStudents\u8f6cStudentsReturnDTO\n     <span class="token operator">*</span>\n     <span class="token operator">*</span> <span class="token variable">@param</span>\n     <span class="token operator">*</span> <span class="token variable">@return</span>\n     <span class="token operator">*</span><span class="token operator">/</span>\n    public StudentsReturnDTO <span class="token function">studentsToStudentsReturnDTO</span><span class="token punctuation">(</span>Students students<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n}\n<span class="token operator">/</span><span class="token operator">/</span>\u5c06\u5b9e\u73b0\u7c7b\u521b\u5efa\u4e3aspring bean\n<span class="token variable">@Service</span>\n<span class="token operator">/</span><span class="token operator">/</span>\u6dfb\u52a0\u4e8b\u7269\n<span class="token variable">@Transactional</span>\npublic class StudentsServiceImpl extends BaseServiceImpl<span class="token operator">&lt;</span>Students<span class="token punctuation">,</span> StudentsDTO<span class="token operator">></span> implements StudentsService {\n\n    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n     <span class="token operator">*</span> \u6ce8\u5165\u901a\u7528Repository\n     <span class="token operator">*</span><span class="token operator">/</span>\n    <span class="token variable">@Autowired</span>\n    private CommonRepository commonRepository<span class="token comment" spellcheck="true">;</span>\n    <span class="token variable">@Autowired</span>\n    StudentsRepository studentsRepository<span class="token comment" spellcheck="true">;</span>\n    <span class="token variable">@Autowired</span>\n    TeachersRepository teachersRepository<span class="token comment" spellcheck="true">;</span>\n\n    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n     <span class="token operator">*</span> \u6ce8\u5165\u5b9e\u4f53\u8f6cLIST <span class="token operator">OR</span> MAP\u5de5\u5177\n     <span class="token operator">*</span><span class="token operator">/</span>\n    <span class="token variable">@Autowired</span>\n    private MapperUtils mapperUtils<span class="token comment" spellcheck="true">;</span>\n\n    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n     <span class="token operator">*</span>  \u6dfb\u52a0\u5b66\u751f\uff0c\u7ea7\u8054\u4fdd\u5b58\u8001\u5e08\u5173\u7cfb\n     <span class="token operator">*</span> <span class="token variable">@param</span> studentsDTO\n     <span class="token operator">*</span><span class="token operator">/</span>\n    <span class="token variable">@Override</span>\n    public void <span class="token function">add</span><span class="token punctuation">(</span>StudentsDTO studentsDTO<span class="token punctuation">)</span> {\n        String<span class="token punctuation">[</span><span class="token punctuation">]</span> tids<span class="token operator">=</span>studentsDTO<span class="token punctuation">.</span><span class="token function">getTeachers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">","</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        <span class="token function">if</span><span class="token punctuation">(</span>tids<span class="token punctuation">.</span>length<span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span>{\n            List<span class="token operator">&lt;</span>Long<span class="token operator">></span> lsit<span class="token operator">=</span>new ArrayList<span class="token operator">&lt;></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n            <span class="token function">for</span><span class="token punctuation">(</span>int i<span class="token operator">=</span><span class="token number">0</span><span class="token comment" spellcheck="true">;i&lt;tids.length;i++){</span>\n                lsit<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>Long<span class="token punctuation">.</span><span class="token function">parseLong</span><span class="token punctuation">(</span>tids<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n            }\n            <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n             <span class="token operator">*</span> \u901a\u8fc7\u8001\u5e08ID\u627e\u5230\u8be5\u5b66\u751f\u7684\u8001\u5e08\u96c6\u5408\n             <span class="token operator">*</span><span class="token operator">/</span>\n            Iterable<span class="token operator">&lt;</span>Teachers<span class="token operator">></span> teachersIterable<span class="token operator">=</span>teachersRepository<span class="token punctuation">.</span><span class="token function">findAll</span><span class="token punctuation">(</span>lsit<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n            List<span class="token operator">&lt;</span>Teachers<span class="token operator">></span> teachersList<span class="token operator">=</span>new ArrayList<span class="token operator">&lt;></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n            teachersIterable<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>singele <span class="token operator">-</span><span class="token operator">></span>teachersList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>singele<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n            Students student<span class="token operator">=</span>new <span class="token function">Students</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n            <span class="token function">if</span><span class="token punctuation">(</span>!teachersList<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>{\n                student<span class="token punctuation">.</span><span class="token function">setBrithday</span><span class="token punctuation">(</span>studentsDTO<span class="token punctuation">.</span><span class="token function">getBrithday</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n                student<span class="token punctuation">.</span><span class="token function">setGender</span><span class="token punctuation">(</span>studentsDTO<span class="token punctuation">.</span><span class="token function">getGender</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n                student<span class="token punctuation">.</span><span class="token function">setStName</span><span class="token punctuation">(</span>studentsDTO<span class="token punctuation">.</span><span class="token function">getStName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n                student<span class="token punctuation">.</span><span class="token function">setTeachers</span><span class="token punctuation">(</span>teachersList<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n                <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n                 <span class="token operator">*</span> \u4fdd\u5b58\u5b66\u751f\u5e76\u4fdd\u5b58\u5b66\u751f\u8001\u5e08\u5173\u7cfb\n                 <span class="token operator">*</span><span class="token operator">/</span>\n                studentsRepository<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>student<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n            }\n        }<span class="token keyword">else</span>{\n            Students student<span class="token operator">=</span>new <span class="token function">Students</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n            student<span class="token punctuation">.</span><span class="token function">setBrithday</span><span class="token punctuation">(</span>studentsDTO<span class="token punctuation">.</span><span class="token function">getBrithday</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n            student<span class="token punctuation">.</span><span class="token function">setGender</span><span class="token punctuation">(</span>studentsDTO<span class="token punctuation">.</span><span class="token function">getGender</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n            student<span class="token punctuation">.</span><span class="token function">setStName</span><span class="token punctuation">(</span>studentsDTO<span class="token punctuation">.</span><span class="token function">getStName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n            <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n             <span class="token operator">*</span> \u4fdd\u5b58\u5b66\u751f\n             <span class="token operator">*</span><span class="token operator">/</span>\n            studentsRepository<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>student<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        }\n\n\n    }\n    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n     <span class="token operator">*</span>  \u6dfb\u52a0\u5b66\u751f\u548c\u8001\u5e08\n     <span class="token operator">*</span> <span class="token variable">@param</span> studentsDTO\n     <span class="token operator">*</span><span class="token operator">/</span>\n    <span class="token variable">@Override</span>\n    public void <span class="token function">addStudentsAndTeacher</span><span class="token punctuation">(</span>StudentsDTO studentsDTO<span class="token punctuation">)</span> {\n        Students student<span class="token operator">=</span>new <span class="token function">Students</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        List<span class="token operator">&lt;</span>Teachers<span class="token operator">></span> teachersList<span class="token operator">=</span>new ArrayList<span class="token operator">&lt;></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        Teachers teacher<span class="token operator">=</span>new <span class="token function">Teachers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        student<span class="token punctuation">.</span><span class="token function">setBrithday</span><span class="token punctuation">(</span>studentsDTO<span class="token punctuation">.</span><span class="token function">getBrithday</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        student<span class="token punctuation">.</span><span class="token function">setGender</span><span class="token punctuation">(</span>studentsDTO<span class="token punctuation">.</span><span class="token function">getGender</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        student<span class="token punctuation">.</span><span class="token function">setStName</span><span class="token punctuation">(</span>studentsDTO<span class="token punctuation">.</span><span class="token function">getStName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        teacher<span class="token punctuation">.</span><span class="token function">setTeaName</span><span class="token punctuation">(</span>studentsDTO<span class="token punctuation">.</span><span class="token function">getTeName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\n        <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n         <span class="token operator">*</span> \u4fdd\u5b58\u8001\u5e08\n         <span class="token operator">*</span><span class="token operator">/</span>\n        teachersRepository<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>teacher<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        Teachers teachers<span class="token operator">=</span>teachersRepository<span class="token punctuation">.</span><span class="token function">findByName</span><span class="token punctuation">(</span>studentsDTO<span class="token punctuation">.</span><span class="token function">getTeName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        <span class="token function">if</span><span class="token punctuation">(</span>teachers!<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">)</span>{\n            teachersList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>teachers<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n            student<span class="token punctuation">.</span><span class="token function">setTeachers</span><span class="token punctuation">(</span>teachersList<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n            <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n             <span class="token operator">*</span> \u4fdd\u5b58\u5b66\u751f<span class="token punctuation">.</span>\u8001\u5e08\u5b66\u751f\u5173\u7cfb\n             <span class="token operator">*</span><span class="token operator">/</span>\n            studentsRepository<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>student<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        }\n\n    }\n\n    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n     <span class="token operator">*</span> \u7ea7\u8054\u5220\u9664\u5b66\u751f\u548c\u5b66\u751f\u8001\u5e08\u5173\u7cfb\n     <span class="token operator">*</span> <span class="token variable">@param</span> studentsDTO\n     <span class="token operator">*</span><span class="token operator">/</span>\n    <span class="token variable">@Override</span>\n    public void <span class="token function">delete</span><span class="token punctuation">(</span>StudentsDTO studentsDTO<span class="token punctuation">)</span> {\n        Students students<span class="token operator">=</span>studentsRepository<span class="token punctuation">.</span><span class="token function">findOne</span><span class="token punctuation">(</span>studentsDTO<span class="token punctuation">.</span><span class="token function">getSid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        <span class="token function">if</span><span class="token punctuation">(</span>students!<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">)</span>{\n            studentsRepository<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>students<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        }\n    }\n    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n     <span class="token operator">*</span> \u4fee\u6539\u5b66\u751f\u4fe1\u606f\u548c\u5b66\u751f\u8001\u5e08\u5173\u7cfb\n     <span class="token operator">*</span> <span class="token variable">@param</span> studentsDTO\n     <span class="token operator">*</span><span class="token operator">/</span>\n    <span class="token variable">@Override</span>\n    public void <span class="token function">modify</span><span class="token punctuation">(</span>StudentsDTO studentsDTO<span class="token punctuation">)</span> {\n        Students students<span class="token operator">=</span>studentsRepository<span class="token punctuation">.</span><span class="token function">findOne</span><span class="token punctuation">(</span>studentsDTO<span class="token punctuation">.</span><span class="token function">getSid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        <span class="token function">if</span><span class="token punctuation">(</span>students!<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">)</span>{\n            <span class="token function">if</span><span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotEmpty</span><span class="token punctuation">(</span>studentsDTO<span class="token punctuation">.</span><span class="token function">getTeachers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>{\n                String<span class="token punctuation">[</span><span class="token punctuation">]</span> tids<span class="token operator">=</span>studentsDTO<span class="token punctuation">.</span><span class="token function">getTeachers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">","</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n                <span class="token function">if</span><span class="token punctuation">(</span>tids<span class="token punctuation">.</span>length<span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span>{\n                    List<span class="token operator">&lt;</span>Long<span class="token operator">></span> lsit<span class="token operator">=</span>new ArrayList<span class="token operator">&lt;></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n                    <span class="token function">for</span><span class="token punctuation">(</span>int i<span class="token operator">=</span><span class="token number">0</span><span class="token comment" spellcheck="true">;i&lt;tids.length;i++){</span>\n                        lsit<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>Long<span class="token punctuation">.</span><span class="token function">parseLong</span><span class="token punctuation">(</span>tids<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n                    }\n                    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n                     <span class="token operator">*</span> \u901a\u8fc7\u8001\u5e08ID\u627e\u5230\u8be5\u5b66\u751f\u7684\u8001\u5e08\u96c6\u5408\n                     <span class="token operator">*</span><span class="token operator">/</span>\n                    Iterable<span class="token operator">&lt;</span>Teachers<span class="token operator">></span> teachersIterable<span class="token operator">=</span>teachersRepository<span class="token punctuation">.</span><span class="token function">findAll</span><span class="token punctuation">(</span>lsit<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n                    List<span class="token operator">&lt;</span>Teachers<span class="token operator">></span> teachersList<span class="token operator">=</span>new ArrayList<span class="token operator">&lt;></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n                    teachersIterable<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>singele <span class="token operator">-</span><span class="token operator">></span>teachersList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>singele<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n                    <span class="token function">if</span><span class="token punctuation">(</span>!teachersList<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>{\n                        students<span class="token punctuation">.</span><span class="token function">setBrithday</span><span class="token punctuation">(</span>studentsDTO<span class="token punctuation">.</span><span class="token function">getBrithday</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n                        students<span class="token punctuation">.</span><span class="token function">setGender</span><span class="token punctuation">(</span>studentsDTO<span class="token punctuation">.</span><span class="token function">getGender</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n                        students<span class="token punctuation">.</span><span class="token function">setStName</span><span class="token punctuation">(</span>studentsDTO<span class="token punctuation">.</span><span class="token function">getStName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n                        students<span class="token punctuation">.</span><span class="token function">setTeachers</span><span class="token punctuation">(</span>teachersList<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n                        <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n                         <span class="token operator">*</span> \u4fee\u6539\u5b66\u751f<span class="token punctuation">.</span>\u8001\u5e08\u5b66\u751f\u5173\u7cfb\n                         <span class="token operator">*</span><span class="token operator">/</span>\n                        studentsRepository<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>students<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n                    }\n                }<span class="token keyword">else</span>{\n                    students<span class="token punctuation">.</span><span class="token function">setStName</span><span class="token punctuation">(</span>studentsDTO<span class="token punctuation">.</span><span class="token function">getStName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n                    students<span class="token punctuation">.</span><span class="token function">setGender</span><span class="token punctuation">(</span>studentsDTO<span class="token punctuation">.</span><span class="token function">getGender</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n                    students<span class="token punctuation">.</span><span class="token function">setBrithday</span><span class="token punctuation">(</span>studentsDTO<span class="token punctuation">.</span><span class="token function">getBrithday</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n                    students<span class="token punctuation">.</span><span class="token function">setTeachers</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n                    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n                     <span class="token operator">*</span> \u4fee\u6539\u5b66\u751f\n                     <span class="token operator">*</span><span class="token operator">/</span>\n                    studentsRepository<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>students<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n                }\n            }<span class="token keyword">else</span>{\n                students<span class="token punctuation">.</span><span class="token function">setStName</span><span class="token punctuation">(</span>studentsDTO<span class="token punctuation">.</span><span class="token function">getStName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n                students<span class="token punctuation">.</span><span class="token function">setGender</span><span class="token punctuation">(</span>studentsDTO<span class="token punctuation">.</span><span class="token function">getGender</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n                students<span class="token punctuation">.</span><span class="token function">setBrithday</span><span class="token punctuation">(</span>studentsDTO<span class="token punctuation">.</span><span class="token function">getBrithday</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n                students<span class="token punctuation">.</span><span class="token function">setTeachers</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n                <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n                 <span class="token operator">*</span> \u4fee\u6539\u5b66\u751f\n                 <span class="token operator">*</span><span class="token operator">/</span>\n                studentsRepository<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>students<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n            }\n\n        }\n    }\n    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n     <span class="token operator">*</span> \u524d\u7aef\u63a5\u53e3\uff1a\u67e5\u8be2\u5b66\u751f\u4fe1\u606f\n     <span class="token operator">*</span>\n     <span class="token operator">*</span> <span class="token variable">@param</span> studentsDTO\n     <span class="token operator">*</span> <span class="token variable">@return</span>\n     <span class="token operator">*</span><span class="token operator">/</span>\n    <span class="token variable">@Override</span>\n    public List<span class="token operator">&lt;</span>Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span><span class="token operator">></span> <span class="token function">list</span><span class="token punctuation">(</span>StudentsDTO studentsDTO<span class="token punctuation">)</span> throws Exception {\n        MapperParam<span class="token operator">&lt;</span>StudentsReturnDTO<span class="token operator">></span> mapperParam <span class="token operator">=</span> new MapperParam<span class="token operator">&lt;></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        List<span class="token operator">&lt;</span>Students<span class="token operator">></span> studentsList<span class="token operator">=</span><span class="token function">listObj</span><span class="token punctuation">(</span>studentsDTO<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        List<span class="token operator">&lt;</span>StudentsReturnDTO<span class="token operator">></span> studentsReturnDTOList<span class="token operator">=</span>new ArrayList<span class="token operator">&lt;></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        <span class="token keyword">for</span> <span class="token punctuation">(</span>Students students<span class="token punctuation">:</span>studentsList\n             <span class="token punctuation">)</span> {\n            StudentsReturnDTO studentsReturnDTO<span class="token operator">=</span>new <span class="token function">StudentsReturnDTO</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n            studentsReturnDTO<span class="token punctuation">.</span><span class="token function">setBrithday</span><span class="token punctuation">(</span>students<span class="token punctuation">.</span><span class="token function">getBrithday</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n            studentsReturnDTO<span class="token punctuation">.</span><span class="token function">setGender</span><span class="token punctuation">(</span>students<span class="token punctuation">.</span><span class="token function">getGender</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n            studentsReturnDTO<span class="token punctuation">.</span><span class="token function">setSid</span><span class="token punctuation">(</span>students<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n            studentsReturnDTO<span class="token punctuation">.</span><span class="token function">setStName</span><span class="token punctuation">(</span>students<span class="token punctuation">.</span><span class="token function">getStName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n            <span class="token function">if</span><span class="token punctuation">(</span>students<span class="token punctuation">.</span><span class="token function">getTeachers</span><span class="token punctuation">(</span><span class="token punctuation">)</span>!<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">)</span>{\n                List<span class="token operator">&lt;</span>String<span class="token operator">></span> teNameList<span class="token operator">=</span>new ArrayList<span class="token operator">&lt;></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n                <span class="token keyword">for</span> <span class="token punctuation">(</span>Teachers teacher<span class="token punctuation">:</span>students<span class="token punctuation">.</span><span class="token function">getTeachers</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n                     <span class="token punctuation">)</span> {\n                    teNameList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>teacher<span class="token punctuation">.</span><span class="token function">getTeaName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n                }\n                studentsReturnDTO<span class="token punctuation">.</span><span class="token function">setTeName</span><span class="token punctuation">(</span>teNameList<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n            }<span class="token keyword">else</span>{\n                studentsReturnDTO<span class="token punctuation">.</span><span class="token function">setTeName</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n            }\n            studentsReturnDTOList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>studentsReturnDTO<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        }\n        mapperParam<span class="token punctuation">.</span><span class="token function">setList</span><span class="token punctuation">(</span>studentsReturnDTOList<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        return mapperUtils<span class="token punctuation">.</span><span class="token function">convertListDefault</span><span class="token punctuation">(</span>mapperParam<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    }\n    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n     <span class="token operator">*</span> \u524d\u7aef\u63a5\u53e3\uff1a\u67e5\u8be2\u5b66\u751f\u4fe1\u606f\u5217\u8868\u63a5\u53e3\uff08\u5206\u9875\uff09\n     <span class="token operator">*</span>\n     <span class="token operator">*</span> <span class="token variable">@param</span> studentsDTO\n     <span class="token operator">*</span> <span class="token variable">@return</span>\n     <span class="token operator">*</span><span class="token operator">/</span>\n    <span class="token variable">@Override</span>\n    public Page<span class="token operator">&lt;</span>Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span><span class="token operator">></span> <span class="token function">listPage</span><span class="token punctuation">(</span>StudentsDTO studentsDTO<span class="token punctuation">)</span> throws Exception {\n        MapperParam<span class="token operator">&lt;</span>Students<span class="token operator">></span> mapperParam <span class="token operator">=</span> new MapperParam<span class="token operator">&lt;></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        MapperParam<span class="token operator">&lt;</span>StudentsReturnDTO<span class="token operator">></span> mapperParamStudentsReturnDTO <span class="token operator">=</span> new MapperParam<span class="token operator">&lt;></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        Page<span class="token operator">&lt;</span>Students<span class="token operator">></span> studentsPage<span class="token operator">=</span><span class="token function">listPageObj</span><span class="token punctuation">(</span>studentsDTO<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        <span class="token function">if</span><span class="token punctuation">(</span>studentsPage!<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">)</span>{\n            Page<span class="token operator">&lt;</span>StudentsReturnDTO<span class="token operator">></span> newPage<span class="token operator">=</span>studentsPage<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>new Converter<span class="token operator">&lt;</span>Students<span class="token punctuation">,</span> StudentsReturnDTO<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> {\n                <span class="token variable">@Override</span>\n                public StudentsReturnDTO <span class="token function">convert</span><span class="token punctuation">(</span>Students students<span class="token punctuation">)</span> {\n                    return <span class="token function">studentsToStudentsReturnDTO</span><span class="token punctuation">(</span>students<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n                }\n            }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n            mapperParamStudentsReturnDTO<span class="token punctuation">.</span><span class="token function">setPage</span><span class="token punctuation">(</span>newPage<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n            return mapperUtils<span class="token punctuation">.</span><span class="token function">convertPageDefault</span><span class="token punctuation">(</span>mapperParamStudentsReturnDTO<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        }\n        mapperParam<span class="token punctuation">.</span><span class="token function">setPage</span><span class="token punctuation">(</span>studentsPage<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        return mapperUtils<span class="token punctuation">.</span><span class="token function">convertPageDefault</span><span class="token punctuation">(</span>mapperParam<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    }\n\n    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n     <span class="token operator">*</span> \u540e\u7aef\u63a5\u53e3\uff1a\u67e5\u8be2\u5b66\u751f\u4fe1\u606f\u5217\u8868\u63a5\u53e3\n     <span class="token operator">*</span>\n     <span class="token operator">*</span> <span class="token variable">@param</span> studentsDTO\n     <span class="token operator">*</span> <span class="token variable">@return</span>\n     <span class="token operator">*</span><span class="token operator">/</span>\n    <span class="token variable">@Override</span>\n    public List<span class="token operator">&lt;</span>Students<span class="token operator">></span> <span class="token function">listObj</span><span class="token punctuation">(</span>StudentsDTO studentsDTO<span class="token punctuation">)</span> {\n        return commonRepository<span class="token punctuation">.</span><span class="token function">findAll</span><span class="token punctuation">(</span>Students<span class="token punctuation">.</span>class<span class="token punctuation">,</span> <span class="token function">getQuerySpec</span><span class="token punctuation">(</span>studentsDTO<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    }\n    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n     <span class="token operator">*</span> \u540e\u7aef\u63a5\u53e3\uff1a\u67e5\u8be2\u5b66\u751f\u4fe1\u606f\u5217\u8868\u63a5\u53e3\uff08\u5206\u9875\uff09\n     <span class="token operator">*</span>\n     <span class="token operator">*</span> <span class="token variable">@param</span> studentsDTO\n     <span class="token operator">*</span> <span class="token variable">@return</span>\n     <span class="token operator">*</span><span class="token operator">/</span>\n    <span class="token variable">@Override</span>\n    public Page<span class="token operator">&lt;</span>Students<span class="token operator">></span> <span class="token function">listPageObj</span><span class="token punctuation">(</span>StudentsDTO studentsDTO<span class="token punctuation">)</span> {\n        PageRequest pageRequest <span class="token operator">=</span> new <span class="token function">PageRequest</span><span class="token punctuation">(</span>studentsDTO<span class="token punctuation">.</span><span class="token function">getPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> studentsDTO<span class="token punctuation">.</span><span class="token function">getSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        return commonRepository<span class="token punctuation">.</span><span class="token function">findAll</span><span class="token punctuation">(</span>pageRequest<span class="token punctuation">,</span> Students<span class="token punctuation">.</span>class<span class="token punctuation">,</span> <span class="token function">getQuerySpec</span><span class="token punctuation">(</span>studentsDTO<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    }\n\n    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n     <span class="token operator">*</span> \u83b7\u53d6\u67e5\u8be2\u5b66\u751f\u4fe1\u606f\u6761\u4ef6\n     <span class="token operator">*</span>\n     <span class="token operator">*</span> <span class="token variable">@param</span> studentsDTO\n     <span class="token operator">*</span> <span class="token variable">@return</span>\n     <span class="token operator">*</span><span class="token operator">/</span>\n    private Specification<span class="token operator">&lt;</span>Students<span class="token operator">></span> <span class="token function">getQuerySpec</span><span class="token punctuation">(</span>StudentsDTO studentsDTO<span class="token punctuation">)</span> {\n        <span class="token function">return</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> query<span class="token punctuation">,</span> cb<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> {\n            List<span class="token operator">&lt;</span>Predicate<span class="token operator">></span> list <span class="token operator">=</span> new ArrayList<span class="token operator">&lt;></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n            <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n             <span class="token operator">*</span> \u901a\u8fc7\u540d\u5b57\u6a21\u7cca\u67e5\u8be2\n             <span class="token operator">*</span><span class="token operator">/</span>\n            <span class="token function">if</span><span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>studentsDTO<span class="token punctuation">.</span><span class="token function">getStName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>{\n                list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>cb<span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"stName"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"%"</span> <span class="token operator">+</span> studentsDTO<span class="token punctuation">.</span><span class="token function">getStName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"%"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n            }\n            <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n             <span class="token operator">*</span> \u901a\u8fc7\u751f\u65e5\u6a21\u7cca\u67e5\u8be2\n             <span class="token operator">*</span><span class="token operator">/</span>\n            <span class="token function">if</span><span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>studentsDTO<span class="token punctuation">.</span><span class="token function">getBrithday</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>{\n                list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>cb<span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"brithday"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"%"</span> <span class="token operator">+</span> studentsDTO<span class="token punctuation">.</span><span class="token function">getBrithday</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"%"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n            }\n            <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n             <span class="token operator">*</span> \u901a\u8fc7\u6027\u522b\u67e5\u8be2\n             <span class="token operator">*</span><span class="token operator">/</span>\n            <span class="token function">if</span><span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>studentsDTO<span class="token punctuation">.</span><span class="token function">getGender</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>{\n                list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>cb<span class="token punctuation">.</span><span class="token function">equal</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"gender"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>studentsDTO<span class="token punctuation">.</span><span class="token function">getGender</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n            }\n            <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n             <span class="token operator">*</span> \u901a\u8fc7\u8001\u5e08\u67e5\u8be2\n             <span class="token operator">*</span><span class="token operator">/</span>\n            <span class="token function">if</span><span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>studentsDTO<span class="token punctuation">.</span><span class="token function">getTeName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>{\n                query<span class="token punctuation">.</span><span class="token function">distinct</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n                list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>cb<span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">"teachers"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"teaName"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"%"</span> <span class="token operator">+</span> studentsDTO<span class="token punctuation">.</span><span class="token function">getTeName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"%"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n            }\n            Predicate<span class="token punctuation">[</span><span class="token punctuation">]</span> predicates <span class="token operator">=</span> new Predicate<span class="token punctuation">[</span>list<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>\n            return cb<span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span>query<span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>list<span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span>predicates<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRestriction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        }<span class="token comment" spellcheck="true">;</span>\n    }\n    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n     <span class="token operator">*</span> \u540e\u7aef\uff1aStudents\u8f6cStudentsReturnDTO\n     <span class="token operator">*</span>\n     <span class="token operator">*</span> <span class="token variable">@param</span>\n     <span class="token operator">*</span> <span class="token variable">@return</span>\n     <span class="token operator">*</span><span class="token operator">/</span>\n    <span class="token variable">@Override</span>\n    public StudentsReturnDTO <span class="token function">studentsToStudentsReturnDTO</span><span class="token punctuation">(</span>Students students<span class="token punctuation">)</span> {\n        StudentsReturnDTO studentsReturnDTO<span class="token operator">=</span>new <span class="token function">StudentsReturnDTO</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        studentsReturnDTO<span class="token punctuation">.</span><span class="token function">setBrithday</span><span class="token punctuation">(</span>students<span class="token punctuation">.</span><span class="token function">getBrithday</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        studentsReturnDTO<span class="token punctuation">.</span><span class="token function">setGender</span><span class="token punctuation">(</span>students<span class="token punctuation">.</span><span class="token function">getGender</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        studentsReturnDTO<span class="token punctuation">.</span><span class="token function">setSid</span><span class="token punctuation">(</span>students<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        studentsReturnDTO<span class="token punctuation">.</span><span class="token function">setStName</span><span class="token punctuation">(</span>students<span class="token punctuation">.</span><span class="token function">getStName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        <span class="token function">if</span><span class="token punctuation">(</span>students<span class="token punctuation">.</span><span class="token function">getTeachers</span><span class="token punctuation">(</span><span class="token punctuation">)</span>!<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">)</span>{\n            List<span class="token operator">&lt;</span>String<span class="token operator">></span> teNameList<span class="token operator">=</span>new ArrayList<span class="token operator">&lt;></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n            <span class="token keyword">for</span> <span class="token punctuation">(</span>Teachers teacher<span class="token punctuation">:</span>students<span class="token punctuation">.</span><span class="token function">getTeachers</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n                    <span class="token punctuation">)</span> {\n                teNameList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>teacher<span class="token punctuation">.</span><span class="token function">getTeaName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n            }\n            studentsReturnDTO<span class="token punctuation">.</span><span class="token function">setTeName</span><span class="token punctuation">(</span>teNameList<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        }<span class="token keyword">else</span>{\n            studentsReturnDTO<span class="token punctuation">.</span><span class="token function">setTeName</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        }\n        return studentsReturnDTO<span class="token comment" spellcheck="true">;</span>\n    }\n\n}'},["code",'public interface StudentsService extends BaseService<Students, StudentsDTO> {\n\n    /**\n     *  \u6dfb\u52a0\u5b66\u751f\uff0c\u7ea7\u8054\u4fdd\u5b58\u8001\u5e08\u5173\u7cfb\n     * @param studentsDTO\n     */\n    public void add(StudentsDTO studentsDTO);\n    /**\n     *  \u6dfb\u52a0\u5b66\u751f\u548c\u8001\u5e08\n     * @param studentsDTO\n     */\n    public void addStudentsAndTeacher(StudentsDTO studentsDTO);\n\n    /**\n     * \u7ea7\u8054\u5220\u9664\u5b66\u751f\u548c\u5b66\u751f\u8001\u5e08\u5173\u7cfb\n     * @param studentsDTO\n     */\n    public void delete(StudentsDTO studentsDTO);\n    /**\n     * \u4fee\u6539\u5b66\u751f\u4fe1\u606f\u548c\u5b66\u751f\u8001\u5e08\u5173\u7cfb\n     * @param studentsDTO\n     */\n    public void modify(StudentsDTO studentsDTO);\n\n    /**\n     * \u524d\u7aef\u63a5\u53e3\uff1a\u67e5\u8be2\u5b66\u751f\u4fe1\u606f\u5217\u8868\u63a5\u53e3\n     *\n     * @param studentsDTO\n     * @return\n     */\n    public List<Map<String, Object>> list(StudentsDTO studentsDTO) throws Exception;\n    /**\n     * \u524d\u7aef\u63a5\u53e3\uff1a\u67e5\u8be2\u5b66\u751f\u4fe1\u606f\u5217\u8868\u63a5\u53e3\uff08\u5206\u9875\uff09\n     *\n     * @param studentsDTO\n     * @return\n     */\n    public Page<Map<String, Object>> listPage(StudentsDTO studentsDTO) throws Exception;\n\n    /**\n     * \u540e\u7aef\u63a5\u53e3\uff1a\u67e5\u8be2\u5b66\u751f\u4fe1\u606f\u5217\u8868\u63a5\u53e3\n     *\n     * @param studentsDTO\n     * @return\n     */\n    public List<Students> listObj(StudentsDTO studentsDTO);\n    /**\n     * \u540e\u7aef\u63a5\u53e3\uff1a\u67e5\u8be2\u5b66\u751f\u4fe1\u606f\u5217\u8868\u63a5\u53e3\uff08\u5206\u9875\uff09\n     *\n     * @param studentsDTO\n     * @return\n     */\n    public Page<Students> listPageObj(StudentsDTO studentsDTO);\n    /**\n     * \u540e\u7aef\uff1aStudents\u8f6cStudentsReturnDTO\n     *\n     * @param\n     * @return\n     */\n    public StudentsReturnDTO studentsToStudentsReturnDTO(Students students);\n}\n//\u5c06\u5b9e\u73b0\u7c7b\u521b\u5efa\u4e3aspring bean\n@Service\n//\u6dfb\u52a0\u4e8b\u7269\n@Transactional\npublic class StudentsServiceImpl extends BaseServiceImpl<Students, StudentsDTO> implements StudentsService {\n\n    /**\n     * \u6ce8\u5165\u901a\u7528Repository\n     */\n    @Autowired\n    private CommonRepository commonRepository;\n    @Autowired\n    StudentsRepository studentsRepository;\n    @Autowired\n    TeachersRepository teachersRepository;\n\n    /**\n     * \u6ce8\u5165\u5b9e\u4f53\u8f6cLIST OR MAP\u5de5\u5177\n     */\n    @Autowired\n    private MapperUtils mapperUtils;\n\n    /**\n     *  \u6dfb\u52a0\u5b66\u751f\uff0c\u7ea7\u8054\u4fdd\u5b58\u8001\u5e08\u5173\u7cfb\n     * @param studentsDTO\n     */\n    @Override\n    public void add(StudentsDTO studentsDTO) {\n        String[] tids=studentsDTO.getTeachers().split(",");\n        if(tids.length>0){\n            List<Long> lsit=new ArrayList<>();\n            for(int i=0;i<tids.length;i++){\n                lsit.add(Long.parseLong(tids[i]));\n            }\n            /**\n             * \u901a\u8fc7\u8001\u5e08ID\u627e\u5230\u8be5\u5b66\u751f\u7684\u8001\u5e08\u96c6\u5408\n             */\n            Iterable<Teachers> teachersIterable=teachersRepository.findAll(lsit);\n            List<Teachers> teachersList=new ArrayList<>();\n            teachersIterable.forEach(singele ->teachersList.add(singele));\n            Students student=new Students();\n            if(!teachersList.isEmpty()){\n                student.setBrithday(studentsDTO.getBrithday());\n                student.setGender(studentsDTO.getGender());\n                student.setStName(studentsDTO.getStName());\n                student.setTeachers(teachersList);\n                /**\n                 * \u4fdd\u5b58\u5b66\u751f\u5e76\u4fdd\u5b58\u5b66\u751f\u8001\u5e08\u5173\u7cfb\n                 */\n                studentsRepository.save(student);\n            }\n        }else{\n            Students student=new Students();\n            student.setBrithday(studentsDTO.getBrithday());\n            student.setGender(studentsDTO.getGender());\n            student.setStName(studentsDTO.getStName());\n            /**\n             * \u4fdd\u5b58\u5b66\u751f\n             */\n            studentsRepository.save(student);\n        }\n\n\n    }\n    /**\n     *  \u6dfb\u52a0\u5b66\u751f\u548c\u8001\u5e08\n     * @param studentsDTO\n     */\n    @Override\n    public void addStudentsAndTeacher(StudentsDTO studentsDTO) {\n        Students student=new Students();\n        List<Teachers> teachersList=new ArrayList<>();\n        Teachers teacher=new Teachers();\n        student.setBrithday(studentsDTO.getBrithday());\n        student.setGender(studentsDTO.getGender());\n        student.setStName(studentsDTO.getStName());\n        teacher.setTeaName(studentsDTO.getTeName());\n\n        /**\n         * \u4fdd\u5b58\u8001\u5e08\n         */\n        teachersRepository.save(teacher);\n        Teachers teachers=teachersRepository.findByName(studentsDTO.getTeName());\n        if(teachers!=null){\n            teachersList.add(teachers);\n            student.setTeachers(teachersList);\n            /**\n             * \u4fdd\u5b58\u5b66\u751f.\u8001\u5e08\u5b66\u751f\u5173\u7cfb\n             */\n            studentsRepository.save(student);\n        }\n\n    }\n\n    /**\n     * \u7ea7\u8054\u5220\u9664\u5b66\u751f\u548c\u5b66\u751f\u8001\u5e08\u5173\u7cfb\n     * @param studentsDTO\n     */\n    @Override\n    public void delete(StudentsDTO studentsDTO) {\n        Students students=studentsRepository.findOne(studentsDTO.getSid());\n        if(students!=null){\n            studentsRepository.delete(students);\n        }\n    }\n    /**\n     * \u4fee\u6539\u5b66\u751f\u4fe1\u606f\u548c\u5b66\u751f\u8001\u5e08\u5173\u7cfb\n     * @param studentsDTO\n     */\n    @Override\n    public void modify(StudentsDTO studentsDTO) {\n        Students students=studentsRepository.findOne(studentsDTO.getSid());\n        if(students!=null){\n            if(StringUtils.isNotEmpty(studentsDTO.getTeachers())){\n                String[] tids=studentsDTO.getTeachers().split(",");\n                if(tids.length>0){\n                    List<Long> lsit=new ArrayList<>();\n                    for(int i=0;i<tids.length;i++){\n                        lsit.add(Long.parseLong(tids[i]));\n                    }\n                    /**\n                     * \u901a\u8fc7\u8001\u5e08ID\u627e\u5230\u8be5\u5b66\u751f\u7684\u8001\u5e08\u96c6\u5408\n                     */\n                    Iterable<Teachers> teachersIterable=teachersRepository.findAll(lsit);\n                    List<Teachers> teachersList=new ArrayList<>();\n                    teachersIterable.forEach(singele ->teachersList.add(singele));\n                    if(!teachersList.isEmpty()){\n                        students.setBrithday(studentsDTO.getBrithday());\n                        students.setGender(studentsDTO.getGender());\n                        students.setStName(studentsDTO.getStName());\n                        students.setTeachers(teachersList);\n                        /**\n                         * \u4fee\u6539\u5b66\u751f.\u8001\u5e08\u5b66\u751f\u5173\u7cfb\n                         */\n                        studentsRepository.save(students);\n                    }\n                }else{\n                    students.setStName(studentsDTO.getStName());\n                    students.setGender(studentsDTO.getGender());\n                    students.setBrithday(studentsDTO.getBrithday());\n                    students.setTeachers(null);\n                    /**\n                     * \u4fee\u6539\u5b66\u751f\n                     */\n                    studentsRepository.save(students);\n                }\n            }else{\n                students.setStName(studentsDTO.getStName());\n                students.setGender(studentsDTO.getGender());\n                students.setBrithday(studentsDTO.getBrithday());\n                students.setTeachers(null);\n                /**\n                 * \u4fee\u6539\u5b66\u751f\n                 */\n                studentsRepository.save(students);\n            }\n\n        }\n    }\n    /**\n     * \u524d\u7aef\u63a5\u53e3\uff1a\u67e5\u8be2\u5b66\u751f\u4fe1\u606f\n     *\n     * @param studentsDTO\n     * @return\n     */\n    @Override\n    public List<Map<String, Object>> list(StudentsDTO studentsDTO) throws Exception {\n        MapperParam<StudentsReturnDTO> mapperParam = new MapperParam<>();\n        List<Students> studentsList=listObj(studentsDTO);\n        List<StudentsReturnDTO> studentsReturnDTOList=new ArrayList<>();\n        for (Students students:studentsList\n             ) {\n            StudentsReturnDTO studentsReturnDTO=new StudentsReturnDTO();\n            studentsReturnDTO.setBrithday(students.getBrithday());\n            studentsReturnDTO.setGender(students.getGender());\n            studentsReturnDTO.setSid(students.getId());\n            studentsReturnDTO.setStName(students.getStName());\n            if(students.getTeachers()!=null){\n                List<String> teNameList=new ArrayList<>();\n                for (Teachers teacher:students.getTeachers()\n                     ) {\n                    teNameList.add(teacher.getTeaName());\n                }\n                studentsReturnDTO.setTeName(teNameList);\n            }else{\n                studentsReturnDTO.setTeName(null);\n            }\n            studentsReturnDTOList.add(studentsReturnDTO);\n        }\n        mapperParam.setList(studentsReturnDTOList);\n        return mapperUtils.convertListDefault(mapperParam);\n    }\n    /**\n     * \u524d\u7aef\u63a5\u53e3\uff1a\u67e5\u8be2\u5b66\u751f\u4fe1\u606f\u5217\u8868\u63a5\u53e3\uff08\u5206\u9875\uff09\n     *\n     * @param studentsDTO\n     * @return\n     */\n    @Override\n    public Page<Map<String, Object>> listPage(StudentsDTO studentsDTO) throws Exception {\n        MapperParam<Students> mapperParam = new MapperParam<>();\n        MapperParam<StudentsReturnDTO> mapperParamStudentsReturnDTO = new MapperParam<>();\n        Page<Students> studentsPage=listPageObj(studentsDTO);\n        if(studentsPage!=null){\n            Page<StudentsReturnDTO> newPage=studentsPage.map(new Converter<Students, StudentsReturnDTO>() {\n                @Override\n                public StudentsReturnDTO convert(Students students) {\n                    return studentsToStudentsReturnDTO(students);\n                }\n            });\n            mapperParamStudentsReturnDTO.setPage(newPage);\n            return mapperUtils.convertPageDefault(mapperParamStudentsReturnDTO);\n        }\n        mapperParam.setPage(studentsPage);\n        return mapperUtils.convertPageDefault(mapperParam);\n    }\n\n    /**\n     * \u540e\u7aef\u63a5\u53e3\uff1a\u67e5\u8be2\u5b66\u751f\u4fe1\u606f\u5217\u8868\u63a5\u53e3\n     *\n     * @param studentsDTO\n     * @return\n     */\n    @Override\n    public List<Students> listObj(StudentsDTO studentsDTO) {\n        return commonRepository.findAll(Students.class, getQuerySpec(studentsDTO));\n    }\n    /**\n     * \u540e\u7aef\u63a5\u53e3\uff1a\u67e5\u8be2\u5b66\u751f\u4fe1\u606f\u5217\u8868\u63a5\u53e3\uff08\u5206\u9875\uff09\n     *\n     * @param studentsDTO\n     * @return\n     */\n    @Override\n    public Page<Students> listPageObj(StudentsDTO studentsDTO) {\n        PageRequest pageRequest = new PageRequest(studentsDTO.getPage(), studentsDTO.getSize());\n        return commonRepository.findAll(pageRequest, Students.class, getQuerySpec(studentsDTO));\n    }\n\n    /**\n     * \u83b7\u53d6\u67e5\u8be2\u5b66\u751f\u4fe1\u606f\u6761\u4ef6\n     *\n     * @param studentsDTO\n     * @return\n     */\n    private Specification<Students> getQuerySpec(StudentsDTO studentsDTO) {\n        return(root, query, cb) -> {\n            List<Predicate> list = new ArrayList<>();\n            /**\n             * \u901a\u8fc7\u540d\u5b57\u6a21\u7cca\u67e5\u8be2\n             */\n            if(StringUtils.isNotBlank(studentsDTO.getStName())){\n                list.add(cb.like(root.get("stName"), "%" + studentsDTO.getStName() + "%"));\n            }\n            /**\n             * \u901a\u8fc7\u751f\u65e5\u6a21\u7cca\u67e5\u8be2\n             */\n            if(StringUtils.isNotBlank(studentsDTO.getBrithday())){\n                list.add(cb.like(root.get("brithday"), "%" + studentsDTO.getBrithday() + "%"));\n            }\n            /**\n             * \u901a\u8fc7\u6027\u522b\u67e5\u8be2\n             */\n            if(StringUtils.isNotBlank(studentsDTO.getGender())){\n                list.add(cb.equal(root.get("gender"),studentsDTO.getGender()));\n            }\n            /**\n             * \u901a\u8fc7\u8001\u5e08\u67e5\u8be2\n             */\n            if(StringUtils.isNotBlank(studentsDTO.getTeName())){\n                query.distinct(true);\n                list.add(cb.like(root.join("teachers").get("teaName"),"%" + studentsDTO.getTeName() + "%"));\n            }\n            Predicate[] predicates = new Predicate[list.size()];\n            return cb.and(query.where(list.toArray(predicates)).getRestriction());\n        };\n    }\n    /**\n     * \u540e\u7aef\uff1aStudents\u8f6cStudentsReturnDTO\n     *\n     * @param\n     * @return\n     */\n    @Override\n    public StudentsReturnDTO studentsToStudentsReturnDTO(Students students) {\n        StudentsReturnDTO studentsReturnDTO=new StudentsReturnDTO();\n        studentsReturnDTO.setBrithday(students.getBrithday());\n        studentsReturnDTO.setGender(students.getGender());\n        studentsReturnDTO.setSid(students.getId());\n        studentsReturnDTO.setStName(students.getStName());\n        if(students.getTeachers()!=null){\n            List<String> teNameList=new ArrayList<>();\n            for (Teachers teacher:students.getTeachers()\n                    ) {\n                teNameList.add(teacher.getTeaName());\n            }\n            studentsReturnDTO.setTeName(teNameList);\n        }else{\n            studentsReturnDTO.setTeName(null);\n        }\n        return studentsReturnDTO;\n    }\n\n}']],["h3","7 \u5728 web.rest \u5305\u4e0b\u5efa StudentsResource \u7c7b\uff0c\u5b9e\u73b0 rest api \u63a5\u53e3"],["hr"],["pre",{lang:null,highlighted:'<span class="token operator">/</span><span class="token operator">/</span>\u5c06\u7c7b\u521b\u5efa\u4e3aspring bean<span class="token punctuation">,</span>\u8be5\u6ce8\u89e3\u5305\u542b\u4e86<span class="token variable">@Controller</span>\n<span class="token operator">/</span><span class="token operator">/</span><span class="token variable">@ResponseBody</span>\u4e24\u4e2a\u6ce8\u89e3\u7684\u529f\u80fd\u3002ResponseBody\u7528\u4e8e\u5c06\u8fd4\u56de\u7684\u5bf9\u4e86\u8f6c\u6362\u6210json\n<span class="token variable">@RestController</span>\n<span class="token operator">/</span><span class="token operator">/</span>\u6dfb\u52a0\u8bbf\u95ee\u8def\u5f84\n@<span class="token function">RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"/api/DemoForManyToMany"</span><span class="token punctuation">)</span>\npublic class StudentsResource extends BaseResource<span class="token operator">&lt;</span>StudentsDTO<span class="token operator">></span> {\n\n    <span class="token variable">@Autowired</span>\n    StudentsService studentsService<span class="token comment" spellcheck="true">;</span>\n    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n     <span class="token operator">*</span> \u524d\u7aef\u63a5\u53e3\uff1a\u6dfb\u52a0\u5b66\u751f\uff0c\u7ea7\u8054\u4fdd\u5b58\u8001\u5e08\u5173\u7cfb\n     <span class="token operator">*</span> <span class="token variable">@param</span> studentsDTO\n     <span class="token operator">*</span> <span class="token variable">@return</span>\n     <span class="token operator">*</span><span class="token operator">/</span>\n    @<span class="token function">RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"/new"</span><span class="token punctuation">,</span> method <span class="token operator">=</span> RequestMethod<span class="token punctuation">.</span>POST<span class="token punctuation">)</span>\n    public ResponseDTO <span class="token function">addStudents</span><span class="token punctuation">(</span><span class="token variable">@RequestBody</span> StudentsDTO studentsDTO<span class="token punctuation">)</span>{\n        <span class="token function">if</span><span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>studentsDTO<span class="token punctuation">.</span><span class="token function">getGender</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>{\n            return <span class="token function">getResponseDTO</span><span class="token punctuation">(</span><span class="token string">"201"</span><span class="token punctuation">,</span> <span class="token string">"\u5b66\u751f\u6027\u522b\u4e0d\u80fd\u4e3a\u7a7a"</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        }\n        <span class="token function">if</span><span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>studentsDTO<span class="token punctuation">.</span><span class="token function">getStName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>{\n            return <span class="token function">getResponseDTO</span><span class="token punctuation">(</span><span class="token string">"201"</span><span class="token punctuation">,</span> <span class="token string">"\u5b66\u751f\u59d3\u540d\u4e0d\u80fd\u4e3a\u7a7a"</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        }\n        <span class="token function">if</span><span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>studentsDTO<span class="token punctuation">.</span><span class="token function">getBrithday</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>{\n            return <span class="token function">getResponseDTO</span><span class="token punctuation">(</span><span class="token string">"201"</span><span class="token punctuation">,</span> <span class="token string">"\u5b66\u751f\u751f\u65e5\u4e0d\u80fd\u4e3a\u7a7a"</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        }\n\n        try{\n            studentsService<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>studentsDTO<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        }catch <span class="token punctuation">(</span>Exception e<span class="token punctuation">)</span>{\n            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n            return <span class="token function">getResponseDTO</span><span class="token punctuation">(</span><span class="token string">"201"</span><span class="token punctuation">,</span> <span class="token string">"\u7cfb\u7edf\u9519\u8bef"</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        }\n        return <span class="token function">getResponseDTO</span><span class="token punctuation">(</span><span class="token string">"200"</span><span class="token punctuation">,</span> <span class="token string">"\u64cd\u4f5c\u6210\u529f"</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    }\n    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n     <span class="token operator">*</span> \u524d\u7aef\u63a5\u53e3\uff1a\u65b0\u589e\u5b66\u751f\u548c\u8001\u5e08\uff0c\u5e76\u7ea7\u8054\u4fdd\u5b58\u8001\u5e08\u5b66\u751f\u5173\u7cfb\n     <span class="token operator">*</span> <span class="token variable">@param</span> studentsDTO\n     <span class="token operator">*</span> <span class="token variable">@return</span>\n     <span class="token operator">*</span><span class="token operator">/</span>\n    @<span class="token function">RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"/newTeacherAndStudent"</span><span class="token punctuation">,</span> method <span class="token operator">=</span> RequestMethod<span class="token punctuation">.</span>POST<span class="token punctuation">)</span>\n    public ResponseDTO <span class="token function">addStudentsAndTeacher</span><span class="token punctuation">(</span><span class="token variable">@RequestBody</span> StudentsDTO studentsDTO<span class="token punctuation">)</span>{\n        <span class="token function">if</span><span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>studentsDTO<span class="token punctuation">.</span><span class="token function">getTeName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>{\n            return <span class="token function">getResponseDTO</span><span class="token punctuation">(</span><span class="token string">"201"</span><span class="token punctuation">,</span> <span class="token string">"\u8001\u5e08\u59d3\u540d\u4e0d\u80fd\u4e3a\u7a7a"</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        }\n        <span class="token function">if</span><span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>studentsDTO<span class="token punctuation">.</span><span class="token function">getGender</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>{\n            return <span class="token function">getResponseDTO</span><span class="token punctuation">(</span><span class="token string">"201"</span><span class="token punctuation">,</span> <span class="token string">"\u5b66\u751f\u6027\u522b\u4e0d\u80fd\u4e3a\u7a7a"</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        }\n        <span class="token function">if</span><span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>studentsDTO<span class="token punctuation">.</span><span class="token function">getStName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>{\n            return <span class="token function">getResponseDTO</span><span class="token punctuation">(</span><span class="token string">"201"</span><span class="token punctuation">,</span> <span class="token string">"\u5b66\u751f\u59d3\u540d\u4e0d\u80fd\u4e3a\u7a7a"</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        }\n        <span class="token function">if</span><span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>studentsDTO<span class="token punctuation">.</span><span class="token function">getBrithday</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>{\n            return <span class="token function">getResponseDTO</span><span class="token punctuation">(</span><span class="token string">"201"</span><span class="token punctuation">,</span> <span class="token string">"\u5b66\u751f\u751f\u65e5\u4e0d\u80fd\u4e3a\u7a7a"</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        }\n\n        try{\n            studentsService<span class="token punctuation">.</span><span class="token function">addStudentsAndTeacher</span><span class="token punctuation">(</span>studentsDTO<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        }catch <span class="token punctuation">(</span>Exception e<span class="token punctuation">)</span>{\n            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n            return <span class="token function">getResponseDTO</span><span class="token punctuation">(</span><span class="token string">"201"</span><span class="token punctuation">,</span> <span class="token string">"\u7cfb\u7edf\u9519\u8bef"</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        }\n        return <span class="token function">getResponseDTO</span><span class="token punctuation">(</span><span class="token string">"200"</span><span class="token punctuation">,</span> <span class="token string">"\u64cd\u4f5c\u6210\u529f"</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    }\n    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n     <span class="token operator">*</span> \u524d\u7aef\u63a5\u53e3\uff1a\u7ea7\u8054\u5220\u9664\u5b66\u751f\u548c\u5b66\u751f\u8001\u5e08\u5173\u7cfb\n     <span class="token operator">*</span> <span class="token variable">@param</span> studentsDTO\n     <span class="token operator">*</span> <span class="token variable">@return</span>\n     <span class="token operator">*</span><span class="token operator">/</span>\n    @<span class="token function">RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"/delete"</span><span class="token punctuation">,</span> method <span class="token operator">=</span> RequestMethod<span class="token punctuation">.</span>POST<span class="token punctuation">)</span>\n    public ResponseDTO <span class="token function">deleteStudents</span><span class="token punctuation">(</span><span class="token variable">@RequestBody</span> StudentsDTO studentsDTO<span class="token punctuation">)</span>{\n        <span class="token function">if</span><span class="token punctuation">(</span>studentsDTO<span class="token punctuation">.</span><span class="token function">getSid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token keyword">null</span><span class="token punctuation">)</span>{\n            return <span class="token function">getResponseDTO</span><span class="token punctuation">(</span><span class="token string">"201"</span><span class="token punctuation">,</span> <span class="token string">"\u5b66\u751fID\u4e0d\u80fd\u4e3a\u7a7a"</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        }\n        try{\n            studentsService<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>studentsDTO<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        }catch <span class="token punctuation">(</span>Exception e<span class="token punctuation">)</span>{\n            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n            return <span class="token function">getResponseDTO</span><span class="token punctuation">(</span><span class="token string">"201"</span><span class="token punctuation">,</span> <span class="token string">"\u7cfb\u7edf\u9519\u8bef"</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        }\n        return <span class="token function">getResponseDTO</span><span class="token punctuation">(</span><span class="token string">"200"</span><span class="token punctuation">,</span> <span class="token string">"\u64cd\u4f5c\u6210\u529f"</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    }\n    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n     <span class="token operator">*</span> \u524d\u7aef\u63a5\u53e3\uff1a\u4fee\u6539\u5b66\u751f\u4fe1\u606f\u548c\u5b66\u751f\u8001\u5e08\u5173\u7cfb\n     <span class="token operator">*</span> <span class="token variable">@param</span> studentsDTO\n     <span class="token operator">*</span> <span class="token variable">@return</span>\n     <span class="token operator">*</span><span class="token operator">/</span>\n    @<span class="token function">RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"/modify"</span><span class="token punctuation">,</span> method <span class="token operator">=</span> RequestMethod<span class="token punctuation">.</span>POST<span class="token punctuation">)</span>\n    public ResponseDTO <span class="token function">modifyStudents</span><span class="token punctuation">(</span><span class="token variable">@RequestBody</span> StudentsDTO studentsDTO<span class="token punctuation">)</span>{\n        <span class="token function">if</span><span class="token punctuation">(</span>studentsDTO<span class="token punctuation">.</span><span class="token function">getSid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token keyword">null</span><span class="token punctuation">)</span>{\n            return <span class="token function">getResponseDTO</span><span class="token punctuation">(</span><span class="token string">"201"</span><span class="token punctuation">,</span> <span class="token string">"\u5b66\u751fID\u4e0d\u80fd\u4e3a\u7a7a"</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        }\n        <span class="token function">if</span><span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>studentsDTO<span class="token punctuation">.</span><span class="token function">getGender</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>{\n            return <span class="token function">getResponseDTO</span><span class="token punctuation">(</span><span class="token string">"201"</span><span class="token punctuation">,</span> <span class="token string">"\u5b66\u751f\u6027\u522b\u4e0d\u80fd\u4e3a\u7a7a"</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        }\n        <span class="token function">if</span><span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>studentsDTO<span class="token punctuation">.</span><span class="token function">getStName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>{\n            return <span class="token function">getResponseDTO</span><span class="token punctuation">(</span><span class="token string">"201"</span><span class="token punctuation">,</span> <span class="token string">"\u5b66\u751f\u59d3\u540d\u4e0d\u80fd\u4e3a\u7a7a"</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        }\n        <span class="token function">if</span><span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>studentsDTO<span class="token punctuation">.</span><span class="token function">getBrithday</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>{\n            return <span class="token function">getResponseDTO</span><span class="token punctuation">(</span><span class="token string">"201"</span><span class="token punctuation">,</span> <span class="token string">"\u5b66\u751f\u751f\u65e5\u4e0d\u80fd\u4e3a\u7a7a"</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        }\n        try{\n            studentsService<span class="token punctuation">.</span><span class="token function">modify</span><span class="token punctuation">(</span>studentsDTO<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        }catch <span class="token punctuation">(</span>Exception e<span class="token punctuation">)</span>{\n            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n            return <span class="token function">getResponseDTO</span><span class="token punctuation">(</span><span class="token string">"201"</span><span class="token punctuation">,</span> <span class="token string">"\u7cfb\u7edf\u9519\u8bef"</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        }\n        return <span class="token function">getResponseDTO</span><span class="token punctuation">(</span><span class="token string">"200"</span><span class="token punctuation">,</span> <span class="token string">"\u64cd\u4f5c\u6210\u529f"</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    }\n    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n     <span class="token operator">*</span> \u524d\u7aef\u63a5\u53e3\uff1a\u67e5\u8be2\u5b66\u751f\u4fe1\u606f\n     <span class="token operator">*</span>\n     <span class="token operator">*</span> <span class="token variable">@param</span> studentsDTO\n     <span class="token operator">*</span> <span class="token variable">@return</span>\n     <span class="token operator">*</span> <span class="token variable">@throws</span> Exception\n     <span class="token operator">*</span><span class="token operator">/</span>\n    @<span class="token function">RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"/query"</span><span class="token punctuation">,</span> method <span class="token operator">=</span> RequestMethod<span class="token punctuation">.</span>POST<span class="token punctuation">)</span>\n    public ResponseDTO<span class="token operator">&lt;</span>List<span class="token operator">&lt;</span>Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span><span class="token operator">></span><span class="token operator">></span> <span class="token function">list</span><span class="token punctuation">(</span><span class="token variable">@RequestBody</span> StudentsDTO studentsDTO<span class="token punctuation">)</span> throws Exception {\n        return <span class="token function">success</span><span class="token punctuation">(</span>studentsService<span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span>studentsDTO<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    }\n    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n     <span class="token operator">*</span> \u524d\u7aef\u63a5\u53e3\uff1a\u67e5\u8be2\u5b66\u751f\u4fe1\u606f<span class="token punctuation">(</span>\u5206\u9875<span class="token punctuation">)</span>\n     <span class="token operator">*</span>\n     <span class="token operator">*</span> <span class="token variable">@param</span> studentsDTO\n     <span class="token operator">*</span> <span class="token variable">@return</span>\n     <span class="token operator">*</span> <span class="token variable">@throws</span> Exception\n     <span class="token operator">*</span><span class="token operator">/</span>\n    @<span class="token function">RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"/queryPage"</span><span class="token punctuation">,</span> method <span class="token operator">=</span> RequestMethod<span class="token punctuation">.</span>POST<span class="token punctuation">)</span>\n    public ResponseDTO<span class="token operator">&lt;</span>Page<span class="token operator">&lt;</span>Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span><span class="token operator">></span><span class="token operator">></span> <span class="token function">listPage</span><span class="token punctuation">(</span><span class="token variable">@RequestBody</span> StudentsDTO studentsDTO<span class="token punctuation">)</span> throws Exception {\n        return <span class="token function">success</span><span class="token punctuation">(</span>studentsService<span class="token punctuation">.</span><span class="token function">listPage</span><span class="token punctuation">(</span>studentsDTO<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    }\n}'},["code",'//\u5c06\u7c7b\u521b\u5efa\u4e3aspring bean,\u8be5\u6ce8\u89e3\u5305\u542b\u4e86@Controller\n//@ResponseBody\u4e24\u4e2a\u6ce8\u89e3\u7684\u529f\u80fd\u3002ResponseBody\u7528\u4e8e\u5c06\u8fd4\u56de\u7684\u5bf9\u4e86\u8f6c\u6362\u6210json\n@RestController\n//\u6dfb\u52a0\u8bbf\u95ee\u8def\u5f84\n@RequestMapping(value = "/api/DemoForManyToMany")\npublic class StudentsResource extends BaseResource<StudentsDTO> {\n\n    @Autowired\n    StudentsService studentsService;\n    /**\n     * \u524d\u7aef\u63a5\u53e3\uff1a\u6dfb\u52a0\u5b66\u751f\uff0c\u7ea7\u8054\u4fdd\u5b58\u8001\u5e08\u5173\u7cfb\n     * @param studentsDTO\n     * @return\n     */\n    @RequestMapping(value = "/new", method = RequestMethod.POST)\n    public ResponseDTO addStudents(@RequestBody StudentsDTO studentsDTO){\n        if(StringUtils.isEmpty(studentsDTO.getGender())){\n            return getResponseDTO("201", "\u5b66\u751f\u6027\u522b\u4e0d\u80fd\u4e3a\u7a7a", null);\n        }\n        if(StringUtils.isEmpty(studentsDTO.getStName())){\n            return getResponseDTO("201", "\u5b66\u751f\u59d3\u540d\u4e0d\u80fd\u4e3a\u7a7a", null);\n        }\n        if(StringUtils.isEmpty(studentsDTO.getBrithday())){\n            return getResponseDTO("201", "\u5b66\u751f\u751f\u65e5\u4e0d\u80fd\u4e3a\u7a7a", null);\n        }\n\n        try{\n            studentsService.add(studentsDTO);\n        }catch (Exception e){\n            e.printStackTrace();\n            return getResponseDTO("201", "\u7cfb\u7edf\u9519\u8bef", null);\n        }\n        return getResponseDTO("200", "\u64cd\u4f5c\u6210\u529f", null);\n    }\n    /**\n     * \u524d\u7aef\u63a5\u53e3\uff1a\u65b0\u589e\u5b66\u751f\u548c\u8001\u5e08\uff0c\u5e76\u7ea7\u8054\u4fdd\u5b58\u8001\u5e08\u5b66\u751f\u5173\u7cfb\n     * @param studentsDTO\n     * @return\n     */\n    @RequestMapping(value = "/newTeacherAndStudent", method = RequestMethod.POST)\n    public ResponseDTO addStudentsAndTeacher(@RequestBody StudentsDTO studentsDTO){\n        if(StringUtils.isEmpty(studentsDTO.getTeName())){\n            return getResponseDTO("201", "\u8001\u5e08\u59d3\u540d\u4e0d\u80fd\u4e3a\u7a7a", null);\n        }\n        if(StringUtils.isEmpty(studentsDTO.getGender())){\n            return getResponseDTO("201", "\u5b66\u751f\u6027\u522b\u4e0d\u80fd\u4e3a\u7a7a", null);\n        }\n        if(StringUtils.isEmpty(studentsDTO.getStName())){\n            return getResponseDTO("201", "\u5b66\u751f\u59d3\u540d\u4e0d\u80fd\u4e3a\u7a7a", null);\n        }\n        if(StringUtils.isEmpty(studentsDTO.getBrithday())){\n            return getResponseDTO("201", "\u5b66\u751f\u751f\u65e5\u4e0d\u80fd\u4e3a\u7a7a", null);\n        }\n\n        try{\n            studentsService.addStudentsAndTeacher(studentsDTO);\n        }catch (Exception e){\n            e.printStackTrace();\n            return getResponseDTO("201", "\u7cfb\u7edf\u9519\u8bef", null);\n        }\n        return getResponseDTO("200", "\u64cd\u4f5c\u6210\u529f", null);\n    }\n    /**\n     * \u524d\u7aef\u63a5\u53e3\uff1a\u7ea7\u8054\u5220\u9664\u5b66\u751f\u548c\u5b66\u751f\u8001\u5e08\u5173\u7cfb\n     * @param studentsDTO\n     * @return\n     */\n    @RequestMapping(value = "/delete", method = RequestMethod.POST)\n    public ResponseDTO deleteStudents(@RequestBody StudentsDTO studentsDTO){\n        if(studentsDTO.getSid()==null){\n            return getResponseDTO("201", "\u5b66\u751fID\u4e0d\u80fd\u4e3a\u7a7a", null);\n        }\n        try{\n            studentsService.delete(studentsDTO);\n        }catch (Exception e){\n            e.printStackTrace();\n            return getResponseDTO("201", "\u7cfb\u7edf\u9519\u8bef", null);\n        }\n        return getResponseDTO("200", "\u64cd\u4f5c\u6210\u529f", null);\n    }\n    /**\n     * \u524d\u7aef\u63a5\u53e3\uff1a\u4fee\u6539\u5b66\u751f\u4fe1\u606f\u548c\u5b66\u751f\u8001\u5e08\u5173\u7cfb\n     * @param studentsDTO\n     * @return\n     */\n    @RequestMapping(value = "/modify", method = RequestMethod.POST)\n    public ResponseDTO modifyStudents(@RequestBody StudentsDTO studentsDTO){\n        if(studentsDTO.getSid()==null){\n            return getResponseDTO("201", "\u5b66\u751fID\u4e0d\u80fd\u4e3a\u7a7a", null);\n        }\n        if(StringUtils.isEmpty(studentsDTO.getGender())){\n            return getResponseDTO("201", "\u5b66\u751f\u6027\u522b\u4e0d\u80fd\u4e3a\u7a7a", null);\n        }\n        if(StringUtils.isEmpty(studentsDTO.getStName())){\n            return getResponseDTO("201", "\u5b66\u751f\u59d3\u540d\u4e0d\u80fd\u4e3a\u7a7a", null);\n        }\n        if(StringUtils.isEmpty(studentsDTO.getBrithday())){\n            return getResponseDTO("201", "\u5b66\u751f\u751f\u65e5\u4e0d\u80fd\u4e3a\u7a7a", null);\n        }\n        try{\n            studentsService.modify(studentsDTO);\n        }catch (Exception e){\n            e.printStackTrace();\n            return getResponseDTO("201", "\u7cfb\u7edf\u9519\u8bef", null);\n        }\n        return getResponseDTO("200", "\u64cd\u4f5c\u6210\u529f", null);\n    }\n    /**\n     * \u524d\u7aef\u63a5\u53e3\uff1a\u67e5\u8be2\u5b66\u751f\u4fe1\u606f\n     *\n     * @param studentsDTO\n     * @return\n     * @throws Exception\n     */\n    @RequestMapping(value = "/query", method = RequestMethod.POST)\n    public ResponseDTO<List<Map<String, Object>>> list(@RequestBody StudentsDTO studentsDTO) throws Exception {\n        return success(studentsService.list(studentsDTO));\n    }\n    /**\n     * \u524d\u7aef\u63a5\u53e3\uff1a\u67e5\u8be2\u5b66\u751f\u4fe1\u606f(\u5206\u9875)\n     *\n     * @param studentsDTO\n     * @return\n     * @throws Exception\n     */\n    @RequestMapping(value = "/queryPage", method = RequestMethod.POST)\n    public ResponseDTO<Page<Map<String, Object>>> listPage(@RequestBody StudentsDTO studentsDTO) throws Exception {\n        return success(studentsService.listPage(studentsDTO));\n    }\n}']],["p","\u63a5\u53e3\u4ee3\u7801\u5b8c\u6210\uff0c\u7528 postman \u8fdb\u884c\u63a5\u53e3\u7684\u6d4b\u8bd5"]],meta:{order:201801221522,title:"ManyToMany demo \u8bf4\u660e\u6587\u6863",filename:"posts/BEresource/many-to-many.md"},description:["section",["h2","\u5305\u7684\u8bf4\u660e"],["p",["strong","domain:"]," domain \u5305\u4e0b\u662f\u5bf9\u5b9e\u4f53\u7684\u5b9a\u4e49\n",["strong","service:"]," \u670d\u52a1\u7684\u63a5\u53e3\u5b9a\u4e49\u548c\u5b9e\u73b0\n",["strong","repository:"]," repository \u5305\u4e0b\u662f\u5bf9\u6570\u636e\u63a5\u5165\u5c42\u63a5\u53e3\u7684\u5b9a\u4e49\n",["strong","web.rest:"]," REST API \u5b9e\u73b0\n",["strong","dto:"]," DTO \u8d77\u5230\u4e1a\u52a1\u6570\u636e\u7684\u4f20\u9012\u4f5c\u7528\n",["strong","mapper:"]," \u5b9e\u4f53\u548c DTO \u4e4b\u95f4\u4e92\u76f8\u8f6c\u6362"],["h1","ManyToMany \u4f8b\u5b50\u8bf4\u660e"]]}}});