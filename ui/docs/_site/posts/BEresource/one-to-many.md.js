webpackJsonp([16],{463:function(n,s){n.exports={content:["article",["h2","\u5305\u7684\u8bf4\u660e"],["p",["strong","domain:"]," domain \u5305\u4e0b\u662f\u5bf9\u5b9e\u4f53\u7684\u5b9a\u4e49\n",["strong","service:"]," \u670d\u52a1\u7684\u63a5\u53e3\u5b9a\u4e49\u548c\u5b9e\u73b0\n",["strong","repository:"]," repository \u5305\u4e0b\u662f\u5bf9\u6570\u636e\u63a5\u5165\u5c42\u63a5\u53e3\u7684\u5b9a\u4e49\n",["strong","web.rest:"]," REST API \u5b9e\u73b0\n",["strong","dto:"]," DTO \u8d77\u5230\u4e1a\u52a1\u6570\u636e\u7684\u4f20\u9012\u4f5c\u7528\n",["strong","mapper:"]," \u5b9e\u4f53\u548c DTO \u4e4b\u95f4\u4e92\u76f8\u8f6c\u6362"],["h1","OneToMany \u4f8b\u5b50\u8bf4\u660e"],["p","\u8bbe\u6709 2 \u4e2a\u5b9e\u4f53\uff0c\u5206\u522b\u662f\u73ed\u7ea7\uff0c\u5b66\u751f\uff0c\u662f\u4e00\u5bf9\u591a\u5173\u7cfb\u3002"],["h2","\u5b9e\u73b0\u6b65\u9aa4"],["h3","1 \u5efa\u8868 \u6211\u4eec\u7528 sql \u8bed\u53e5\u5efa\u7acb\u8005\u4e24\u4e2a\u8868\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528 hibernate \u81ea\u5df1\u521b\u5efa\u3002"],["p","-- \u521b\u5efa school_class \u8868 --\nDROP TABLE IF EXISTS ",["code","school_class"],";\nCREATE TABLE ",["code","school_class"]," (\n",["code","id"]," bigint(20) NOT NULL AUTO_INCREMENT,\n",["code","created_by"]," bigint(20) NOT NULL,\n",["code","created_date"]," bigint(20) NOT NULL,\n",["code","last_modified_by"]," bigint(20) DEFAULT NULL,\n",["code","last_modified_date"]," bigint(20) DEFAULT NULL,\n",["code","data_status"]," varchar(255) COLLATE utf8_bin DEFAULT NULL,\n",["code","class_number"]," int(11) DEFAULT NULL,\n",["code","grade"]," int(11) DEFAULT NULL,\n",["code","stu_number"]," int(11) DEFAULT NULL,\nPRIMARY KEY (",["code","id"],")\n) ENGINE=InnoDB AUTO_INCREMENT=10 DEFAULT CHARSET=utf8 COLLATE=utf8_bin;"],["p","-- \u521b\u5efa student \u8868 --\nDROP TABLE IF EXISTS ",["code","student"],";\nCREATE TABLE ",["code","student"]," (\n",["code","id"]," bigint(20) NOT NULL AUTO_INCREMENT,\n",["code","created_by"]," bigint(20) NOT NULL,\n",["code","created_date"]," bigint(20) NOT NULL,\n",["code","last_modified_by"]," bigint(20) DEFAULT NULL,\n",["code","last_modified_date"]," bigint(20) DEFAULT NULL,\n",["code","data_status"]," varchar(255) COLLATE utf8_bin DEFAULT NULL,\n",["code","age"]," int(11) DEFAULT NULL,\n",["code","name"]," varchar(255) COLLATE utf8_bin DEFAULT NULL,\n",["code","sex"]," tinyint(4) DEFAULT NULL,\n",["code","school_class_id"]," bigint(20) DEFAULT NULL,\nPRIMARY KEY (",["code","id"],"),\nKEY ",["code","FKfun0xyj3ifo7h4fhdbh9uc5d5"]," (",["code","school_class_id"],"),\nCONSTRAINT ",["code","FKfun0xyj3ifo7h4fhdbh9uc5d5"]," FOREIGN KEY (",["code","school_class_id"],") REFERENCES ",["code","school_class"]," (",["code","id"],")\n) ENGINE=InnoDB AUTO_INCREMENT=16 DEFAULT CHARSET=utf8 COLLATE=utf8_bin;"],["h3","2 \u5728 domain \u5305\u4e0b\u5efa\u5b9e\u4f53\u7c7b Employee \u548c ParkingSpace"],["p",'\u73ed\u7ea7\u7c7b\uff1a\n@Entity\n@Table(name = "school_class")\npublic class SchoolClass extends BaseAuditingEntity {'],["pre",{lang:null,highlighted:'<span class="token operator">/</span><span class="token operator">/</span>\u73ed\u7ea7\u53f7\n@<span class="token function">Column</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"class_number"</span><span class="token punctuation">)</span>\nprivate Integer classNumber<span class="token comment" spellcheck="true">;</span>\n\n<span class="token operator">/</span><span class="token operator">/</span>\u6240\u5c5e\u5e74\u7ea7\n@<span class="token function">Column</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"grade"</span><span class="token punctuation">)</span>\nprivate Integer grade<span class="token comment" spellcheck="true">;</span>\n\n<span class="token operator">/</span><span class="token operator">/</span>\u73ed\u7ea7\u4eba\u6570\n@<span class="token function">Column</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"stu_number"</span><span class="token punctuation">)</span>\nprivate Integer stuNumber<span class="token comment" spellcheck="true">;</span>\n\n<span class="token operator">/</span><span class="token operator">/</span>\u5b66\u751f\n@<span class="token function">OneToMany</span><span class="token punctuation">(</span>mappedBy <span class="token operator">=</span> <span class="token string">"schoolClass"</span><span class="token punctuation">,</span>fetch <span class="token operator">=</span> FetchType<span class="token punctuation">.</span>LAZY<span class="token punctuation">,</span>cascade <span class="token operator">=</span> CascadeType<span class="token punctuation">.</span>REMOVE<span class="token punctuation">)</span>\nprivate List<span class="token operator">&lt;</span>Student<span class="token operator">></span> studentList<span class="token comment" spellcheck="true">;</span>\n<span class="token operator">/</span><span class="token operator">/</span>\u6b64\u5904\u7701\u7565getter\u548csetter\u7684\u4ee3\u7801<span class="token operator">-</span>\n}'},["code",'//\u73ed\u7ea7\u53f7\n@Column(name = "class_number")\nprivate Integer classNumber;\n\n//\u6240\u5c5e\u5e74\u7ea7\n@Column(name = "grade")\nprivate Integer grade;\n\n//\u73ed\u7ea7\u4eba\u6570\n@Column(name = "stu_number")\nprivate Integer stuNumber;\n\n//\u5b66\u751f\n@OneToMany(mappedBy = "schoolClass",fetch = FetchType.LAZY,cascade = CascadeType.REMOVE)\nprivate List<Student> studentList;\n//\u6b64\u5904\u7701\u7565getter\u548csetter\u7684\u4ee3\u7801-\n}']],["p",'\u5b66\u751f\u7c7b\uff1a\n@Entity\n@Table(name = "student")\npublic class Student extends BaseAuditingEntity {'],["pre",{lang:null,highlighted:'<span class="token operator">/</span><span class="token operator">/</span>\u5b66\u751f\u540d\n@<span class="token function">Column</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"name"</span><span class="token punctuation">)</span>\nprivate String name<span class="token comment" spellcheck="true">;</span>\n\n\n<span class="token operator">/</span><span class="token operator">/</span>\u5e74\u7ea7\n@<span class="token function">Column</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"age"</span><span class="token punctuation">)</span>\nprivate Integer age<span class="token comment" spellcheck="true">;</span>\n\n\n<span class="token operator">/</span><span class="token operator">/</span>\u6027\u522b \u5973<span class="token number">0</span>\uff0c\u7537<span class="token number">1</span>\n@<span class="token function">Column</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"sex"</span><span class="token punctuation">)</span>\nprivate Byte sex<span class="token comment" spellcheck="true">;</span>\n\n<span class="token operator">/</span><span class="token operator">/</span>\u6240\u5c5e\u73ed\u7ea7\n@<span class="token function">ManyToOne</span><span class="token punctuation">(</span>fetch <span class="token operator">=</span> FetchType<span class="token punctuation">.</span>LAZY<span class="token punctuation">)</span>\n@<span class="token function">JoinColumn</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"school_class_id"</span><span class="token punctuation">)</span>\nprivate SchoolClass schoolClass<span class="token comment" spellcheck="true">;</span>\n\n<span class="token operator">/</span><span class="token operator">/</span>\u6b64\u5904\u7701\u7565getter\u548csetter\u7684\u4ee3\u7801<span class="token operator">-</span>\n}'},["code",'//\u5b66\u751f\u540d\n@Column(name = "name")\nprivate String name;\n\n\n//\u5e74\u7ea7\n@Column(name = "age")\nprivate Integer age;\n\n\n//\u6027\u522b \u59730\uff0c\u75371\n@Column(name = "sex")\nprivate Byte sex;\n\n//\u6240\u5c5e\u73ed\u7ea7\n@ManyToOne(fetch = FetchType.LAZY)\n@JoinColumn(name = "school_class_id")\nprivate SchoolClass schoolClass;\n\n//\u6b64\u5904\u7701\u7565getter\u548csetter\u7684\u4ee3\u7801-\n}']],["h3","3 \u5728 repository \u4e0b\u5efa \u63a5\u53e3 SchoolClassRepository\uff0cStudentRepository"],["pre",{lang:null,highlighted:'public interface StudentRepository extends BaseRepository<span class="token operator">&lt;</span>Student<span class="token punctuation">,</span>Long<span class="token operator">></span> {\n\n    <span class="token variable">@Modifying</span>\n    @<span class="token function">Query</span><span class="token punctuation">(</span><span class="token string">"delete from Student s where s.schoolClass.id = ?1"</span><span class="token punctuation">)</span>\n    public void <span class="token function">deleteByClassId</span><span class="token punctuation">(</span>Long id<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\n}\n\npublic interface SchoolClassRepository extends BaseRepository<span class="token operator">&lt;</span>SchoolClass<span class="token punctuation">,</span>Long<span class="token operator">></span> {\n\n    @<span class="token function">Query</span><span class="token punctuation">(</span><span class="token string">"select count (s.id) from SchoolClass s where s.classNumber = ?1 and s.grade = ?2 "</span><span class="token punctuation">)</span>\n    public Long <span class="token function">addCheck</span><span class="token punctuation">(</span>Integer classNumber<span class="token punctuation">,</span>Integer grade<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\n    @<span class="token function">Query</span><span class="token punctuation">(</span><span class="token string">"select count (s.id) from SchoolClass s where s.classNumber = ?1 and s.grade = ?2 and s.id &lt;> ?3"</span><span class="token punctuation">)</span>\n    public Long <span class="token function">updateCheck</span><span class="token punctuation">(</span>Integer classNumber<span class="token punctuation">,</span>Integer grade<span class="token punctuation">,</span>Long id<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n}'},["code",'public interface StudentRepository extends BaseRepository<Student,Long> {\n\n    @Modifying\n    @Query("delete from Student s where s.schoolClass.id = ?1")\n    public void deleteByClassId(Long id);\n\n}\n\npublic interface SchoolClassRepository extends BaseRepository<SchoolClass,Long> {\n\n    @Query("select count (s.id) from SchoolClass s where s.classNumber = ?1 and s.grade = ?2 ")\n    public Long addCheck(Integer classNumber,Integer grade);\n\n    @Query("select count (s.id) from SchoolClass s where s.classNumber = ?1 and s.grade = ?2 and s.id <> ?3")\n    public Long updateCheck(Integer classNumber,Integer grade,Long id);\n}']],["h3","4 \u5728 dto \u5305\u4e0b\u5efa SchoolClassDTO\uff0cStudentDTO \u7c7b"],["pre",{lang:null,highlighted:'  public class SchoolClassDTO extends BaseDTO{\n\n    private Long id<span class="token comment" spellcheck="true">;</span>\n\n    <span class="token operator">/</span><span class="token operator">/</span>\u73ed\u7ea7\u53f7\n    private Integer classNumber<span class="token comment" spellcheck="true">;</span>\n\n    <span class="token operator">/</span><span class="token operator">/</span>\u6240\u5c5e\u5e74\u7ea7\n    private Integer grade<span class="token comment" spellcheck="true">;</span>\n\n    <span class="token operator">/</span><span class="token operator">/</span>\u73ed\u7ea7\u4eba\u6570\n    private Integer stuNumber<span class="token comment" spellcheck="true">;</span>\n\n    private List<span class="token operator">&lt;</span>StudentDTO<span class="token operator">></span> studentDTOList<span class="token comment" spellcheck="true">;</span>\n    <span class="token operator">/</span><span class="token operator">/</span>\u6b64\u5904\u7701\u7565getter\u548csetter\u7684\u4ee3\u7801<span class="token operator">-</span>\n    }\n\n  public class StudentDTO extends BaseDTO{\n    <span class="token operator">/</span><span class="token operator">/</span>\u5b66\u751f\u540d\n    private String name<span class="token comment" spellcheck="true">;</span>\n\n    <span class="token operator">/</span><span class="token operator">/</span>\u5e74\u7ea7\n    private Integer age<span class="token comment" spellcheck="true">;</span>\n\n    <span class="token operator">/</span><span class="token operator">/</span>\u6027\u522b \u5973<span class="token number">0</span>\uff0c\u7537<span class="token number">1</span>\n    private Byte sex<span class="token comment" spellcheck="true">;</span>\n    <span class="token operator">/</span><span class="token operator">/</span>\u6b64\u5904\u7701\u7565getter\u548csetter\u7684\u4ee3\u7801<span class="token operator">-</span>\n    }'},["code","  public class SchoolClassDTO extends BaseDTO{\n\n    private Long id;\n\n    //\u73ed\u7ea7\u53f7\n    private Integer classNumber;\n\n    //\u6240\u5c5e\u5e74\u7ea7\n    private Integer grade;\n\n    //\u73ed\u7ea7\u4eba\u6570\n    private Integer stuNumber;\n\n    private List<StudentDTO> studentDTOList;\n    //\u6b64\u5904\u7701\u7565getter\u548csetter\u7684\u4ee3\u7801-\n    }\n\n  public class StudentDTO extends BaseDTO{\n    //\u5b66\u751f\u540d\n    private String name;\n\n    //\u5e74\u7ea7\n    private Integer age;\n\n    //\u6027\u522b \u59730\uff0c\u75371\n    private Byte sex;\n    //\u6b64\u5904\u7701\u7565getter\u548csetter\u7684\u4ee3\u7801-\n    }"]],["h3","5 \u53ef\u4ee5\u5728 service>mapper \u5305\u4e0b\u4f7f\u7528 mapstruct \u521b\u5efa\u7c7b mapper,\u6b64\u5904\u5b9e\u4f53\u548c dto \u7684\u8f6c\u6362\u4f7f\u7528 spring \u7684 BeanUtils\u3002"],["pre",{lang:null,highlighted:'\t\u4f8b\u5982\uff1aBeanUtils<span class="token punctuation">.</span><span class="token function">copyProperties</span><span class="token punctuation">(</span>consumerOrderDTO<span class="token punctuation">,</span>consumerOrder<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\t\u8be5\u65b9\u6cd5\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u662fsource\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u662ftarget\u3002\u8fbe\u5230\u5c06\u7b2c\u4e00\u4e2a\u7c7b\u91cc\u9762\u7684\u5c5e\u6027\u62f7\u8d1d\u5230\u7b2c\u4e8c\u4e2a\u7c7b\u7684\u76ee\u7684\u3002'},["code","\t\u4f8b\u5982\uff1aBeanUtils.copyProperties(consumerOrderDTO,consumerOrder);\n\t\u8be5\u65b9\u6cd5\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u662fsource\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u662ftarget\u3002\u8fbe\u5230\u5c06\u7b2c\u4e00\u4e2a\u7c7b\u91cc\u9762\u7684\u5c5e\u6027\u62f7\u8d1d\u5230\u7b2c\u4e8c\u4e2a\u7c7b\u7684\u76ee\u7684\u3002"]],["h3","6 \u5728 service \u5305\u4e0b SchoolClassService \u63a5\u53e3\uff0c\u5728 service>impl \u5305\u4e0b\u5efa SchoolClassServiceImpl \u5b9e\u73b0\u7c7b"],["pre",{lang:null,highlighted:'public interface SchoolClassService {\n\n    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n     <span class="token operator">*</span> \u6dfb\u52a0\u4fdd\u5b58\n     <span class="token operator">*</span> <span class="token variable">@param</span> schoolClassDTO\n     <span class="token operator">*</span><span class="token operator">/</span>\n    public String <span class="token function">saveOrUpdate</span><span class="token punctuation">(</span>SchoolClassDTO schoolClassDTO<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\n    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n     <span class="token operator">*</span> \u6839\u636eid\u5220\u9664\n     <span class="token operator">*</span> <span class="token variable">@param</span> id\n     <span class="token operator">*</span><span class="token operator">/</span>\n    public void <span class="token function">deleteById</span><span class="token punctuation">(</span>Long id<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\n    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n     <span class="token operator">*</span> \u5206\u9875\u67e5\u8be2\n     <span class="token operator">*</span> <span class="token variable">@param</span> pageable\n     <span class="token operator">*</span> <span class="token variable">@return</span>\n     <span class="token operator">*</span><span class="token operator">/</span>\n    public Page<span class="token operator">&lt;</span>SchoolClassDTO<span class="token operator">></span> <span class="token function">findByPage</span><span class="token punctuation">(</span>Pageable pageable<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n}\n\n<span class="token operator">/</span><span class="token operator">/</span>\u5c06\u5b9e\u73b0\u7c7b\u521b\u5efa\u4e3aspring bean\n<span class="token variable">@Service</span>\n<span class="token variable">@Transactional</span>\npublic class SchoolClassServiceImpl implements SchoolClassService {\n\n    <span class="token variable">@Autowired</span>\n    private SchoolClassRepository schoolClassRepository<span class="token comment" spellcheck="true">;</span>\n\n    <span class="token variable">@Autowired</span>\n    private StudentRepository studentRepository<span class="token comment" spellcheck="true">;</span>\n\n    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n     <span class="token operator">*</span> \u6dfb\u52a0\u4fdd\u5b58\n     <span class="token operator">*</span> <span class="token variable">@param</span> schoolClassDTO\n     <span class="token operator">*</span><span class="token operator">/</span>\n    <span class="token variable">@Override</span>\n    public String <span class="token function">saveOrUpdate</span><span class="token punctuation">(</span>SchoolClassDTO schoolClassDTO<span class="token punctuation">)</span> {\n        Long count <span class="token operator">=</span> schoolClassDTO<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token operator">?</span>schoolClassRepository<span class="token punctuation">.</span><span class="token function">addCheck</span><span class="token punctuation">(</span>schoolClassDTO<span class="token punctuation">.</span><span class="token function">getClassNumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>schoolClassDTO<span class="token punctuation">.</span><span class="token function">getGrade</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n                schoolClassRepository<span class="token punctuation">.</span><span class="token function">updateCheck</span><span class="token punctuation">(</span>schoolClassDTO<span class="token punctuation">.</span><span class="token function">getClassNumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>schoolClassDTO<span class="token punctuation">.</span><span class="token function">getGrade</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>schoolClassDTO<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>count <span class="token operator">></span>0l<span class="token punctuation">)</span>{\n            return <span class="token string">"\u8be5\u73ed\u7ea7\u5df2\u7ecf\u5b58\u5728\uff01"</span><span class="token comment" spellcheck="true">;</span>\n        }\n\n        SchoolClass schoolClass <span class="token operator">=</span> <span class="token keyword">null</span><span class="token comment" spellcheck="true">;</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>schoolClassDTO<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> !<span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>{\n            schoolClass <span class="token operator">=</span> schoolClassRepository<span class="token punctuation">.</span><span class="token function">findOne</span><span class="token punctuation">(</span>schoolClassDTO<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n            <span class="token operator">/</span><span class="token operator">/</span>\u5220\u9664\u5b66\u751f\n            studentRepository<span class="token punctuation">.</span><span class="token function">deleteByClassId</span><span class="token punctuation">(</span>schoolClassDTO<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        }<span class="token keyword">else</span>{\n            schoolClass <span class="token operator">=</span> new <span class="token function">SchoolClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        }\n        BeanUtils<span class="token punctuation">.</span><span class="token function">copyProperties</span><span class="token punctuation">(</span>schoolClassDTO<span class="token punctuation">,</span>schoolClass<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        schoolClass <span class="token operator">=</span> schoolClassRepository<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>schoolClass<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>schoolClassDTO<span class="token punctuation">.</span><span class="token function">getStudentDTOList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> !<span class="token operator">=</span> <span class="token keyword">null</span> <span class="token operator">&amp;</span><span class="token operator">&amp;</span> !schoolClassDTO<span class="token punctuation">.</span><span class="token function">getStudentDTOList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>{\n            List<span class="token operator">&lt;</span>Student<span class="token operator">></span> studentList <span class="token operator">=</span> new ArrayList<span class="token operator">&lt;></span><span class="token punctuation">(</span>schoolClassDTO<span class="token punctuation">.</span><span class="token function">getStudentDTOList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n            <span class="token keyword">for</span> <span class="token punctuation">(</span>StudentDTO studentDTO <span class="token punctuation">:</span> schoolClassDTO<span class="token punctuation">.</span><span class="token function">getStudentDTOList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> {\n                Student student <span class="token operator">=</span> new <span class="token function">Student</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n                BeanUtils<span class="token punctuation">.</span><span class="token function">copyProperties</span><span class="token punctuation">(</span>studentDTO<span class="token punctuation">,</span>student<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n                student<span class="token punctuation">.</span><span class="token function">setSchoolClass</span><span class="token punctuation">(</span>schoolClass<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n                studentList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>student<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n            }\n<span class="token operator">/</span><span class="token operator">/</span>            schoolClass<span class="token punctuation">.</span><span class="token function">setStudentList</span><span class="token punctuation">(</span>studentList<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n            studentRepository<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>studentList<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        }\n        return <span class="token keyword">null</span><span class="token comment" spellcheck="true">;</span>\n    }\n\n\n    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n     <span class="token operator">*</span> \u6839\u636eid\u5220\u9664\n     <span class="token operator">*</span> <span class="token variable">@param</span> id\n     <span class="token operator">*</span><span class="token operator">/</span>\n    <span class="token variable">@Override</span>\n    public void <span class="token function">deleteById</span><span class="token punctuation">(</span>Long id<span class="token punctuation">)</span> {\n        schoolClassRepository<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    }\n\n    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n     <span class="token operator">*</span> \u5206\u9875\u67e5\u8be2\n     <span class="token operator">*</span> <span class="token variable">@param</span> pageable\n     <span class="token operator">*</span> <span class="token variable">@return</span>\n     <span class="token operator">*</span><span class="token operator">/</span>\n    <span class="token variable">@Override</span>\n    public Page<span class="token operator">&lt;</span>SchoolClassDTO<span class="token operator">></span> <span class="token function">findByPage</span><span class="token punctuation">(</span>Pageable pageable<span class="token punctuation">)</span> {\n        Page<span class="token operator">&lt;</span>SchoolClass<span class="token operator">></span> page <span class="token operator">=</span> schoolClassRepository<span class="token punctuation">.</span><span class="token function">findAll</span><span class="token punctuation">(</span>pageable<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        return page<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>new Converter<span class="token operator">&lt;</span>SchoolClass<span class="token punctuation">,</span> SchoolClassDTO<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> {\n            <span class="token variable">@Override</span>\n            public SchoolClassDTO <span class="token function">convert</span><span class="token punctuation">(</span>SchoolClass schoolClass<span class="token punctuation">)</span> {\n                SchoolClassDTO schoolClassDTO <span class="token operator">=</span> new <span class="token function">SchoolClassDTO</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n                BeanUtils<span class="token punctuation">.</span><span class="token function">copyProperties</span><span class="token punctuation">(</span>schoolClass<span class="token punctuation">,</span>schoolClassDTO<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n                return schoolClassDTO<span class="token comment" spellcheck="true">;</span>\n            }\n        }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    }\n}'},["code",'public interface SchoolClassService {\n\n    /**\n     * \u6dfb\u52a0\u4fdd\u5b58\n     * @param schoolClassDTO\n     */\n    public String saveOrUpdate(SchoolClassDTO schoolClassDTO);\n\n    /**\n     * \u6839\u636eid\u5220\u9664\n     * @param id\n     */\n    public void deleteById(Long id);\n\n    /**\n     * \u5206\u9875\u67e5\u8be2\n     * @param pageable\n     * @return\n     */\n    public Page<SchoolClassDTO> findByPage(Pageable pageable);\n}\n\n//\u5c06\u5b9e\u73b0\u7c7b\u521b\u5efa\u4e3aspring bean\n@Service\n@Transactional\npublic class SchoolClassServiceImpl implements SchoolClassService {\n\n    @Autowired\n    private SchoolClassRepository schoolClassRepository;\n\n    @Autowired\n    private StudentRepository studentRepository;\n\n    /**\n     * \u6dfb\u52a0\u4fdd\u5b58\n     * @param schoolClassDTO\n     */\n    @Override\n    public String saveOrUpdate(SchoolClassDTO schoolClassDTO) {\n        Long count = schoolClassDTO.getId() == null?schoolClassRepository.addCheck(schoolClassDTO.getClassNumber(),schoolClassDTO.getGrade()):\n                schoolClassRepository.updateCheck(schoolClassDTO.getClassNumber(),schoolClassDTO.getGrade(),schoolClassDTO.getId());\n        if (count >0l){\n            return "\u8be5\u73ed\u7ea7\u5df2\u7ecf\u5b58\u5728\uff01";\n        }\n\n        SchoolClass schoolClass = null;\n        if (schoolClassDTO.getId() != null){\n            schoolClass = schoolClassRepository.findOne(schoolClassDTO.getId());\n            //\u5220\u9664\u5b66\u751f\n            studentRepository.deleteByClassId(schoolClassDTO.getId());\n        }else{\n            schoolClass = new SchoolClass();\n        }\n        BeanUtils.copyProperties(schoolClassDTO,schoolClass);\n        schoolClass = schoolClassRepository.save(schoolClass);\n\n        if (schoolClassDTO.getStudentDTOList() != null && !schoolClassDTO.getStudentDTOList().isEmpty()){\n            List<Student> studentList = new ArrayList<>(schoolClassDTO.getStudentDTOList().size());\n            for (StudentDTO studentDTO : schoolClassDTO.getStudentDTOList()) {\n                Student student = new Student();\n                BeanUtils.copyProperties(studentDTO,student);\n                student.setSchoolClass(schoolClass);\n                studentList.add(student);\n            }\n//            schoolClass.setStudentList(studentList);\n            studentRepository.save(studentList);\n        }\n        return null;\n    }\n\n\n    /**\n     * \u6839\u636eid\u5220\u9664\n     * @param id\n     */\n    @Override\n    public void deleteById(Long id) {\n        schoolClassRepository.delete(id);\n    }\n\n    /**\n     * \u5206\u9875\u67e5\u8be2\n     * @param pageable\n     * @return\n     */\n    @Override\n    public Page<SchoolClassDTO> findByPage(Pageable pageable) {\n        Page<SchoolClass> page = schoolClassRepository.findAll(pageable);\n        return page.map(new Converter<SchoolClass, SchoolClassDTO>() {\n            @Override\n            public SchoolClassDTO convert(SchoolClass schoolClass) {\n                SchoolClassDTO schoolClassDTO = new SchoolClassDTO();\n                BeanUtils.copyProperties(schoolClass,schoolClassDTO);\n                return schoolClassDTO;\n            }\n        });\n    }\n}']],["h3","7 \u5728 web.rest \u5305\u4e0b\u5efa SchoolClassResource \u7c7b\uff0c\u5b9e\u73b0 rest api \u63a5\u53e3"],["pre",{lang:null,highlighted:'<span class="token operator">/</span><span class="token operator">/</span>\u5c06\u7c7b\u521b\u5efa\u4e3aspring bean<span class="token punctuation">,</span>\u8be5\u6ce8\u89e3\u5305\u542b\u4e86<span class="token variable">@Controller</span>\n<span class="token operator">/</span><span class="token operator">/</span><span class="token variable">@ResponseBody</span>\u4e24\u4e2a\u6ce8\u89e3\u7684\u529f\u80fd\u3002ResponseBody\u7528\u4e8e\u5c06\u8fd4\u56de\u7684\u5bf9\u4e86\u8f6c\u6362\u6210json\n<span class="token variable">@RestController</span>\n<span class="token operator">/</span><span class="token operator">/</span>\u6dfb\u52a0\u8bbf\u95ee\u8def\u5f84\n@<span class="token function">RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/api/stu"</span><span class="token punctuation">)</span>\npublic class SchoolClassResource extends BaseResource {\n\n    <span class="token variable">@Autowired</span>\n    private SchoolClassService schoolClassService<span class="token comment" spellcheck="true">;</span>\n\n    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n     <span class="token operator">*</span> \u6dfb\u52a0\u4fdd\u5b58\n     <span class="token operator">*</span> <span class="token variable">@param</span> schoolClassDTO\n     <span class="token operator">*</span><span class="token operator">/</span>\n    @<span class="token function">RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/saveOrUpdate"</span><span class="token punctuation">)</span>\n    public ResponseDTO <span class="token function">saveOrUpdate</span><span class="token punctuation">(</span><span class="token variable">@RequestBody</span> SchoolClassDTO schoolClassDTO<span class="token punctuation">)</span>{\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>schoolClassDTO<span class="token punctuation">.</span><span class="token function">getClassNumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> || schoolClassDTO<span class="token punctuation">.</span><span class="token function">getGrade</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span>\n                || schoolClassDTO<span class="token punctuation">.</span><span class="token function">getStuNumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>{\n            return <span class="token function">getResponseDTO</span><span class="token punctuation">(</span><span class="token string">"202"</span><span class="token punctuation">,</span><span class="token string">"\u53c2\u6570\u9519\u8bef"</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        }\n        String msg <span class="token operator">=</span> schoolClassService<span class="token punctuation">.</span><span class="token function">saveOrUpdate</span><span class="token punctuation">(</span>schoolClassDTO<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">)</span>{\n            return <span class="token function">getResponseDTO</span><span class="token punctuation">(</span><span class="token string">"200"</span><span class="token punctuation">,</span><span class="token string">"\u64cd\u4f5c\u6210\u529f\uff01"</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        }\n        return <span class="token function">getResponseDTO</span><span class="token punctuation">(</span><span class="token string">"202"</span><span class="token punctuation">,</span>msg<span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    }\n\n    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n     <span class="token operator">*</span> \u6839\u636eid\u5220\u9664\n     <span class="token operator">*</span> <span class="token variable">@param</span> schoolClassDTO\n     <span class="token operator">*</span><span class="token operator">/</span>\n    @<span class="token function">RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/deleteById"</span><span class="token punctuation">)</span>\n    public ResponseDTO <span class="token function">deleteById</span><span class="token punctuation">(</span><span class="token variable">@RequestBody</span> SchoolClassDTO schoolClassDTO<span class="token punctuation">)</span>{\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>schoolClassDTO<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>{\n            <span class="token function">getResponseDTO</span><span class="token punctuation">(</span><span class="token string">"202"</span><span class="token punctuation">,</span><span class="token string">"\u53c2\u6570\u9519\u8bef\uff01"</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        }\n        schoolClassService<span class="token punctuation">.</span><span class="token function">deleteById</span><span class="token punctuation">(</span>schoolClassDTO<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        return <span class="token function">getResponseDTO</span><span class="token punctuation">(</span><span class="token string">"200"</span><span class="token punctuation">,</span><span class="token string">"\u64cd\u4f5c\u6210\u529f"</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    }\n\n    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n     <span class="token operator">*</span> \u5206\u9875\u67e5\u8be2\n     <span class="token operator">*</span> <span class="token variable">@param</span> pageable\n     <span class="token operator">*</span> <span class="token variable">@return</span>\n     <span class="token operator">*</span><span class="token operator">/</span>\n    @<span class="token function">RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/findByPage"</span><span class="token punctuation">)</span>\n    public ResponseDTO<span class="token operator">&lt;</span>SchoolClassDTO<span class="token operator">></span> <span class="token function">findByPage</span><span class="token punctuation">(</span><span class="token variable">@PageableDefault</span> Pageable pageable<span class="token punctuation">)</span>{\n        return <span class="token function">getResponseDTO</span><span class="token punctuation">(</span><span class="token string">"200"</span><span class="token punctuation">,</span><span class="token string">"\u64cd\u4f5c\u6210\u529f"</span><span class="token punctuation">,</span>schoolClassService<span class="token punctuation">.</span><span class="token function">findByPage</span><span class="token punctuation">(</span>pageable<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    }\n\n    public <span class="token keyword">static</span> void <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> {\n        Date date <span class="token operator">=</span> new <span class="token function">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">printf</span><span class="token punctuation">(</span>date<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    }\n\n}'},["code",'//\u5c06\u7c7b\u521b\u5efa\u4e3aspring bean,\u8be5\u6ce8\u89e3\u5305\u542b\u4e86@Controller\n//@ResponseBody\u4e24\u4e2a\u6ce8\u89e3\u7684\u529f\u80fd\u3002ResponseBody\u7528\u4e8e\u5c06\u8fd4\u56de\u7684\u5bf9\u4e86\u8f6c\u6362\u6210json\n@RestController\n//\u6dfb\u52a0\u8bbf\u95ee\u8def\u5f84\n@RequestMapping("/api/stu")\npublic class SchoolClassResource extends BaseResource {\n\n    @Autowired\n    private SchoolClassService schoolClassService;\n\n    /**\n     * \u6dfb\u52a0\u4fdd\u5b58\n     * @param schoolClassDTO\n     */\n    @RequestMapping("/saveOrUpdate")\n    public ResponseDTO saveOrUpdate(@RequestBody SchoolClassDTO schoolClassDTO){\n        if (schoolClassDTO.getClassNumber() == null || schoolClassDTO.getGrade() == null\n                || schoolClassDTO.getStuNumber() == null){\n            return getResponseDTO("202","\u53c2\u6570\u9519\u8bef",null);\n        }\n        String msg = schoolClassService.saveOrUpdate(schoolClassDTO);\n        if (StringUtils.isEmpty(msg)){\n            return getResponseDTO("200","\u64cd\u4f5c\u6210\u529f\uff01", null);\n        }\n        return getResponseDTO("202",msg,null);\n    }\n\n    /**\n     * \u6839\u636eid\u5220\u9664\n     * @param schoolClassDTO\n     */\n    @RequestMapping("/deleteById")\n    public ResponseDTO deleteById(@RequestBody SchoolClassDTO schoolClassDTO){\n        if (schoolClassDTO.getId() == null){\n            getResponseDTO("202","\u53c2\u6570\u9519\u8bef\uff01",null);\n        }\n        schoolClassService.deleteById(schoolClassDTO.getId());\n        return getResponseDTO("200","\u64cd\u4f5c\u6210\u529f",null);\n    }\n\n    /**\n     * \u5206\u9875\u67e5\u8be2\n     * @param pageable\n     * @return\n     */\n    @RequestMapping("/findByPage")\n    public ResponseDTO<SchoolClassDTO> findByPage(@PageableDefault Pageable pageable){\n        return getResponseDTO("200","\u64cd\u4f5c\u6210\u529f",schoolClassService.findByPage(pageable));\n    }\n\n    public static void main(String[] args) {\n        Date date = new Date();\n        System.out.printf(date.getTime()+"");\n    }\n\n}']],["p","\u63a5\u53e3\u4ee3\u7801\u5b8c\u6210\uff0c\u7528 postman \u8fdb\u884c\u63a5\u53e3\u7684\u6d4b\u8bd5"]],meta:{title:"OneToMany",tag:"\u540e\u7aef\u5f00\u53d1",publishDate:"2018-03-13T00:00:00.000Z",filename:"posts/BEresource/one-to-many.md"}}}});